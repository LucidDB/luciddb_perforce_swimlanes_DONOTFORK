# Hibernate repository configuration file.

# Configure Hibernate usage
org.eigenbase.enki.implementationType=ENKI_HIBERNATE

# Configure mysql connection
org.eigenbase.enki.hibernate.connection.driver_class=org.hsqldb.jdbcDriver
org.eigenbase.enki.hibernate.connection.url=jdbc:hsqldb:${FARRAGO_CATALOG_DIR}/FarragoCatalog;shutdown=true
org.eigenbase.enki.hibernate.connection.username=SA
org.eigenbase.enki.hibernate.connection.password=
org.eigenbase.enki.hibernate.createSchema=VIEW

org.eigenbase.enki.hibernate.tablePrefix=FEM_

org.eigenbase.enki.hibernate.connection.max_idle=10

hibernate.current_session_context_class=thread
hibernate.transaction.factory_class=org.hibernate.transaction.JDBCTransactionFactory

# N.B.: If running inside a J2EE container (such as JBoss), delete 
# hibernate.transaction.factory_class and use the following (modified to
# match your container):
# hibernate.transaction.manager_lookup_class=org.hibernate.transaction.JBossTransactionManagerLookup


# Hibernate configuration parameters.  These property names are the
# property names available via org.hibernate.cfg.Configuration's
# setProperty(String, String) method.

# Configure Hibernate's SQL dialect for hsqldb
hibernate.dialect=org.hibernate.dialect.HSQLDialect

# Override cache settings from hibernate-base-config.xml
hibernate.cache.use_second_level_cache=true
hibernate.cache.use_query_cache=true

# Flush session after ever N type lookup insertions
org.eigenbase.enki.hibernate.typeLookupFlushSize=250

## Allows multiple session factories per VM (as opposed to Hibernate's built-in
## EhCacheProvider)
hibernate.cache.provider_class=net.sf.ehcache.hibernate.EhCacheProvider
net.sf.ehcache.configurationResourceName=/FarragoEhCache.xml

# Use batch fetching
hibernate.default_batch_fetch_size=25
hibernate.jdbc.batch_size=25

# Dump SQL to stdout.  This breaks diff-based unit tests.  An alternative is
# setting "org.hibernate.SQL.level=FINE" in trace properties.
#hibernate.show_sql=true

# Configure (for Farrago dev environment) SQL to delete and create storage
# These properties are used only at build time and may be deleted from 
# production storage configurations.
net.sf.farrago.dev.dropStorage=
net.sf.farrago.dev.createStorage=SET WRITE_DELAY 0;
net.sf.farrago.dev.connection.driver_class=org.hsqldb.jdbcDriver
net.sf.farrago.dev.connection.url=jdbc:hsqldb:${FARRAGO_CATALOG_DIR}/FarragoCatalog;shutdown=true
net.sf.farrago.dev.connection.schema.url=jdbc:hsqldb:${FARRAGO_CATALOG_DIR}/FarragoCatalog;shutdown=true
net.sf.farrago.dev.connection.username=SA
net.sf.farrago.dev.connection.password=
