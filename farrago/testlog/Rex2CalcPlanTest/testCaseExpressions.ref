O c,11, s4;
I s4;
L bo, c,11, s4, bo, bo, s4, bo, s4, s4, bo;
S bo;
C bo, bo, s4, s4, c,4, s4, c,11, c,0, vc,5;
V 1, 0, 10, 1, 0x7761656C /* wael */, 2, 0x7761656C7320636C6F6E65 /* waels clone */,  /* <NULL> */, 0x3232303034 /* 22004 */;
T;
GT L0, I0, C2 /* 0: >($t0, $t22) */;
JMPT @4, L0 /* 1: */;
MOVE S0, C0 /* 2: */;
RETURN /* 3: */;
MOVE S0, C1 /* 4: */;
ADD L2, C3, C3 /* 5: +($t10, $t10) */;
EQ L3, L2, C3 /* 6: =($t11, $t10) */;
JMPF @11, L3 /* 7: */;
JMPN @11, L3 /* 8: */;
CALL 'castA(L1, C4) /* 9: */;
JMP @17 /* 10: */;
EQ L4, L2, C5 /* 11: =($t11, $t14) */;
JMPF @16, L4 /* 12: */;
JMPN @16, L4 /* 13: */;
MOVE L1, C6 /* 14: */;
JMP @17 /* 15: */;
CALL 'castA(L1, C7) /* 16: CASE($t12, $t13, $t15, $t16, $t18) */;
EQ L6, C3, C3 /* 17: =($t10, $t10) */;
JMPF @23, L6 /* 18: */;
JMPN @23, L6 /* 19: */;
ADD L7, L2, C5 /* 20: +($t11, $t14) */;
MOVE L5, L7 /* 21: */;
JMP @25 /* 22: */;
ADD L8, C5, C2 /* 23: +($t14, $t22) */;
MOVE L5, L8 /* 24: CASE($t20, $t21, $t23) */;
REF O0, L1 /* 25: */;
ISNULL L9, L5 /* 26: */;
JMPF @30, L9 /* 27: */;
RAISE C8 /* 28: */;
RETURN /* 29: */;
REF O1, L5 /* 30: */;
RETURN /* 31: */;
