0: jdbc:farrago:> -- $Id: //open/dt/dev/farrago/unitsql/ddl/udt.sql#5 $
0: jdbc:farrago:> -- Test DDL for user-defined types
0: jdbc:farrago:> 
0: jdbc:farrago:> create schema udttest;
0: jdbc:farrago:> 
0: jdbc:farrago:> set schema 'udttest';
0: jdbc:farrago:> 
0: jdbc:farrago:> set path 'udttest';
0: jdbc:farrago:> 
0: jdbc:farrago:> -- basic distinct types
0: jdbc:farrago:> create type dollar_currency as double;
0: jdbc:farrago:> create type euro_currency as double;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  can't specify NOT INSTANTIABLE for distinct type
0: jdbc:farrago:> create type simolean_currency as double not instantiable;
Error: DDL validation error near line 1, column 34: Cannot define distinct datatype "UDTTEST"."SIMOLEAN_CURRENCY" as both FINAL and NOT INSTANTIABLE (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  can't specify NOT FINAL for distinct type
0: jdbc:farrago:> create type simolean_currency as double not final;
Error: DDL validation error near line 1, column 34: Must define distinct datatype "UDTTEST"."SIMOLEAN_CURRENCY" as FINAL (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should succeed
0: jdbc:farrago:> create type simolean_currency as double final;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- basic structured type
0: jdbc:farrago:> create type rectilinear_coord as (
. . . . . . . . >     x double,
. . . . . . . . >     y double
. . . . . . . . > ) final;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- structured type with default values
0: jdbc:farrago:> create type rectilinear_coord0 as (
. . . . . . . . >     x double default 0,
. . . . . . . . >     y double default 0
. . . . . . . . > ) final;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- structured type nesting
0: jdbc:farrago:> create type circle as (
. . . . . . . . >     center rectilinear_coord0,
. . . . . . . . >     radius double default 1
. . . . . . . . > ) final;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- explicit instantiability declaration
0: jdbc:farrago:> create type ellipse as (
. . . . . . . . >     major_axis double,
. . . . . . . . >     minor_axis double
. . . . . . . . > ) final instantiable;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  must specify finality
0: jdbc:farrago:> create type square as (
. . . . . . . . >     side_length double
. . . . . . . . > );
Error: DDL validation error near line 1, column 41: Must define structured object type "UDTTEST"."SQUARE" as FINAL (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  can never specify FINAL+NOT INSTANTIABLE for anything
0: jdbc:farrago:> create type square as (
. . . . . . . . >     side_length double
. . . . . . . . > ) final not instantiable;
Error: DDL validation error near line 1, column 41: Cannot define structured object type "UDTTEST"."SQUARE" as both FINAL and NOT INSTANTIABLE (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  can't specify INSTANTIABLE+NOT FINAL for structured type...yet!
0: jdbc:farrago:> create type square as (
. . . . . . . . >     side_length double
. . . . . . . . > ) instantiable not final;
Error: DDL validation error near line 1, column 41: Must define structured object type "UDTTEST"."SQUARE" as FINAL (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  can't specify NOT FINAL for structured type...yet!
0: jdbc:farrago:> create type square as (
. . . . . . . . >     side_length double
. . . . . . . . > ) not final;
Error: DDL validation error near line 1, column 41: Must define structured object type "UDTTEST"."SQUARE" as FINAL (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  can't specify NOT FINAL+NOT INSTANTIABLE for 
0: jdbc:farrago:> -- structured type...yet!
0: jdbc:farrago:> create type square as (
. . . . . . . . >     side_length double
. . . . . . . . > ) not final not instantiable;
Error: DDL validation error near line 1, column 41: Must define structured object type "UDTTEST"."SQUARE" as FINAL (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  at least one attribute required
0: jdbc:farrago:> create type no_attributes as () final;
Error: net.sf.farrago.parser.impl.ParseException: Encountered ")" at line 1, column 31.
Was expecting one of:
    <IDENTIFIER> ...
    <QUOTED_IDENTIFIER> ... (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  unknown attribute type
0: jdbc:farrago:> create type bad_attrtype as (
. . . . . . . . >     x foobar
. . . . . . . . > ) final;
Error: DDL validation error near line 1, column 35: Reference to unknown datatype "FOOBAR" (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  constraints not allowed on attributes
0: jdbc:farrago:> create type bad_constraint as (
. . . . . . . . >     x int not null
. . . . . . . . > ) final;
Error: net.sf.farrago.parser.impl.ParseException: Encountered "not" at line 1, column 43.
Was expecting one of:
    "CHARACTER" ...
    "COLLATE" ...
    "DEFAULT" ...
    "(" ...
    ")" ...
    "," ... (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  default value type mismatch
0: jdbc:farrago:> create type bad_default as (
. . . . . . . . >     x double default 'zero'
. . . . . . . . > ) final;
Error: DDL validation error near line 1, column 34: Type mismatch in DEFAULT clause for structured type attribute "X";
column type family is NUMERIC but default value type family is CHARACTER (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  self-referencing nested type
0: jdbc:farrago:> create type linked_list_node as (
. . . . . . . . >     x int,
. . . . . . . . >     next linked_list_node
. . . . . . . . > ) final;
Error: Object definition contains recursive cycle (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  mutual nesting
0: jdbc:farrago:> create schema cardiopulmonary
. . . . . . . . > create type heart as (
. . . . . . . . >     partner lung
. . . . . . . . > ) final
. . . . . . . . > create type lung as (
. . . . . . . . >     partner heart
. . . . . . . . > ) final
. . . . . . . . > ;
Error: Object definition contains recursive cycle (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  can't specify UDT for distinct type
0: jdbc:farrago:> create type simolean_currency as ellipse final;
Error: DDL validation error near line 1, column 34: Must define representation for distinct datatype "UDTTEST"."SIMOLEAN_CURRENCY" as a predefined type. (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test out-of-order definitions
0: jdbc:farrago:> create schema musculoskeletal
. . . . . . . . > create type muscle as (
. . . . . . . . >     s skeleton
. . . . . . . . > ) final
. . . . . . . . > create type skeleton as (
. . . . . . . . >     x double
. . . . . . . . > ) final
. . . . . . . . > ;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test path resolution and explicit qualification
0: jdbc:farrago:> 
0: jdbc:farrago:> create type tire as (
. . . . . . . . >     inner_radius double,
. . . . . . . . >     outer_radius double,
. . . . . . . . >     tread double
. . . . . . . . > ) final;
0: jdbc:farrago:> 
0: jdbc:farrago:> create schema spare_types
. . . . . . . . > create type tire as (
. . . . . . . . >     radius double,
. . . . . . . . >     tread double
. . . . . . . . > ) final
. . . . . . . . > create type toothbrush as (
. . . . . . . . >     firmness double,
. . . . . . . . >     length double,
. . . . . . . . >     head_angle double,
. . . . . . . . >     electric boolean
. . . . . . . . > ) final
. . . . . . . . > ;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test explicit qualification
0: jdbc:farrago:> create type toiletries as (
. . . . . . . . >     tb spare_types.toothbrush,
. . . . . . . . >     c udttest.circle
. . . . . . . . > ) final;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  wrong schema
0: jdbc:farrago:> create type bad_schema as (
. . . . . . . . >     tb udttest.toothbrush
. . . . . . . . > ) final;
Error: DDL validation error near line 1, column 33: Reference to unknown user-defined type "TOOTHBRUSH" (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test implicit path lookup
0: jdbc:farrago:> 
0: jdbc:farrago:> set path 'spare_types';
0: jdbc:farrago:> 
0: jdbc:farrago:> create type washroom as (
. . . . . . . . >     tb toothbrush
. . . . . . . . > ) final;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should fail:  not on path
0: jdbc:farrago:> create type line_segment as (
. . . . . . . . >     endpoint1 rectilinear_coord,
. . . . . . . . >     endpoint2 rectilinear_coord
. . . . . . . . > ) final;
Error: DDL validation error near line 1, column 35: Reference to unknown datatype "RECTILINEAR_COORD" (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test tables which store typed columns
0: jdbc:farrago:> -- (put udt columns first to test offset flattening)
0: jdbc:farrago:> set path 'udttest';
0: jdbc:farrago:> 
0: jdbc:farrago:> create table stored_coord_list(
. . . . . . . . >     coord1 rectilinear_coord0,
. . . . . . . . >     coord2 rectilinear_coord0,
. . . . . . . . >     pair_id int not null primary key
. . . . . . . . > );
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test views which access typed columns
0: jdbc:farrago:> create view viewed_coord_list as
. . . . . . . . > select scl.pair_id, scl.coord1, scl.coord2.y
. . . . . . . . > from stored_coord_list scl;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test default constructor (null default value)
0: jdbc:farrago:> select t.p.x
. . . . . . . . > from (select new rectilinear_coord() as p from (values(0))) as t;
+----+
| X  |
+----+
|    |
+----+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test default constructor (non-null default value)
0: jdbc:farrago:> select t.p.x
. . . . . . . . > from (select new rectilinear_coord0() as p from (values(0))) as t;
+------+
|  X   |
+------+
| 0.0  |
+------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- FIXME:  test nested constructors
0: jdbc:farrago:> -- select t.c.radius, t.c.center.y
0: jdbc:farrago:> -- from (select new circle() as c from (values(0))) as t;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test storage
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into stored_coord_list 
. . . . . . . . > values(new rectilinear_coord0(), new rectilinear_coord0(), 1);
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into stored_coord_list 
. . . . . . . . > values(new rectilinear_coord0(), new rectilinear_coord0(), 2);
0: jdbc:farrago:> 
0: jdbc:farrago:> select t.pair_id, t.coord1.x, t.coord2.y 
. . . . . . . . > from stored_coord_list t
. . . . . . . . > order by pair_id;
+----------+------+------+
| PAIR_ID  |  X   |  Y   |
+----------+------+------+
| 1        | 0.0  | 0.0  |
| 2        | 0.0  | 0.0  |
+----------+------+------+
0: jdbc:farrago:> 
0: jdbc:farrago:> update stored_coord_list set pair_id=-pair_id;
0: jdbc:farrago:> 
0: jdbc:farrago:> select t.pair_id, t.coord1.x, t.coord2.y 
. . . . . . . . > from stored_coord_list t
. . . . . . . . > order by pair_id;
+----------+------+------+
| PAIR_ID  |  X   |  Y   |
+----------+------+------+
| -2       | 0.0  | 0.0  |
| -1       | 0.0  | 0.0  |
+----------+------+------+
0: jdbc:farrago:> 
0: jdbc:farrago:> delete from stored_coord_list t where t.coord1.x=0 and t.pair_id=-1;
0: jdbc:farrago:> 
0: jdbc:farrago:> select t.pair_id, t.coord1.x, t.coord2.y 
. . . . . . . . > from stored_coord_list t
. . . . . . . . > order by pair_id;
+----------+------+------+
| PAIR_ID  |  X   |  Y   |
+----------+------+------+
| -2       | 0.0  | 0.0  |
+----------+------+------+
0: jdbc:farrago:> 
0: jdbc:farrago:> !set outputformat csv
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select scl.pair_id, scl.coord1.y, scl.coord2.x
. . . . . . . . > from stored_coord_list scl;
'column0'
'FennelToIteratorConverter'
'  FennelRenameRel(fieldNames=[[PAIR_ID, Y, X]])'
'    FtrsIndexScanRel(table=[[LOCALDB, UDTTEST, STORED_COORD_LIST]], projection=[[4, 1, 2]], index=[SYS$CONSTRAINT_INDEX$STORED_COORD_LIST$SYS$PRIMARY_KEY], preserveOrder=[false])'
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select v.pair_id, v.coord1.x, v.coord1.y, v.y as y2 
. . . . . . . . > from viewed_coord_list v;
'column0'
'IterCalcRel(PAIR_ID=[$4], X=[$0], Y=[$1], Y2=[$3])'
'  FennelToIteratorConverter'
'    FtrsIndexScanRel(table=[[LOCALDB, UDTTEST, STORED_COORD_LIST]], projection=[*], index=[SYS$CONSTRAINT_INDEX$STORED_COORD_LIST$SYS$PRIMARY_KEY], preserveOrder=[false])'
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
