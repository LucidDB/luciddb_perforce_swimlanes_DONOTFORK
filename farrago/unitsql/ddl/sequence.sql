-- $Id$

create schema sequence_ddl_test;
set schema 'sequence_ddl_test';

-- double not allowed
create table t(
    d double generated always as identity primary key);

-- scale must be zero
create table t(
    d decimal(10,1) generated always as identity primary key);

-- parameters must be in range
create table t(
    t tinyint generated always as identity
        (maxvalue 200) primary key);

-- increment cannot be zero
create table t(
    s smallint generated always as identity
        (increment by 0) primary key);

-- max must be greater than min
create table t(
    i int generated always as identity
        (minvalue 500 maxvalue 100) primary key);

-- start value must be between min and max
create table t(
    i int generated always as identity
        (minvalue 100 maxvalue 500 start with 1000) primary key);

-- tables contain at most one identity column
create table t(
    i int generated always as identity
        (minvalue 100 maxvalue 500) primary key,
    j int generated always as identity);

-- out of range
create table t(
    b bigint generated always as identity
        (minvalue 12345678900987654321) primary key,
    j int);
create table t(
    b bigint generated always as identity
        (maxvalue 1234567890.01) primary key,
    j int);

-- too many values
create table t(
    i int generated always as identity
        (minvalue 100 maxvalue 500 
        start with 350 increment by 100) primary key,
    j int);
insert into t (j) values (1), (2);
insert into t (j) values (3);

select * from t;
drop table t;

-- allow cycles
create table t(
    d decimal(10,0) generated always as identity
        (minvalue 100 maxvalue 500 
        start with 350 increment by 200 cycle) primary key,
    j int);

-- 350, 100, 300
insert into t (j) values (1), (2), (3);
-- 500, 100 (fail), ...
insert into t (j) values (4), (5), (6);
-- 300 (fail)
insert into t (j) values (7);
-- 500
insert into t (j) values (8);

select * from t;
drop table t;

-- reverse increment, big values
create table t(
    b bigint generated always as identity
        (minvalue 1000000000100 maxvalue 1000000000500 
        start with 1000000000450 increment by -200 cycle) primary key,
    j int);

-- [10000000000+] 450, 250, 500, 300, 100 
insert into t (j) values (1), (2), (3), (4), (5);

select * from t;
drop table t;

----------------------------------------------------------------------
-- ALTER COLUMN
----------------------------------------------------------------------

create table t(
    i int primary key,
    b bigint generated by default as identity
        (minvalue -10 maxvalue 0 start with -5));

-- alter sequence before it is started
alter table t alter column b 
    set minvalue -5;

insert into t (i) values (1), (2), (3), (4), (5), (6);

select * from t;
truncate table t;

-- out of range
alter table t alter column b 
    restart with -20;

alter table t alter column b 
    set minvalue 100;

alter table t alter column b
    restart with 0 set increment by -1;

-- insert all values: 0, -1, -2, ... -5
insert into t (i) values (1), (2), (3), (4), (5), (6);

insert into t (i) values (7);

select * from t;
truncate table t;

-- insert -7, -9, 0, 2
alter table t alter column b
    set minvalue -10 set increment by -2 set cycle;

insert into t (i) values (1), (2), (3), (4);

select * from t;
truncate table t;

-- single value sequence
create table s(
    i int primary key,
    d decimal(10,0) generated always as identity
        (minvalue 100 maxvalue 100));

insert into s (i) values (5);
insert into s (i) values (10);

alter table s alter column d 
    set cycle;

insert into s (i) values (10);
select * from s;
truncate table s;

----------------------------------------------------------------------
-- GENERATED ALWAYS
----------------------------------------------------------------------

insert into t values (10, -10);

insert into s values (20, 20);

