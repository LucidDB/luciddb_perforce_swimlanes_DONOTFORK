> -- $Id$
> 
> -----------------------------
> -- Tests for UPDATE statement
> -----------------------------
> set schema 'upsales';
> create schema upsales;
> create table upemps(
>   empno int primary key,
>   name varchar(10),
>   deptno int);
> insert into upemps
>   values
>     (1, 'Fred', 20),
>     (2, 'Bill', 10),
>     (3, 'Joe', 10);
> select * from upemps;
+--------+-------+---------+
| EMPNO  | NAME  | DEPTNO  |
+--------+-------+---------+
| 1      | Fred  | 20      |
| 2      | Bill  | 10      |
| 3      | Joe   | 10      |
+--------+-------+---------+
> -- update with no where; modifying primary key
> -- currently gives 'Duplicate key detected' - this is a bug
> update upemps
>   set empno = empno + 1;
Error: Duplicate key detected:  [ 2 ] (state=,code=0)
> select * from upemps;
+--------+-------+---------+
| EMPNO  | NAME  | DEPTNO  |
+--------+-------+---------+
| 1      | Fred  | 20      |
| 2      | Bill  | 10      |
| 3      | Joe   | 10      |
+--------+-------+---------+
> -- as above, but large gap to avoid bug
> update upemps
>   set empno = empno + 5;
> select * from upemps;
+--------+-------+---------+
| EMPNO  | NAME  | DEPTNO  |
+--------+-------+---------+
| 6      | Fred  | 20      |
| 7      | Bill  | 10      |
| 8      | Joe   | 10      |
+--------+-------+---------+
> -- update two columns and use a where clause
> update upemps
>   set empno = empno + 5,
>     name = upper(name)
> where deptno = 10;
> select * from upemps;
+--------+-------+---------+
| EMPNO  | NAME  | DEPTNO  |
+--------+-------+---------+
| 6      | Fred  | 20      |
| 12     | BILL  | 10      |
| 13     | JOE   | 10      |
+--------+-------+---------+
> -- populate using a correlated subquery
> update upemps as u
>   set empno = empno + (
>     select count(*)
>     from upemps
>     where deptno = u.deptno);
> select * from upemps;
+--------+-------+---------+
| EMPNO  | NAME  | DEPTNO  |
+--------+-------+---------+
| 7      | Fred  | 20      |
| 14     | BILL  | 10      |
| 15     | JOE   | 10      |
+--------+-------+---------+
> -- drive from subquery in where clause
> update upemps
>   set name = lower(name),
>     deptno = -deptno
> where deptno in (select min(deptno) from upemps);
> select * from upemps;
+--------+-------+---------+
| EMPNO  | NAME  | DEPTNO  |
+--------+-------+---------+
| 7      | Fred  | 20      |
| 14     | bill  | -10     |
| 15     | joe   | -10     |
+--------+-------+---------+
> -- update column from scalar subquery
> -- note that if query returns 0 rows, null is assigned to column
> -- note that we use correlating variable 'u' but without 'as' this time
> update upemps u
>   set name = (
>     select name from upemps where empno = u.empno + 1);
> select * from upemps;
+--------+-------+---------+
| EMPNO  | NAME  | DEPTNO  |
+--------+-------+---------+
| 7      |       | 20      |
| 14     | joe   | -10     |
| 15     |       | -10     |
+--------+-------+---------+
> -- update using values as subquery
> update upemps
>   set deptno = (values (10));
> select * from upemps;
+--------+-------+---------+
| EMPNO  | NAME  | DEPTNO  |
+--------+-------+---------+
| 7      |       | 10      |
| 14     | joe   | 10      |
| 15     |       | 10      |
+--------+-------+---------+
> -- restore original data
> truncate table upemps;
> insert into upemps
>   values
>     (1,'Fred',20),
>     (2,'Bill', 10),
>     (3,'Joe',10);
> -- update two columns from same query
> -- oracle supports this but we do not; expect validation error
> update upemps
>   set (empno, deptno) = (values (empno, deptno));
Error: org.eigenbase.sql.parser.SqlParseException: Encountered "(" at line 2, column 7.
Was expecting one of:
    <IDENTIFIER> ...
    <QUOTED_IDENTIFIER> ... (state=,code=0)
> -- End update.sql
> 
> 
> !quit
