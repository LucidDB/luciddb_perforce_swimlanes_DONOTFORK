> -- $Id$
> -- Test queries which abuse the implementation of conversion between Fennel 
> -- and Iterator calling convention.
> 
> set schema 'sales';
> 
> -- NOTE: many of the union.sql and cartesians.sql queries are good tests
> --       of Fennel/Iterator conversion as well.
> 
> -- force usage of Java calculator
> alter system set "calcVirtualMachine" = 'CALCVM_JAVA';
> 
> -- Planner will use a single FennelToIteratorConverter instance for both 
> -- references to depts. Make sure we keep them straight.  (Yes this query
> -- is highly contrived.)
> explain plan for 
> select * from 
>     (select deptno + 1, name from depts) as d,
>     (select deptno as id, name from depts union select empno as id, name from emps) as n
> where
>     d.name = n.name;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                               column0                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| IterCalcRel(expr#0..3=[{inputs}], expr#4=[=($t1, $t3)], proj#0..3=[{exprs}], $condition=[$t4])                                                                       |
|   FennelToIteratorConverter                                                                                                                                          |
|     FennelCartesianProductRel(leftouterjoin=[false])                                                                                                                 |
|       IteratorToFennelConverter                                                                                                                                      |
|         IterCalcRel(expr#0..1=[{inputs}], expr#2=[1], expr#3=[+($t0, $t2)], EXPR$0=[$t3], NAME=[$t1])                                                                |
|           FennelToIteratorConverter                                                                                                                                  |
|             FtrsIndexScanRel(table=[[LOCALDB, SALES, DEPTS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$DEPTS$SYS$PRIMARY_KEY], preserveOrder=[false])             |
|       FennelBufferRel(inMemory=[false], multiPass=[true])                                                                                                            |
|         FennelSortRel(key=[[0, 1]], discardDuplicates=[true])                                                                                                        |
|           IteratorToFennelConverter                                                                                                                                  |
|             IterConcatenateRel(all=[true])                                                                                                                           |
|               FennelToIteratorConverter                                                                                                                              |
|                 FennelRenameRel(fieldNames=[[ID, NAME]])                                                                                                             |
|                   FtrsIndexScanRel(table=[[LOCALDB, SALES, DEPTS]], projection=[[0, 1]], index=[SYS$CONSTRAINT_INDEX$DEPTS$SYS$PRIMARY_KEY], preserveOrder=[false])  |
|               FennelToIteratorConverter                                                                                                                              |
|                 FennelRenameRel(fieldNames=[[ID, NAME]])                                                                                                             |
|                   FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[[0, 1]], index=[EMPS_UX], preserveOrder=[false])                                      |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------+
> 
> -- Execute to verify output.
> select * from 
>     (select deptno + 1 as dnoplus, name from depts) as d,
>     (select deptno as id, name from depts union select empno as id, name from emps) as n
> where
>     d.name = n.name
> order by dnoplus;
+----------+------------+-----+------------+
| DNOPLUS  |    NAME    | ID  |   NAME0    |
+----------+------------+-----+------------+
| 11       | Sales      | 10  | Sales      |
| 21       | Marketing  | 20  | Marketing  |
| 31       | Accounts   | 30  | Accounts   |
+----------+------------+-----+------------+
> 
> -- Planner will use a single IteratorToFennelConverter instance for both
> -- references to depts.  Make sure we keep them straight as well.
> explain plan for 
> select t1.deptno, t1.name, t2.deptno as deptno2, t2.name as name2
> from (select deptno + 1 as deptno, name from sales.depts) as t1,
>      (select deptno + 1 as deptno, name from sales.depts) as t2;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                           column0                                                                           |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                                   |
|   FennelRenameRel(fieldNames=[[DEPTNO, NAME, DEPTNO2, NAME2]])                                                                                              |
|     FennelCartesianProductRel(leftouterjoin=[false])                                                                                                        |
|       IteratorToFennelConverter                                                                                                                             |
|         IterCalcRel(expr#0..1=[{inputs}], expr#2=[1], expr#3=[+($t0, $t2)], DEPTNO=[$t3], NAME=[$t1])                                                       |
|           FennelToIteratorConverter                                                                                                                         |
|             FtrsIndexScanRel(table=[[LOCALDB, SALES, DEPTS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$DEPTS$SYS$PRIMARY_KEY], preserveOrder=[false])    |
|       FennelBufferRel(inMemory=[false], multiPass=[true])                                                                                                   |
|         IteratorToFennelConverter                                                                                                                           |
|           IterCalcRel(expr#0..1=[{inputs}], expr#2=[1], expr#3=[+($t0, $t2)], DEPTNO=[$t3], NAME=[$t1])                                                     |
|             FennelToIteratorConverter                                                                                                                       |
|               FtrsIndexScanRel(table=[[LOCALDB, SALES, DEPTS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$DEPTS$SYS$PRIMARY_KEY], preserveOrder=[false])  |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
> 
> -- Execute to verify output.
> select t1.deptno, t1.name, t2.deptno as deptno2, t2.name as name2
> from (select deptno + 1 as deptno, name from sales.depts) as t1,
>      (select deptno + 1 as deptno, name from sales.depts) as t2
> order by deptno,deptno2;
+---------+------------+----------+------------+
| DEPTNO  |    NAME    | DEPTNO2  |   NAME2    |
+---------+------------+----------+------------+
| 11      | Sales      | 11       | Sales      |
| 11      | Sales      | 21       | Marketing  |
| 11      | Sales      | 31       | Accounts   |
| 21      | Marketing  | 11       | Sales      |
| 21      | Marketing  | 21       | Marketing  |
| 21      | Marketing  | 31       | Accounts   |
| 31      | Accounts   | 11       | Sales      |
| 31      | Accounts   | 21       | Marketing  |
| 31      | Accounts   | 31       | Accounts   |
+---------+------------+----------+------------+
> 
> -- Similar to previous, but without any underlying Fennel rels.
> -- Simplified from the query given in FRG-82.
> explain plan for 
> select "View1"."Foo", "View2"."Foo" as "Foo0"
> from (select * from (select cast(null as VARCHAR(1024)) as "Foo" from (values(0))) as c) as "View1",
>      (select * from (select cast(null as VARCHAR(1024)) as "Foo" from (values(0))) as c) as "View2";
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                             column0                                                                             |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                                       |
|   FennelCartesianProductRel(leftouterjoin=[false])                                                                                                              |
|     IteratorToFennelConverter                                                                                                                                   |
|       IterCalcRel(expr#0=[{inputs}], expr#1=[null], expr#2=[CAST($t1):VARCHAR(1024) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary"], Foo=[$t2])  |
|         IterOneRowRel                                                                                                                                           |
|     IteratorToFennelConverter                                                                                                                                   |
|       IterCalcRel(expr#0=[{inputs}], expr#1=[null], expr#2=[CAST($t1):VARCHAR(1024) CHARACTER SET "ISO-8859-1" COLLATE "ISO-8859-1$en_US$primary"], Foo=[$t2])  |
|         IterOneRowRel                                                                                                                                           |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
> 
> -- Execute to verify output.
> select "View1"."Foo", "View2"."Foo" as "Foo0"
> from (select * from (select cast(null as VARCHAR(1024)) as "Foo" from (values(0))) as c) as "View1",
>      (select * from (select cast(null as VARCHAR(1024)) as "Foo" from (values(0))) as c) as "View2";
+------+-------+
| Foo  | Foo0  |
+------+-------+
|      |       |
+------+-------+
> 
> !quit
