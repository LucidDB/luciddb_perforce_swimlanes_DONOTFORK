0: jdbc:farrago:> -- $Id: //open/lu/dev_lcs/farrago/unitsql/optimizer/calc.sql#1 $
0: jdbc:farrago:> -- Test queries which instantiate the calculator (filter and/or project)
0: jdbc:farrago:> 
0: jdbc:farrago:> set schema 'sales';
0: jdbc:farrago:> 
0: jdbc:farrago:> -- force usage of Fennel calculator
0: jdbc:farrago:> alter system set "calcVirtualMachine" = 'CALCVM_FENNEL';
0: jdbc:farrago:> 
0: jdbc:farrago:> -- filter which returns one row
0: jdbc:farrago:> explain plan for
. . . . . . . . > select name from emps where lower(name) = 'wilma';
+-------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                  column0                                                                  |
+-------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                 |
|   FennelCalcRel(expr#0=[{inputs}], expr#1=[LOWER($t0)], expr#2=[_ISO-8859-1'wilma'], expr#3=[=($t1, $t2)], NAME=[$t0], $condition=[$t3])  |
|     FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[[1]], index=[EMPS_UX], preserveOrder=[false])                            |
+-------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- project
0: jdbc:farrago:> explain plan for
. . . . . . . . > select lower(name), empid + 1, empid / 1, empid - 1, empid from sales.emps;
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                                                          column0                                                                                                           |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                                                                                                  |
|   FennelCalcRel(expr#0..9=[{inputs}], expr#10=[LOWER($t1)], expr#11=[1], expr#12=[+($t5, $t11)], expr#13=[/($t5, $t11)], expr#14=[-($t5, $t11)], EXPR$0=[$t10], EXPR$1=[$t12], EXPR$2=[$t13], EXPR$3=[$t14], EMPID=[$t5])  |
|     FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$EMPS$SYS$PRIMARY_KEY], preserveOrder=[false])                                                                             |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- dtbug#32
0: jdbc:farrago:> explain plan for
. . . . . . . . > select 1 + 2 from (values (3));
+-------------------------------------------------------------------------------------------------------------+
|                                                   column0                                                   |
+-------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                   |
|   FennelCalcRel(expr#0=[{inputs}], expr#1=[3], expr#2=[1], expr#3=[2], expr#4=[+($t2, $t3)], EXPR$0=[$t4])  |
|     FennelValuesRel(tuples=[[{ 0 }]])                                                                       |
+-------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select 1 + 2 from (values (3));
+---------+
| EXPR$0  |
+---------+
| 3       |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
