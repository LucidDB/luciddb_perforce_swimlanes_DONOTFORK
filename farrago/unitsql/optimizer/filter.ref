0: jdbc:farrago:> -- $Id: //open/lu/dev_lcs/farrago/unitsql/optimizer/filter.sql#1 $
0: jdbc:farrago:> -- Test queries which execute row-by-row filters
0: jdbc:farrago:> 
0: jdbc:farrago:> set schema 'sales';
0: jdbc:farrago:> 
0: jdbc:farrago:> -- force usage of Fennel calculator
0: jdbc:farrago:> alter system set "calcVirtualMachine" = 'CALCVM_FENNEL';
0: jdbc:farrago:> 
0: jdbc:farrago:> -- filter which returns one row
0: jdbc:farrago:> select name from emps where empno = 120;
+--------+
|  NAME  |
+--------+
| Wilma  |
+--------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- filter which returns two rows
0: jdbc:farrago:> select name from emps where empno = 110;
+-------+
| NAME  |
+-------+
| Eric  |
| John  |
+-------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- verify plans
0: jdbc:farrago:> !set outputformat csv
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select name from emps where empno = 120;
'column0'
'FennelToIteratorConverter'
'  FennelCalcRel(expr#0..1=[{inputs}], expr#2=[120], expr#3=[=($t0, $t2)], NAME=[$t1], $condition=[$t3])'
'    FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[[0, 1]], index=[EMPS_UX], preserveOrder=[false])'
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
