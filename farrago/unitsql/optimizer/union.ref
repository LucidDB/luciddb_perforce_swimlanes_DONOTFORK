0: jdbc:farrago:> -- $Id: //open/dt/dev/farrago/unitsql/optimizer/union.sql#2 $
0: jdbc:farrago:> -- Test UNION queries
0: jdbc:farrago:> 
0: jdbc:farrago:> set schema 'sales';
0: jdbc:farrago:> 
0: jdbc:farrago:> -- force usage of Java calculator
0: jdbc:farrago:> alter system set "calcVirtualMachine" = 'CALCVM_JAVA';
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test UNION without duplicates
0: jdbc:farrago:> select * from 
. . . . . . . . > (select name from emps union select name from depts)
. . . . . . . . >  order by 1;
+------------+
|    NAME    |
+------------+
| Accounts   |
| Eric       |
| Fred       |
| John       |
| Marketing  |
| Sales      |
| Wilma      |
+------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test UNION ALL without duplicates
0: jdbc:farrago:> select * from 
. . . . . . . . > (select name from emps union all select name from depts)
. . . . . . . . >  order by 1;
+------------+
|    NAME    |
+------------+
| Accounts   |
| Eric       |
| Fred       |
| John       |
| Marketing  |
| Sales      |
| Wilma      |
+------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test UNION with duplicates
0: jdbc:farrago:> select * from 
. . . . . . . . > (select name from depts union select name from depts)
. . . . . . . . >  order by 1;
+------------+
|    NAME    |
+------------+
| Accounts   |
| Marketing  |
| Sales      |
+------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test UNION ALL with duplicates
0: jdbc:farrago:> select * from 
. . . . . . . . > (select name from depts union all select name from depts)
. . . . . . . . >  order by 1;
+------------+
|    NAME    |
+------------+
| Accounts   |
| Accounts   |
| Marketing  |
| Marketing  |
| Sales      |
| Sales      |
+------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- verify plans
0: jdbc:farrago:> !set outputformat csv
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from 
. . . . . . . . > (select name from emps union select name from depts)
. . . . . . . . >  order by 1;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    FennelSortRel(key=[[0]], discardDuplicates=[true])'
'      IteratorToFennelConverter'
'        IterConcatenateRel(all=[true])'
'          FennelToIteratorConverter'
'            FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[[1]], index=[EMPS_UX], preserveOrder=[false])'
'          FennelToIteratorConverter'
'            FtrsIndexScanRel(table=[[LOCALDB, SALES, DEPTS]], projection=[[1]], index=[SYS$CONSTRAINT_INDEX$DEPTS$SYS$PRIMARY_KEY], preserveOrder=[false])'
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from 
. . . . . . . . > (select name from emps union select name from depts);
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[true])'
'    IteratorToFennelConverter'
'      IterConcatenateRel(all=[true])'
'        FennelToIteratorConverter'
'          FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[[1]], index=[EMPS_UX], preserveOrder=[false])'
'        FennelToIteratorConverter'
'          FtrsIndexScanRel(table=[[LOCALDB, SALES, DEPTS]], projection=[[1]], index=[SYS$CONSTRAINT_INDEX$DEPTS$SYS$PRIMARY_KEY], preserveOrder=[false])'
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from 
. . . . . . . . > (select name from emps union all select name from depts)
. . . . . . . . >  order by 1;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    IteratorToFennelConverter'
'      IterConcatenateRel(all=[true])'
'        FennelToIteratorConverter'
'          FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[[1]], index=[EMPS_UX], preserveOrder=[false])'
'        FennelToIteratorConverter'
'          FtrsIndexScanRel(table=[[LOCALDB, SALES, DEPTS]], projection=[[1]], index=[SYS$CONSTRAINT_INDEX$DEPTS$SYS$PRIMARY_KEY], preserveOrder=[false])'
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from 
. . . . . . . . > (select name from emps union all select name from depts);
'column0'
'IterConcatenateRel(all=[true])'
'  FennelToIteratorConverter'
'    FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[[1]], index=[EMPS_UX], preserveOrder=[false])'
'  FennelToIteratorConverter'
'    FtrsIndexScanRel(table=[[LOCALDB, SALES, DEPTS]], projection=[[1]], index=[SYS$CONSTRAINT_INDEX$DEPTS$SYS$PRIMARY_KEY], preserveOrder=[false])'
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
