0: jdbc:farrago:> -- $Id: //open/lu/dev/farrago/unitsql/optimizer/lbm.sql#7 $
0: jdbc:farrago:> 
0: jdbc:farrago:> -------------------------------------
0: jdbc:farrago:> -- Sql level test for Bitmap Index --
0: jdbc:farrago:> -------------------------------------
0: jdbc:farrago:> 
0: jdbc:farrago:> create schema lbm;
0: jdbc:farrago:> set schema 'lbm';
0: jdbc:farrago:> set path 'lbm';
0: jdbc:farrago:> 
0: jdbc:farrago:> create server test_data
. . . . . . . . > foreign data wrapper sys_file_wrapper
. . . . . . . . > options (
. . . . . . . . >     directory 'unitsql/optimizer/data',
. . . . . . . . >     file_extension 'csv',
. . . . . . . . >     with_header 'yes', 
. . . . . . . . >     log_directory 'testlog');
0: jdbc:farrago:> 
0: jdbc:farrago:> create foreign table matrix3x3(
. . . . . . . . >     a tinyint,
. . . . . . . . >     b integer,
. . . . . . . . >     c bigint)
. . . . . . . . > server test_data
. . . . . . . . > options (filename 'matrix3x3');
0: jdbc:farrago:> 
0: jdbc:farrago:> create foreign table matrix9x9(
. . . . . . . . >     a1 tinyint,
. . . . . . . . >     b1 integer,
. . . . . . . . >     c1 bigint,
. . . . . . . . >     a2 tinyint,
. . . . . . . . >     b2 integer,
. . . . . . . . >     c2 bigint, 
. . . . . . . . >     a3 tinyint,
. . . . . . . . >     b3 integer,
. . . . . . . . >     c3 bigint) 
. . . . . . . . > server test_data
. . . . . . . . > options (filename 'matrix9x9');
0: jdbc:farrago:> 
0: jdbc:farrago:> -----------------------------------------------------
0: jdbc:farrago:> -- Part 1. Indexes based on single column clusters --
0: jdbc:farrago:> -----------------------------------------------------
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 1.1 One index on a table without a primary key
0: jdbc:farrago:> --
0: jdbc:farrago:> create table single(
. . . . . . . . >     a tinyint,
. . . . . . . . >     b integer,
. . . . . . . . >     c bigint) 
. . . . . . . . > server sys_column_store_data_server;
0: jdbc:farrago:> 
0: jdbc:farrago:> create index single_one 
. . . . . . . . > on single(b);
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into single values (1,2,3);
0: jdbc:farrago:> insert into single values (0,0,0);
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into single 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 1.1.1 Create index on existing data
0: jdbc:farrago:> --
0: jdbc:farrago:> drop index single_one;
0: jdbc:farrago:> 
0: jdbc:farrago:> create index single_one_recreated
. . . . . . . . > on single(b);
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 1.1.2 Try a few range selections
0: jdbc:farrago:> --
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from single where b < 10;
+----+----+----+
| A  | B  | C  |
+----+----+----+
| 1  | 2  | 3  |
| 0  | 0  | 0  |
+----+----+----+
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into single 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from single where b > 15;
+-----+-----+-----+
|  A  |  B  |  C  |
+-----+-----+-----+
| 21  | 22  | 23  |
| 31  | 32  | 33  |
| 21  | 22  | 23  |
| 31  | 32  | 33  |
+-----+-----+-----+
0: jdbc:farrago:> select * from single where b < 30;
+-----+-----+-----+
|  A  |  B  |  C  |
+-----+-----+-----+
| 1   | 2   | 3   |
| 0   | 0   | 0   |
| 11  | 12  | 13  |
| 21  | 22  | 23  |
| 11  | 12  | 13  |
| 21  | 22  | 23  |
+-----+-----+-----+
0: jdbc:farrago:> select * from single where b > 15 and b < 30;
+-----+-----+-----+
|  A  |  B  |  C  |
+-----+-----+-----+
| 21  | 22  | 23  |
| 21  | 22  | 23  |
+-----+-----+-----+
0: jdbc:farrago:> select * from single where b > 50;
+----+----+----+
| A  | B  | C  |
+----+----+----+
+----+----+----+
0: jdbc:farrago:> 
0: jdbc:farrago:> drop table single;
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 1.2 One multi-column index on a table without a primary key
0: jdbc:farrago:> -- TODO: once we support delete, we will not need to drop table every time
0: jdbc:farrago:> --
0: jdbc:farrago:> create table single(
. . . . . . . . >     a tinyint,
. . . . . . . . >     b integer,
. . . . . . . . >     c bigint) 
. . . . . . . . > server sys_column_store_data_server;
0: jdbc:farrago:> 
0: jdbc:farrago:> create index single_one_multi 
. . . . . . . . > on single(b, c);
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into single 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> drop table single;
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 1.3 Several single column indexes on a table without a primary key
0: jdbc:farrago:> --
0: jdbc:farrago:> create table single(
. . . . . . . . >     a tinyint,
. . . . . . . . >     b integer,
. . . . . . . . >     c bigint) 
. . . . . . . . > server sys_column_store_data_server;
0: jdbc:farrago:> 
0: jdbc:farrago:> set schema 'lbm';
0: jdbc:farrago:> 
0: jdbc:farrago:> create index single_two_b
. . . . . . . . > on single(b);
0: jdbc:farrago:> 
0: jdbc:farrago:> create index single_two_c
. . . . . . . . > on single(c);
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into single 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> drop table single;
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 1.4 A table with a primary key (the constraint is itself an index)
0: jdbc:farrago:> --
0: jdbc:farrago:> create table single(
. . . . . . . . >     a tinyint,
. . . . . . . . >     b integer primary key,
. . . . . . . . >     c bigint) 
. . . . . . . . > server sys_column_store_data_server;
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into single 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> drop table single;
0: jdbc:farrago:> 
0: jdbc:farrago:> 
0: jdbc:farrago:> ----------------------------------------------------
0: jdbc:farrago:> -- Part 2. Indexes based on multi column clusters --
0: jdbc:farrago:> ----------------------------------------------------
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 2.1 An index with multiple columns, ordered
0: jdbc:farrago:> --
0: jdbc:farrago:> create table multi(
. . . . . . . . >     a tinyint,
. . . . . . . . >     b integer,
. . . . . . . . >     c bigint) 
. . . . . . . . > server sys_column_store_data_server
. . . . . . . . > create clustered index multi_all on multi(a, b, c);
0: jdbc:farrago:> 
0: jdbc:farrago:> create index multi_multikey on multi(a, b);
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multi 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multi 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multi 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multi 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> drop table multi;
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 2.2 An index with multiple columns, rearranged
0: jdbc:farrago:> --
0: jdbc:farrago:> create table multi(
. . . . . . . . >     a tinyint,
. . . . . . . . >     b integer,
. . . . . . . . >     c bigint) 
. . . . . . . . > server sys_column_store_data_server
. . . . . . . . > create clustered index multi_all on multi(a, b, c);
0: jdbc:farrago:> 
0: jdbc:farrago:> create index multi_multikey on multi(c, a, b);
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multi 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> drop table multi;
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 2.3 Multiple single columns indexes
0: jdbc:farrago:> --
0: jdbc:farrago:> create table multi(
. . . . . . . . >     a tinyint,
. . . . . . . . >     b integer,
. . . . . . . . >     c bigint) 
. . . . . . . . > server sys_column_store_data_server
. . . . . . . . > create clustered index multi_all on multi(a, b, c);
0: jdbc:farrago:> 
0: jdbc:farrago:> create index multi_singlekey_b on multi(b);
0: jdbc:farrago:> create index multi_singlekey_c on multi(c);
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multi 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> drop table multi;
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 2.4 Multiple multi columns indexes
0: jdbc:farrago:> --
0: jdbc:farrago:> create table multi(
. . . . . . . . >     a tinyint,
. . . . . . . . >     b integer,
. . . . . . . . >     c bigint) 
. . . . . . . . > server sys_column_store_data_server
. . . . . . . . > create clustered index multi_all on multi(a, b, c);
0: jdbc:farrago:> 
0: jdbc:farrago:> create index multi_multikey_cb on multi(c, b);
0: jdbc:farrago:> create index multi_multikey_ba on multi(b, a);
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multi 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- try some nulls, and reverse data
0: jdbc:farrago:> create foreign table matrix3x3_alt(
. . . . . . . . >     a tinyint,
. . . . . . . . >     b integer,
. . . . . . . . >     c bigint)
. . . . . . . . > server test_data
. . . . . . . . > options (filename 'matrix3x3_alt');
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multi
. . . . . . . . > select * from matrix3x3_alt;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- some more data
0: jdbc:farrago:> insert into multi 
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> drop table multi;
0: jdbc:farrago:> 
0: jdbc:farrago:> 
0: jdbc:farrago:> -------------------------------------------------------------
0: jdbc:farrago:> -- Part 3. Indexes based on multiple multi column clusters --
0: jdbc:farrago:> -------------------------------------------------------------
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 3.1 Indexes based on subsets of clusters
0: jdbc:farrago:> --
0: jdbc:farrago:> create table multimulti(
. . . . . . . . >     a1 tinyint,
. . . . . . . . >     b1 integer,
. . . . . . . . >     c1 bigint,
. . . . . . . . >     a2 tinyint,
. . . . . . . . >     b2 integer,
. . . . . . . . >     c2 bigint, 
. . . . . . . . >     a3 tinyint,
. . . . . . . . >     b3 integer,
. . . . . . . . >     c3 bigint) 
. . . . . . . . > server sys_column_store_data_server
. . . . . . . . > create clustered index multi_1 on multimulti(a1, b1, c1)
. . . . . . . . > create clustered index multi_2 on multimulti(a2, b2, c2)
. . . . . . . . > create clustered index multi_3 on multimulti(a3, b3, c3);
0: jdbc:farrago:> 
0: jdbc:farrago:> create index multimulti_subset_a on multimulti(b1);
0: jdbc:farrago:> create index multimulti_subset_b on multimulti(a2,b2);
0: jdbc:farrago:> create index multimulti_subset_c on multimulti(c2,a2);
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multimulti
. . . . . . . . > select * from matrix9x9;
0: jdbc:farrago:> 
0: jdbc:farrago:> drop table multimulti;
0: jdbc:farrago:> 
0: jdbc:farrago:> --
0: jdbc:farrago:> -- 3.2 Indexes based on multiple clusters
0: jdbc:farrago:> --
0: jdbc:farrago:> create table multimulti(
. . . . . . . . >     a1 tinyint,
. . . . . . . . >     b1 integer,
. . . . . . . . >     c1 bigint,
. . . . . . . . >     a2 bigint,
. . . . . . . . >     b2 integer,
. . . . . . . . >     c2 tinyint, 
. . . . . . . . >     a3 bigint,
. . . . . . . . >     b3 tinyint,
. . . . . . . . >     c3 integer) 
. . . . . . . . > server sys_column_store_data_server
. . . . . . . . > create clustered index multi_1 on multimulti(a1, b1, c1)
. . . . . . . . > create clustered index multi_2 on multimulti(a2, b2, c2)
. . . . . . . . > create clustered index multi_3 on multimulti(a3, b3, c3);
0: jdbc:farrago:> 
0: jdbc:farrago:> create index multimulti_mixed_a on multimulti(a1,a2,a3);
0: jdbc:farrago:> create index multimulti_mixed_b on multimulti(b1,b2,b3);
0: jdbc:farrago:> create index multimulti_mixed_c on multimulti(c1,c2,b2);
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multimulti
. . . . . . . . > select * from matrix9x9;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- some alternate data (descending, nulls)
0: jdbc:farrago:> create foreign table matrix9x9_alt(
. . . . . . . . >     a1 tinyint,
. . . . . . . . >     b1 integer,
. . . . . . . . >     c1 bigint,
. . . . . . . . >     a2 bigint,
. . . . . . . . >     b2 integer,
. . . . . . . . >     c2 tinyint, 
. . . . . . . . >     a3 bigint,
. . . . . . . . >     b3 tinyint,
. . . . . . . . >     c3 integer) 
. . . . . . . . > server test_data
. . . . . . . . > options (filename 'matrix9x9_alt');
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multimulti
. . . . . . . . > select * from matrix9x9_alt;
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multimulti
. . . . . . . . > select * from matrix9x9;
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multimulti
. . . . . . . . > select * from matrix9x9_alt;
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multimulti
. . . . . . . . > select * from matrix9x9;
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into multimulti (a2, b2, c2)
. . . . . . . . > select * from matrix3x3;
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from multimulti;
+-----+-----+-----+-----+-----+-----+-----+-----+-----+
| A1  | B1  | C1  | A2  | B2  | C2  | A3  | B3  | C3  |
+-----+-----+-----+-----+-----+-----+-----+-----+-----+
| 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 21  | 22  | 23  | 24  | 25  | 26  | 27  | 28  | 29  |
| 31  | 32  | 33  | 34  | 35  | 36  | 37  | 38  | 39  |
| 41  | 42  | 43  | 44  | 45  | 46  | 47  | 48  | 49  |
| 51  | 52  | 53  | 54  | 55  | 56  | 57  | 58  | 59  |
| 61  | 62  | 63  | 64  | 65  | 66  | 67  | 68  | 69  |
| 71  | 72  | 73  | 74  | 75  | 76  | 77  | 78  | 79  |
| 81  | 82  | 83  | 84  | 85  | 86  | 87  | 88  | 89  |
| 91  | 92  | 93  | 94  | 95  | 96  | 97  | 98  | 99  |
| 91  | 92  | 93  | 94  | 95  | 96  | 97  | 98  |     |
| 81  | 82  | 83  | 84  | 85  | 86  | 87  |     | 89  |
| 71  | 72  | 73  | 74  | 75  | 76  |     | 78  | 79  |
| 61  | 62  | 63  | 64  | 65  |     | 67  | 68  | 69  |
| 51  | 52  | 53  | 54  |     | 56  | 57  | 58  | 59  |
| 41  | 42  | 43  |     | 45  | 46  | 47  | 48  | 49  |
| 31  | 32  |     | 34  | 35  | 36  | 37  | 38  | 39  |
| 21  |     | 23  | 24  | 25  | 26  | 27  | 28  | 29  |
|     | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 21  | 22  | 23  | 24  | 25  | 26  | 27  | 28  | 29  |
| 31  | 32  | 33  | 34  | 35  | 36  | 37  | 38  | 39  |
| 41  | 42  | 43  | 44  | 45  | 46  | 47  | 48  | 49  |
| 51  | 52  | 53  | 54  | 55  | 56  | 57  | 58  | 59  |
| 61  | 62  | 63  | 64  | 65  | 66  | 67  | 68  | 69  |
| 71  | 72  | 73  | 74  | 75  | 76  | 77  | 78  | 79  |
| 81  | 82  | 83  | 84  | 85  | 86  | 87  | 88  | 89  |
| 91  | 92  | 93  | 94  | 95  | 96  | 97  | 98  | 99  |
| 91  | 92  | 93  | 94  | 95  | 96  | 97  | 98  |     |
| 81  | 82  | 83  | 84  | 85  | 86  | 87  |     | 89  |
| 71  | 72  | 73  | 74  | 75  | 76  |     | 78  | 79  |
| 61  | 62  | 63  | 64  | 65  |     | 67  | 68  | 69  |
| 51  | 52  | 53  | 54  |     | 56  | 57  | 58  | 59  |
| 41  | 42  | 43  |     | 45  | 46  | 47  | 48  | 49  |
| 31  | 32  |     | 34  | 35  | 36  | 37  | 38  | 39  |
| 21  |     | 23  | 24  | 25  | 26  | 27  | 28  | 29  |
|     | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 21  | 22  | 23  | 24  | 25  | 26  | 27  | 28  | 29  |
| 31  | 32  | 33  | 34  | 35  | 36  | 37  | 38  | 39  |
| 41  | 42  | 43  | 44  | 45  | 46  | 47  | 48  | 49  |
| 51  | 52  | 53  | 54  | 55  | 56  | 57  | 58  | 59  |
| 61  | 62  | 63  | 64  | 65  | 66  | 67  | 68  | 69  |
| 71  | 72  | 73  | 74  | 75  | 76  | 77  | 78  | 79  |
| 81  | 82  | 83  | 84  | 85  | 86  | 87  | 88  | 89  |
| 91  | 92  | 93  | 94  | 95  | 96  | 97  | 98  | 99  |
|     |     |     | 11  | 12  | 13  |     |     |     |
|     |     |     | 21  | 22  | 23  |     |     |     |
|     |     |     | 31  | 32  | 33  |     |     |     |
+-----+-----+-----+-----+-----+-----+-----+-----+-----+
0: jdbc:farrago:> -- insert target is same as source target
0: jdbc:farrago:> insert into multimulti select * from multimulti where a1 = 11 and b1 = 12;
0: jdbc:farrago:> select * from multimulti;
+-----+-----+-----+-----+-----+-----+-----+-----+-----+
| A1  | B1  | C1  | A2  | B2  | C2  | A3  | B3  | C3  |
+-----+-----+-----+-----+-----+-----+-----+-----+-----+
| 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 21  | 22  | 23  | 24  | 25  | 26  | 27  | 28  | 29  |
| 31  | 32  | 33  | 34  | 35  | 36  | 37  | 38  | 39  |
| 41  | 42  | 43  | 44  | 45  | 46  | 47  | 48  | 49  |
| 51  | 52  | 53  | 54  | 55  | 56  | 57  | 58  | 59  |
| 61  | 62  | 63  | 64  | 65  | 66  | 67  | 68  | 69  |
| 71  | 72  | 73  | 74  | 75  | 76  | 77  | 78  | 79  |
| 81  | 82  | 83  | 84  | 85  | 86  | 87  | 88  | 89  |
| 91  | 92  | 93  | 94  | 95  | 96  | 97  | 98  | 99  |
| 91  | 92  | 93  | 94  | 95  | 96  | 97  | 98  |     |
| 81  | 82  | 83  | 84  | 85  | 86  | 87  |     | 89  |
| 71  | 72  | 73  | 74  | 75  | 76  |     | 78  | 79  |
| 61  | 62  | 63  | 64  | 65  |     | 67  | 68  | 69  |
| 51  | 52  | 53  | 54  |     | 56  | 57  | 58  | 59  |
| 41  | 42  | 43  |     | 45  | 46  | 47  | 48  | 49  |
| 31  | 32  |     | 34  | 35  | 36  | 37  | 38  | 39  |
| 21  |     | 23  | 24  | 25  | 26  | 27  | 28  | 29  |
|     | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 21  | 22  | 23  | 24  | 25  | 26  | 27  | 28  | 29  |
| 31  | 32  | 33  | 34  | 35  | 36  | 37  | 38  | 39  |
| 41  | 42  | 43  | 44  | 45  | 46  | 47  | 48  | 49  |
| 51  | 52  | 53  | 54  | 55  | 56  | 57  | 58  | 59  |
| 61  | 62  | 63  | 64  | 65  | 66  | 67  | 68  | 69  |
| 71  | 72  | 73  | 74  | 75  | 76  | 77  | 78  | 79  |
| 81  | 82  | 83  | 84  | 85  | 86  | 87  | 88  | 89  |
| 91  | 92  | 93  | 94  | 95  | 96  | 97  | 98  | 99  |
| 91  | 92  | 93  | 94  | 95  | 96  | 97  | 98  |     |
| 81  | 82  | 83  | 84  | 85  | 86  | 87  |     | 89  |
| 71  | 72  | 73  | 74  | 75  | 76  |     | 78  | 79  |
| 61  | 62  | 63  | 64  | 65  |     | 67  | 68  | 69  |
| 51  | 52  | 53  | 54  |     | 56  | 57  | 58  | 59  |
| 41  | 42  | 43  |     | 45  | 46  | 47  | 48  | 49  |
| 31  | 32  |     | 34  | 35  | 36  | 37  | 38  | 39  |
| 21  |     | 23  | 24  | 25  | 26  | 27  | 28  | 29  |
|     | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 21  | 22  | 23  | 24  | 25  | 26  | 27  | 28  | 29  |
| 31  | 32  | 33  | 34  | 35  | 36  | 37  | 38  | 39  |
| 41  | 42  | 43  | 44  | 45  | 46  | 47  | 48  | 49  |
| 51  | 52  | 53  | 54  | 55  | 56  | 57  | 58  | 59  |
| 61  | 62  | 63  | 64  | 65  | 66  | 67  | 68  | 69  |
| 71  | 72  | 73  | 74  | 75  | 76  | 77  | 78  | 79  |
| 81  | 82  | 83  | 84  | 85  | 86  | 87  | 88  | 89  |
| 91  | 92  | 93  | 94  | 95  | 96  | 97  | 98  | 99  |
|     |     |     | 11  | 12  | 13  |     |     |     |
|     |     |     | 21  | 22  | 23  |     |     |     |
|     |     |     | 31  | 32  | 33  |     |     |     |
| 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
| 11  | 12  | 13  | 14  | 15  | 16  | 17  | 18  | 19  |
+-----+-----+-----+-----+-----+-----+-----+-----+-----+
0: jdbc:farrago:> 
0: jdbc:farrago:> drop table multimulti;
0: jdbc:farrago:> 
0: jdbc:farrago:> 
0: jdbc:farrago:> -------------------------------------------------------------
0: jdbc:farrago:> -- Part 4. Data types, null values                         --
0: jdbc:farrago:> -------------------------------------------------------------
0: jdbc:farrago:> -- NOTE: cannot input a binary field from a flat file yet
0: jdbc:farrago:> create foreign table typed_src(
. . . . . . . . >     a int,
. . . . . . . . >     d char(10),
. . . . . . . . >     e decimal(6,2),
. . . . . . . . >     f smallint,
. . . . . . . . >     g real,
. . . . . . . . >     h double,
. . . . . . . . >     i varchar(256),
. . . . . . . . >     j boolean,
. . . . . . . . >     k date,
. . . . . . . . >     l time,
. . . . . . . . >     m timestamp,
. . . . . . . . >     n numeric(10,2)) 
. . . . . . . . > server test_data
. . . . . . . . > options (filename 'typed');
0: jdbc:farrago:> 
0: jdbc:farrago:> create table typed(
. . . . . . . . >     a int,
. . . . . . . . >     b varbinary(256),
. . . . . . . . >     c binary(10),
. . . . . . . . >     d char(10),
. . . . . . . . >     e decimal(6,2),
. . . . . . . . >     f smallint,
. . . . . . . . >     g real,
. . . . . . . . >     h double,
. . . . . . . . >     i varchar(256),
. . . . . . . . >     j boolean,
. . . . . . . . >     k date,
. . . . . . . . >     l time,
. . . . . . . . >     m timestamp,
. . . . . . . . >     n numeric(10,2)) 
. . . . . . . . > server sys_column_store_data_server;
0: jdbc:farrago:> 
0: jdbc:farrago:> create index typed_a on typed(a);
0: jdbc:farrago:> create index typed_b on typed(b);
0: jdbc:farrago:> create index typed_c on typed(c);
0: jdbc:farrago:> create index typed_d on typed(d);
0: jdbc:farrago:> create index typed_e on typed(e);
0: jdbc:farrago:> create index typed_f on typed(f);
0: jdbc:farrago:> create index typed_g on typed(g);
0: jdbc:farrago:> create index typed_h on typed(h);
0: jdbc:farrago:> create index typed_i on typed(i);
0: jdbc:farrago:> create index typed_j on typed(j);
0: jdbc:farrago:> create index typed_k on typed(k);
0: jdbc:farrago:> create index typed_l on typed(l);
0: jdbc:farrago:> create index typed_m on typed(m);
0: jdbc:farrago:> create index typed_n on typed(n);
0: jdbc:farrago:> 
0: jdbc:farrago:> -- LER-422: merging with singleton 
0: jdbc:farrago:> -- http://jira.lucidera.com/browse/LER-422
0: jdbc:farrago:> insert into typed values(
. . . . . . . . >     1,X'deadbeef',null,'first',
. . . . . . . . >     0.16,1,1,1,
. . . . . . . . >     '1st',true,DATE'2001-11-11',TIME'23:11:08',
. . . . . . . . >     TIMESTAMP'2001-11-11 23:11:08',0.02);
0: jdbc:farrago:> 
0: jdbc:farrago:> -- the singleton bitmap entry on index(b)
0: jdbc:farrago:> -- key(b) = null, RID == 1
0: jdbc:farrago:> insert into typed values(
. . . . . . . . >     2,null,null,null,
. . . . . . . . >     null,null,null,null,
. . . . . . . . >     null,null,null,null,
. . . . . . . . >     null,null);
0: jdbc:farrago:> insert into typed values(
. . . . . . . . >     3,X'1ead2006',null,'third',
. . . . . . . . >     0.16,1,1,1,
. . . . . . . . >     '3rd',false,DATE'2001-12-12',TIME'23:11:08',
. . . . . . . . >     TIMESTAMP'2001-12-12 23:11:08',0.06);
0: jdbc:farrago:> 
0: jdbc:farrago:> -- the new bitmap entry with three RIDs set
0: jdbc:farrago:> -- key(b) = null RID == 2,3,4
0: jdbc:farrago:> -- the new bitmap will be merged with the singleton inserted above.
0: jdbc:farrago:> insert into typed (a,d,e,f,g,h,i,j,k,l,m,n)
. . . . . . . . > select * from typed_src;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- cleanup
0: jdbc:farrago:> drop server test_data cascade;
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
