0: jdbc:farrago:> -----------
0: jdbc:farrago:> -- Setup --
0: jdbc:farrago:> -----------
0: jdbc:farrago:> create schema lhx;
0: jdbc:farrago:> set schema 'lhx';
0: jdbc:farrago:> set path 'lhx';
0: jdbc:farrago:> 
0: jdbc:farrago:> -- force usage of Java calc
0: jdbc:farrago:> alter system set "calcVirtualMachine" = 'CALCVM_JAVA';
0: jdbc:farrago:> 
0: jdbc:farrago:> -- lucidDB feature
0: jdbc:farrago:> alter session implementation set jar sys_boot.sys_boot.luciddb_plugin;
0: jdbc:farrago:> 
0: jdbc:farrago:> create table emps1(
. . . . . . . . >     ename1 varchar(20))
. . . . . . . . > server sys_column_store_data_server;
0: jdbc:farrago:> 
0: jdbc:farrago:> create table emps2(
. . . . . . . . >     ename2 varchar(20))
. . . . . . . . > server sys_column_store_data_server;
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into emps1 values(NULL);
0: jdbc:farrago:> insert into emps1 values('abc');
0: jdbc:farrago:> insert into emps1 values('abc');
0: jdbc:farrago:> insert into emps1 values('def');
0: jdbc:farrago:> insert into emps1 values('def');
0: jdbc:farrago:> 
0: jdbc:farrago:> insert into emps2 values(NULL);
0: jdbc:farrago:> insert into emps2 values(NULL);
0: jdbc:farrago:> insert into emps2 values('abc');
0: jdbc:farrago:> 
0: jdbc:farrago:> !set outputformat table
0: jdbc:farrago:> 
0: jdbc:farrago:> ------------------
0: jdbc:farrago:> -- set op tests --
0: jdbc:farrago:> ------------------
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 union select * from emps2 order by 1;
+---------------------------------------------------------------------------------------------------------------------------------------+
|                                                                column0                                                                |
+---------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                             |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                 |
|     LhxAggRel(groupCount=[1])                                                                                                         |
|       FennelMergeRel                                                                                                                  |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])      |
|         FennelRenameRel(fieldNames=[[ENAME1]])                                                                                        |
|           LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])  |
+---------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 union all select * from emps2 order by 1;
+-------------------------------------------------------------------------------------------------------------------------------------+
|                                                               column0                                                               |
+-------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                           |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                               |
|     FennelMergeRel                                                                                                                  |
|       LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])      |
|       FennelRenameRel(fieldNames=[[ENAME1]])                                                                                        |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])  |
+-------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 intersect select * from emps2 order by 1;
+-------------------------------------------------------------------------------------------------------------------------------------+
|                                                               column0                                                               |
+-------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                           |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                               |
|     LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[LEFTSEMI], setop=[true])                                                  |
|       LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])      |
|       FennelRenameRel(fieldNames=[[ENAME1]])                                                                                        |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])  |
+-------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 intersect all select * from emps2 order by 1;
Error: java.lang.AssertionError: Internal error: set operator INTERSECT ALL not suported (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 except select * from emps2 order by 1;
+-------------------------------------------------------------------------------------------------------------------------------------+
|                                                               column0                                                               |
+-------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                           |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                               |
|     LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[RIGHTANTI], setop=[true])                                                 |
|       FennelRenameRel(fieldNames=[[ENAME1]])                                                                                        |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])  |
|       LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])      |
+-------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 except all select * from emps2 order by 1;
Error: java.lang.AssertionError: Internal error: set operator EXCEPT ALL not suported (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from emps1 union select * from emps2 order by 1;
+---------+
| ENAME1  |
+---------+
|         |
| abc     |
| def     |
+---------+
0: jdbc:farrago:> select * from emps1 union all select * from emps2 order by 1;
+---------+
| ENAME1  |
+---------+
|         |
|         |
|         |
| abc     |
| abc     |
| abc     |
| def     |
| def     |
+---------+
0: jdbc:farrago:> select * from emps1 intersect select * from emps2 order by 1;
+---------+
| ENAME1  |
+---------+
|         |
| abc     |
+---------+
0: jdbc:farrago:> select * from emps1 except select * from emps2 order by 1;
+---------+
| ENAME1  |
+---------+
| def     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- set op tree
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 intersect select * from emps2 intersect select * from emps1
. . . . . . . . > order by 1;
+---------------------------------------------------------------------------------------------------------------------------------------+
|                                                                column0                                                                |
+---------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                             |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                 |
|     LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[LEFTSEMI], setop=[true])                                                    |
|       LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[LEFTSEMI], setop=[true])                                                  |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])      |
|         FennelRenameRel(fieldNames=[[ENAME1]])                                                                                        |
|           LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])  |
|       LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])        |
+---------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from emps1 intersect select * from emps2 intersect select * from emps1
. . . . . . . . > order by 1;
+---------+
| ENAME1  |
+---------+
|         |
| abc     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 intersect select * from emps2 intersect select * from emps2
. . . . . . . . > order by 1;
+---------------------------------------------------------------------------------------------------------------------------------------+
|                                                                column0                                                                |
+---------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                             |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                 |
|     LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[LEFTSEMI], setop=[true])                                                    |
|       LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[LEFTSEMI], setop=[true])                                                  |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])      |
|         FennelRenameRel(fieldNames=[[ENAME1]])                                                                                        |
|           LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])  |
|       FennelRenameRel(fieldNames=[[ENAME1]])                                                                                          |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])    |
+---------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from emps1 intersect select * from emps2 intersect select * from emps2
. . . . . . . . > order by 1;
+---------+
| ENAME1  |
+---------+
|         |
| abc     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 except select * from emps2 except select * from emps1
. . . . . . . . > order by 1;
+---------------------------------------------------------------------------------------------------------------------------------------+
|                                                                column0                                                                |
+---------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                             |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                 |
|     LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[RIGHTANTI], setop=[true])                                                   |
|       LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])        |
|       LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[RIGHTANTI], setop=[true])                                                 |
|         FennelRenameRel(fieldNames=[[ENAME1]])                                                                                        |
|           LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])  |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])      |
+---------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from emps1 except select * from emps2 except select * from emps1
. . . . . . . . > order by 1;
+---------+
| ENAME1  |
+---------+
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 except select * from emps2 except select * from emps2
. . . . . . . . > order by 1;
+---------------------------------------------------------------------------------------------------------------------------------------+
|                                                                column0                                                                |
+---------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                             |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                 |
|     LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[RIGHTANTI], setop=[true])                                                   |
|       FennelRenameRel(fieldNames=[[ENAME1]])                                                                                          |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])    |
|       LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[RIGHTANTI], setop=[true])                                                 |
|         FennelRenameRel(fieldNames=[[ENAME1]])                                                                                        |
|           LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])  |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])      |
+---------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from emps1 except select * from emps2 except select * from emps2
. . . . . . . . > order by 1;
+---------+
| ENAME1  |
+---------+
| def     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- some tests for set op precedence rules
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 intersect select * from emps1 except select * from emps2
. . . . . . . . > order by 1;
+-------------------------------------------------------------------------------------------------------------------------------------+
|                                                               column0                                                               |
+-------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                           |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                               |
|     LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[RIGHTANTI], setop=[true])                                                 |
|       FennelRenameRel(fieldNames=[[ENAME1]])                                                                                        |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])  |
|       LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[LEFTSEMI], setop=[true])                                                |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])    |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])    |
+-------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from emps1 intersect select * from emps1 except select * from emps2
. . . . . . . . > order by 1;
+---------+
| ENAME1  |
+---------+
| def     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 except select * from emps2 intersect select * from emps1
. . . . . . . . > order by 1;
+---------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                   column0                                                                   |
+---------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                   |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                       |
|     LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[RIGHTANTI], setop=[true])                                                         |
|       IteratorToFennelConverter                                                                                                             |
|         IterCalcRel(expr#0=[{inputs}], ENAME1=[$t0])                                                                                        |
|           FennelToIteratorConverter                                                                                                         |
|             LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[LEFTSEMI], setop=[true])                                                  |
|               LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])      |
|               FennelRenameRel(fieldNames=[[ENAME2]])                                                                                        |
|                 LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])  |
|       LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])              |
+---------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from emps1 except select * from emps2 intersect select * from emps1
. . . . . . . . > order by 1;
+---------+
| ENAME1  |
+---------+
| def     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 union select * from emps2 intersect select * from emps1
. . . . . . . . > order by 1;
+-----------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                    column0                                                                    |
+-----------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                     |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                         |
|     LhxAggRel(groupCount=[1])                                                                                                                 |
|       FennelMergeRel                                                                                                                          |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])              |
|         IteratorToFennelConverter                                                                                                             |
|           IterCalcRel(expr#0=[{inputs}], ENAME1=[$t0])                                                                                        |
|             FennelToIteratorConverter                                                                                                         |
|               LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[LEFTSEMI], setop=[true])                                                  |
|                 LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])      |
|                 FennelRenameRel(fieldNames=[[ENAME2]])                                                                                        |
|                   LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])  |
+-----------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from emps1 union select * from emps2 intersect select * from emps1
. . . . . . . . > order by 1;
+---------+
| ENAME1  |
+---------+
|         |
| abc     |
| def     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 except select * from emps2 union select * from emps1
. . . . . . . . > order by 1;
+-----------------------------------------------------------------------------------------------------------------------------------------+
|                                                                 column0                                                                 |
+-----------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                               |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                   |
|     LhxAggRel(groupCount=[1])                                                                                                           |
|       FennelMergeRel                                                                                                                    |
|         LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[RIGHTANTI], setop=[true])                                                 |
|           FennelRenameRel(fieldNames=[[ENAME1]])                                                                                        |
|             LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])  |
|           LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])      |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])        |
+-----------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from emps1 except select * from emps2 union select * from emps1
. . . . . . . . > order by 1;
+---------+
| ENAME1  |
+---------+
|         |
| abc     |
| def     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> explain plan for
. . . . . . . . > select * from emps1 union select * from emps2 except select * from emps2
. . . . . . . . > order by 1;
+-----------------------------------------------------------------------------------------------------------------------------------------+
|                                                                 column0                                                                 |
+-----------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                               |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                   |
|     LhxJoinRel(leftKeys=[[0]], rightKeys=[[0]], joinType=[RIGHTANTI], setop=[true])                                                     |
|       FennelRenameRel(fieldNames=[[ENAME1]])                                                                                            |
|         LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])      |
|       LhxAggRel(groupCount=[1])                                                                                                         |
|         FennelMergeRel                                                                                                                  |
|           LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])      |
|           FennelRenameRel(fieldNames=[[ENAME1]])                                                                                        |
|             LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])  |
+-----------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from emps1 union select * from emps2 except select * from emps2
. . . . . . . . > order by 1;
+---------+
| ENAME1  |
+---------+
| def     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- multi-key
0: jdbc:farrago:> explain plan for
. . . . . . . . > select ename1, ename1 from emps1 except select ename2, ename2 from emps2
. . . . . . . . > intersect select ename1, ename1 from emps1 order by 1;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                          column0                                                                           |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                                  |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                                      |
|     IteratorToFennelConverter                                                                                                                              |
|       IterCalcRel(expr#0..1=[{inputs}], ENAME1=[$t0], ENAME10=[$t0])                                                                                       |
|         FennelToIteratorConverter                                                                                                                          |
|           LhxJoinRel(leftKeys=[[0, 1]], rightKeys=[[0, 1]], joinType=[RIGHTANTI], setop=[true])                                                            |
|             IteratorToFennelConverter                                                                                                                      |
|               IterCalcRel(expr#0..1=[{inputs}], proj#0..1=[{exprs}])                                                                                       |
|                 FennelToIteratorConverter                                                                                                                  |
|                   LhxJoinRel(leftKeys=[[0, 1]], rightKeys=[[0, 1]], joinType=[LEFTSEMI], setop=[true])                                                     |
|                     FennelRenameRel(fieldNames=[[ENAME2, ENAME20]])                                                                                        |
|                       LcsRowScanRel(table=[[LOCALDB, LHX, EMPS2]], projection=[[0, 0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS2$ENAME2]])        |
|                     IteratorToFennelConverter                                                                                                              |
|                       IterCalcRel(expr#0..1=[{inputs}], proj#0..1=[{exprs}])                                                                               |
|                         FennelToIteratorConverter                                                                                                          |
|                           FennelRenameRel(fieldNames=[[ENAME1, ENAME10]])                                                                                  |
|                             LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[[0, 0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])  |
|             FennelRenameRel(fieldNames=[[ENAME1, ENAME10]])                                                                                                |
|               LcsRowScanRel(table=[[LOCALDB, LHX, EMPS1]], projection=[[0, 0]], clustered indexes=[[SYS$CLUSTERED_INDEX$LHX$EMPS1$ENAME1]])                |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select ename1, ename1 from emps1 except select ename2, ename2 from emps2
. . . . . . . . > intersect select ename1, ename1 from emps1 order by 1;
+---------+----------+
| ENAME1  | ENAME10  |
+---------+----------+
| def     | def      |
+---------+----------+
0: jdbc:farrago:> 
0: jdbc:farrago:> --------------
0: jdbc:farrago:> -- Clean up --
0: jdbc:farrago:> --------------
0: jdbc:farrago:> !set outputformat table
0: jdbc:farrago:> alter session implementation set default;
0: jdbc:farrago:> drop schema lhx cascade;
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
