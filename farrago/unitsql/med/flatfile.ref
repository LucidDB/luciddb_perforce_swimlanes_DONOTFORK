0: jdbc:farrago:> -- $Id: //open/lu/dev/farrago/unitsql/med/flatfile.sql#6 $
0: jdbc:farrago:> -- Test flatfile namespace plugin
0: jdbc:farrago:> 
0: jdbc:farrago:> create schema flatfile_schema;
0: jdbc:farrago:> 
0: jdbc:farrago:> set schema 'flatfile_schema';
0: jdbc:farrago:> 
0: jdbc:farrago:> -- create wrapper for access to flatfile data
0: jdbc:farrago:> -- sys_file_wrapper has alread been allocated, but depending on a 
0: jdbc:farrago:> -- local data wrapper helps the test cleanup scripts
0: jdbc:farrago:> create foreign data wrapper local_file_wrapper
. . . . . . . . > library 'class com.lucidera.farrago.namespace.flatfile.FlatFileDataWrapper'
. . . . . . . . > language java;
0: jdbc:farrago:> 
0: jdbc:farrago:> -- create a server for general use
0: jdbc:farrago:> create server flatfile_server
. . . . . . . . > foreign data wrapper local_file_wrapper
. . . . . . . . > options (
. . . . . . . . >     directory 'unitsql/med',
. . . . . . . . >     file_extension 'csv',
. . . . . . . . >     with_header 'yes', 
. . . . . . . . >     log_directory 'testlog');
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test a table with explicit column definitions
0: jdbc:farrago:> create foreign table flatfile_explicit_table(
. . . . . . . . >     id int not null,
. . . . . . . . >     name varchar(50) not null,
. . . . . . . . >     extra_field char(1) not null)
. . . . . . . . > server flatfile_server
. . . . . . . . > options (filename 'example');
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfile_explicit_table order by 3;
+------+------------------------------------------+--------------+
|  ID  |                   NAME                   | EXTRA_FIELD  |
+------+------------------------------------------+--------------+
| 123  | Jonathan Ackerman                        | A            |
| 234  | Grady O'Neil                             | B            |
| 456  | Susan, Peter and Dave                    | C            |
| 789  | Amelia "meals" Maurice                   | E            |
| 123  | "S,"                                     | F            |
| 234  | Peter "peg leg", Jimmy & Samantha "Sam"  | G            |
+------+------------------------------------------+--------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test a table whose row type is too large
0: jdbc:farrago:> create foreign table flatfile_rowTypeTooBig(
. . . . . . . . >     a varchar(2000),
. . . . . . . . >     b varchar(2000),
. . . . . . . . >     c varchar(2000))
. . . . . . . . > server flatfile_server
. . . . . . . . > options (filename 'example');
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfile_rowTypeTooBig;
Error: Maximum row size (6008 bytes) exceeds limit (4096 bytes) (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test a table with a missing data file
0: jdbc:farrago:> create foreign table flatfile_missing(
. . . . . . . . >     id int not null,
. . . . . . . . >     name varchar(50) not null,
. . . . . . . . >     extra_field char(1) not null)
. . . . . . . . > server flatfile_server
. . . . . . . . > options (filename 'missing');
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfile_missing;
Error: Could not read data file unitsql/med/missing.csv (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test whether an attempt is made to log errors
0: jdbc:farrago:> -- note that this column description is invalid
0: jdbc:farrago:> create server flatfile_server_locked
. . . . . . . . > foreign data wrapper local_file_wrapper
. . . . . . . . > options (
. . . . . . . . >     directory 'unitsql/med',
. . . . . . . . >     file_extension 'csv',
. . . . . . . . >     with_header 'yes', 
. . . . . . . . >     log_directory 'unitsql/med');
0: jdbc:farrago:> 
0: jdbc:farrago:> create foreign table flatfile_locked(
. . . . . . . . >     id int not null,
. . . . . . . . >     name varchar(50) not null)
. . . . . . . . > server flatfile_server_locked
. . . . . . . . > options (
. . . . . . . . >     filename 'example',
. . . . . . . . >     log_filename 'locked');
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfile_locked;
Error: Could not write log file unitsql/med/locked (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test: bad line delimiter is given
0: jdbc:farrago:> -- note that the delimiter does not occur in the file
0: jdbc:farrago:> -- note that you can also choose an empty file extension
0: jdbc:farrago:> -- as a trick to pass the full path to foreign tables
0: jdbc:farrago:> create server flatfile_server_badLineDelim
. . . . . . . . > foreign data wrapper local_file_wrapper
. . . . . . . . > options (
. . . . . . . . >     file_extension '',
. . . . . . . . >     with_header 'yes',
. . . . . . . . >     line_delimiter '\t', 
. . . . . . . . >     log_directory 'testlog/');
0: jdbc:farrago:> 
0: jdbc:farrago:> create foreign table flatfile_badLineDelim(
. . . . . . . . >     id int not null,
. . . . . . . . >     name varchar(50) not null,
. . . . . . . . >     extra_field char(1) not null)
. . . . . . . . > server flatfile_server_badLineDelim
. . . . . . . . > options (filename 'unitsql/med/example.csv');
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfile_badLineDelim;
Error: Data file unitsql/med/example.csv has no row delimiter (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test: bad field delimiter is given
0: jdbc:farrago:> -- note that the delimiter does not occur in the file
0: jdbc:farrago:> create server flatfile_server_badFieldDelim
. . . . . . . . > foreign data wrapper local_file_wrapper
. . . . . . . . > options (
. . . . . . . . >     file_extension 'csv',
. . . . . . . . >     with_header 'yes',
. . . . . . . . >     field_delimiter '\t', 
. . . . . . . . >     log_directory 'testlog');
0: jdbc:farrago:> 
0: jdbc:farrago:> create foreign table flatfile_badFieldDelim(
. . . . . . . . >     id int not null,
. . . . . . . . >     name varchar(50) not null,
. . . . . . . . >     extra_field char(1) not null)
. . . . . . . . > server flatfile_server_badFieldDelim
. . . . . . . . > options (filename 'unitsql/med/example');
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfile_badFieldDelim;
Error: Read no rows from file unitsql/med/example.csv; last error was: Row has no column delimiter (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test: bad line delimiter is specified
0: jdbc:farrago:> -- (but it does occur in the file)
0: jdbc:farrago:> -- note: data file is assumed to have at least one 'G'
0: jdbc:farrago:> create server flatfile_server_incompleteColumn
. . . . . . . . > foreign data wrapper local_file_wrapper
. . . . . . . . > options (
. . . . . . . . >     file_extension 'csv',
. . . . . . . . >     with_header 'yes',
. . . . . . . . >     line_delimiter 'G', 
. . . . . . . . >     log_directory 'testlog');
0: jdbc:farrago:> 
0: jdbc:farrago:> create foreign table flatfile_incompleteColumn(
. . . . . . . . >     id int not null,
. . . . . . . . >     name varchar(50) not null,
. . . . . . . . >     extra_field char(1) not null)
. . . . . . . . > server flatfile_server_incompleteColumn
. . . . . . . . > options (filename 'unitsql/med/example');
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfile_incompleteColumn;
Error: Read no rows from file unitsql/med/example.csv; last error was: Column has no delimiter (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test: data file has too many columns
0: jdbc:farrago:> create foreign table flatfile_tooManyColumns(
. . . . . . . . >     id int not null,
. . . . . . . . >     name varchar(50) not null)
. . . . . . . . > server flatfile_server
. . . . . . . . > options (filename 'example');
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfile_tooManyColumns;
Error: Read no rows from file unitsql/med/example.csv; last error was: Row has too many columns (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test: data file has too few columns
0: jdbc:farrago:> create foreign table flatfile_tooFewColumns(
. . . . . . . . >     id int not null,
. . . . . . . . >     name varchar(50) not null,
. . . . . . . . >     extra_field char(1) not null,
. . . . . . . . >     extra_field2 char(1) not null)
. . . . . . . . > server flatfile_server
. . . . . . . . > options (filename 'example');
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfile_tooFewColumns;
Error: Read no rows from file unitsql/med/example.csv; last error was: Row has too few columns (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test: row text is too long in data file
0: jdbc:farrago:> -- the parser should give up when it's reached the max size
0: jdbc:farrago:> -- and should interpret this row as multiple rows
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test a describe query. this type of query returns the width of a 
0: jdbc:farrago:> -- table's fields. it is an internal query, and should not appear in
0: jdbc:farrago:> -- user level documentation.
0: jdbc:farrago:> select * from flatfile_server.SAMPLE_DESC."example2";
+--------------+
| FIELD_SIZES  |
+--------------+
| 3 22 11      |
+--------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test a sampling queries (which become important in the absence of 
0: jdbc:farrago:> -- bcp control files). there is no need to order their results, because 
0: jdbc:farrago:> -- the results appear as they do in the source file. in this case, the 
0: jdbc:farrago:> -- first line is the "header line". this feature is also undocumented.
0: jdbc:farrago:> select * from flatfile_server.SAMPLE."example2";
+-------+-------------------------+--------------+
| COL1  |          COL2           |     COL3     |
+-------+-------------------------+--------------+
| ID    | NAME                    | EXTRA_FIELD  |
| 123   | "S,"                    | F            |
| 123   | Jonathan Ackerman       | A            |
| 234   | Grady O'Neil            | B            |
| 456   | Susan, Peter and Dave   | C            |
| 789   | Amelia "meals" Maurice  | E            |
+-------+-------------------------+--------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test sampling errors
0: jdbc:farrago:> select * from flatfile_server.SAMPLE."missing";
Error: From line 1, column 15 to line 1, column 29: Table 'FLATFILE_SERVER.SAMPLE.missing' not found (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfile_server.SAMPLE."empty";
Error: Cound not sample data file unitsql/med/empty.csv (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test: read metadata from bcp files
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test import foreign schema using wrong schema name
0: jdbc:farrago:> import foreign schema testdata
. . . . . . . . > from server flatfile_server
. . . . . . . . > into flatfile_schema;
Error: Unknown foreign schema "TESTDATA" (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test: import foreign schema
0: jdbc:farrago:> -- the directory contains an empty data file with no control file
0: jdbc:farrago:> -- fails all imports
0: jdbc:farrago:> import foreign schema bcp
. . . . . . . . > from server flatfile_server
. . . . . . . . > into flatfile_schema;
Error: Cound not sample data file unitsql/med/empty.csv (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test: should fail; entire import failed
0: jdbc:farrago:> select * from flatfile_schema."example" order by 3;
Error: From line 1, column 15 to line 1, column 29: Table 'FLATFILE_SCHEMA.example' not found (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test a table using implicit column definitions
0: jdbc:farrago:> create foreign table flatfile_implicit_table
. . . . . . . . > server flatfile_server
. . . . . . . . > options (filename 'example');
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfile_implicit_table order by 3;
+----------+-------------------------------------------------------------------------------------------------------+---------------------------+
|    ID    |                                                 NAME                                                  |        EXTRA_FIELD        |
+----------+-------------------------------------------------------------------------------------------------------+---------------------------+
| 123      | Jonathan Ackerman                                                                                     | A                         |
| 234      | Grady O'Neil                                                                                          | B                         |
| 456      | Susan, Peter and Dave                                                                                 | C                         |
| 789      | Amelia "meals" Maurice                                                                                | E                         |
| 123      | "S,"                                                                                                  | F                         |
| 234      | Peter "peg leg", Jimmy & Samantha "Sam"                                                               | G                         |
+----------+-------------------------------------------------------------------------------------------------------+---------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test import schemas with/without bcp files
0: jdbc:farrago:> create schema flatfiledir_schema;
0: jdbc:farrago:> 
0: jdbc:farrago:> set schema 'flatfiledir_schema';
0: jdbc:farrago:> 
0: jdbc:farrago:> create server flatfiledir_server
. . . . . . . . > foreign data wrapper local_file_wrapper
. . . . . . . . > options (
. . . . . . . . >     directory 'unitsql/med/flatfiles',
. . . . . . . . >     file_extension 'csv',
. . . . . . . . >     with_header 'yes', 
. . . . . . . . >     log_directory 'testlog');
0: jdbc:farrago:> 
0: jdbc:farrago:> import foreign schema bcp
. . . . . . . . > from server flatfiledir_server
. . . . . . . . > into flatfiledir_schema;
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfiledir_schema."example2" order by 3;
+------+------------------------------------------+--------------+
|  ID  |                   NAME                   | EXTRA_FIELD  |
+------+------------------------------------------+--------------+
| 123  | Jonathan Ackerman                        | A            |
| 234  | Grady O'Neil                             | B            |
| 456  | Susan, Peter and Dave                    | C            |
| 789  | Amelia "meals" Maurice                   | E            |
| 123  | "S,"                                     | F            |
| 234  | Peter "peg leg", Jimmy & Samantha "Sam"  | G            |
+------+------------------------------------------+--------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> drop schema flatfiledir_schema cascade;
0: jdbc:farrago:> create schema flatfiledir_schema;
0: jdbc:farrago:> set schema 'flatfiledir_schema';
0: jdbc:farrago:> 
0: jdbc:farrago:> import foreign schema bcp EXCEPT TABLE_NAME LIKE 'E%'
. . . . . . . . > from server flatfiledir_server
. . . . . . . . > into flatfiledir_schema;
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfiledir_schema."example2" order by 3;
+------+------------------------------------------+--------------+
|  ID  |                   NAME                   | EXTRA_FIELD  |
+------+------------------------------------------+--------------+
| 123  | Jonathan Ackerman                        | A            |
| 234  | Grady O'Neil                             | B            |
| 456  | Susan, Peter and Dave                    | C            |
| 789  | Amelia "meals" Maurice                   | E            |
| 123  | "S,"                                     | F            |
| 234  | Peter "peg leg", Jimmy & Samantha "Sam"  | G            |
+------+------------------------------------------+--------------+
0: jdbc:farrago:> drop table flatfiledir_schema."example2";
0: jdbc:farrago:> drop table flatfiledir_schema."example";
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test files with null values
0: jdbc:farrago:> select * from flatfiledir_schema."withnulls" order by 3;
+------+------------------------------------------+--------------+
|  ID  |                   NAME                   | EXTRA_FIELD  |
+------+------------------------------------------+--------------+
|      |                                          |              |
| 123  |                                          |              |
|      | Susan, Peter and Dave                    |              |
|      |                                          |              |
| 123  | "S,"                                     | F            |
|      |                                          | G            |
| 234  | Peter "peg leg", Jimmy & Samantha "Sam"  | G            |
+------+------------------------------------------+--------------+
0: jdbc:farrago:> drop table flatfiledir_schema."withnulls";
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test badly qualified import foreign schema
0: jdbc:farrago:> import foreign schema bcp LIMIT TO ("no_table")
. . . . . . . . > from server flatfiledir_server
. . . . . . . . > into flatfiledir_schema;
Error: One or more tables not found while importing foreign schema "BCP":  [no_table] (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test qualified import foreign schema
0: jdbc:farrago:> import foreign schema bcp LIMIT TO ("example")
. . . . . . . . > from server flatfiledir_server
. . . . . . . . > into flatfiledir_schema;
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfiledir_schema."example" order by 3;
+----------+-------------------------------------------------------------------------------------------------------+---------------------------+
|    ID    |                                                 NAME                                                  |        EXTRA_FIELD        |
+----------+-------------------------------------------------------------------------------------------------------+---------------------------+
| 123      | Jonathan Ackerman                                                                                     | A                         |
| 234      | Grady O'Neil                                                                                          | B                         |
| 456      | Susan, Peter and Dave                                                                                 | C                         |
| 789      | Amelia "meals" Maurice                                                                                | E                         |
| 123      | "S,"                                                                                                  | F                         |
| 234      | Peter "peg leg", Jimmy & Samantha "Sam"                                                               | G                         |
+----------+-------------------------------------------------------------------------------------------------------+---------------------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test: not imported. fail
0: jdbc:farrago:> select * from flatfiledir_schema."example2" order by 3;
Error: From line 1, column 15 to line 1, column 32: Table 'FLATFILEDIR_SCHEMA.example2' not found (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> drop table flatfiledir_schema."example";
0: jdbc:farrago:> 
0: jdbc:farrago:> import foreign schema bcp LIMIT TO TABLE_NAME LIKE 'e%'
. . . . . . . . > from server flatfiledir_server
. . . . . . . . > into flatfiledir_schema;
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from flatfiledir_schema."example" order by 3;
+----------+-------------------------------------------------------------------------------------------------------+---------------------------+
|    ID    |                                                 NAME                                                  |        EXTRA_FIELD        |
+----------+-------------------------------------------------------------------------------------------------------+---------------------------+
| 123      | Jonathan Ackerman                                                                                     | A                         |
| 234      | Grady O'Neil                                                                                          | B                         |
| 456      | Susan, Peter and Dave                                                                                 | C                         |
| 789      | Amelia "meals" Maurice                                                                                | E                         |
| 123      | "S,"                                                                                                  | F                         |
| 234      | Peter "peg leg", Jimmy & Samantha "Sam"                                                               | G                         |
+----------+-------------------------------------------------------------------------------------------------------+---------------------------+
0: jdbc:farrago:> drop table flatfiledir_schema."example";
0: jdbc:farrago:> 
0: jdbc:farrago:> -- test: uses generated bcp
0: jdbc:farrago:> select * from flatfiledir_server.bcp."example2" order by 3;
+------+------------------------------------------+--------------+
|  ID  |                   NAME                   | EXTRA_FIELD  |
+------+------------------------------------------+--------------+
| 123  | Jonathan Ackerman                        | A            |
| 234  | Grady O'Neil                             | B            |
| 456  | Susan, Peter and Dave                    | C            |
| 789  | Amelia "meals" Maurice                   | E            |
| 123  | "S,"                                     | F            |
| 234  | Peter "peg leg", Jimmy & Samantha "Sam"  | G            |
+------+------------------------------------------+--------------+
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
