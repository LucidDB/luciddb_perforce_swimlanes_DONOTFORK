> -- Test management views
> 
> select count(url) from sys_boot.mgmt.sessions_view;
+---------+
| EXPR$0  |
+---------+
| 2       |
+---------+
> 
> select sql_stmt from sys_boot.mgmt.statements_view;
+-----------------------------------------------------+
|                      SQL_STMT                       |
+-----------------------------------------------------+
| select sql_stmt from sys_boot.mgmt.statements_view  |
+-----------------------------------------------------+
> 
> select count(mof_id) from sys_boot.mgmt.objects_in_use_view;
+---------+
| EXPR$0  |
+---------+
| 2       |
+---------+
> 
> select sys_boot.mgmt.sleep(1500) from (values(0));
+---------+
| EXPR$0  |
+---------+
| 0       |
+---------+
> 
> select count("mofId") from sys_boot.mgmt.dba_foreign_wrappers_internal;
+---------+
| EXPR$0  |
+---------+
| 4       |
+---------+
> 
> select count(*) from sys_boot.mgmt.dba_views_internal2
> where catalog_name='SYS_BOOT' and schema_name='MGMT';
+---------+
| EXPR$0  |
+---------+
| 33      |
+---------+
> 
> select parameter_name from sys_boot.mgmt.dba_routine_parameters_internal1
> where schema_name='MGMT' and routine_specific_name='SLEEP'
> order by 1;
+-----------------+
| PARAMETER_NAME  |
+-----------------+
| MILLIS          |
| RETURN          |
+-----------------+
> 
> -- SYS_CWM/FEM use different wrappers depending on repository configuration
> select foreign_wrapper_name, foreign_server_name
> from sys_boot.mgmt.dba_foreign_servers_internal2
> where foreign_server_name not in ('SYS_CWM', 'SYS_FEM')
> order by 1,2;
+-----------------------+-------------------------------+
| FOREIGN_WRAPPER_NAME  |      FOREIGN_SERVER_NAME      |
+-----------------------+-------------------------------+
| SYS_JDBC              | HSQLDB_DEMO                   |
| SYS_MDR               | SYS_MOF                       |
| SYS_MOCK_FOREIGN      | SYS_MOCK_FOREIGN_DATA_SERVER  |
+-----------------------+-------------------------------+
> 
> select foreign_server_name
> from sys_boot.mgmt.dba_foreign_servers_internal2
> order by 1;
+-------------------------------+
|      FOREIGN_SERVER_NAME      |
+-------------------------------+
| HSQLDB_DEMO                   |
| SYS_CWM                       |
| SYS_FEM                       |
| SYS_MOCK_FOREIGN_DATA_SERVER  |
| SYS_MOF                       |
+-------------------------------+
> 
> create schema mtest;
> create table mtest.t(col int primary key);
> insert into mtest.t values (1), (2), (3);
> 
> select count(*) from sys_boot.mgmt.dba_schemas_internal2
> where schema_name='MTEST';
+---------+
| EXPR$0  |
+---------+
| 1       |
+---------+
> 
> select table_name, table_type from sys_boot.mgmt.dba_tables_internal2
> where schema_name='MTEST';
+-------------+--------------+
| TABLE_NAME  |  TABLE_TYPE  |
+-------------+--------------+
| T           | LOCAL TABLE  |
+-------------+--------------+
> 
> analyze table mtest.t estimate statistics for all columns sample 66 percent;
> 
> select table_name, last_analyze_row_count 
> from sys_boot.mgmt.dba_stored_tables_internal2
> where schema_name='MTEST';
+-------------+-------------------------+
| TABLE_NAME  | LAST_ANALYZE_ROW_COUNT  |
+-------------+-------------------------+
| T           | 3                       |
+-------------+-------------------------+
> 
> drop schema mtest cascade;
> 
> select * from table(sys_boot.mgmt.browse_foreign_schemas('HSQLDB_DEMO'))
> order by schema_name;
+---------------------+--------------+
|     SCHEMA_NAME     | DESCRIPTION  |
+---------------------+--------------+
| INFORMATION_SCHEMA  |              |
| PUBLIC              |              |
| SALES               |              |
+---------------------+--------------+
> 
> -- specialize the JDBC foreign wrapper for a particular DBMS;
> -- note that the url setting is intended to be interpreted as a template
> create foreign data wrapper hsqldb_wrapper
> library '${FARRAGO_HOME}/plugin/FarragoMedJdbc.jar'
> language java
> options(
>     browse_connect_description 'Hypersonic',
>     driver_class 'org.hsqldb.jdbcDriver',
>     url 'jdbc:hsqldb:path/to/data'
> );
> 
> -- note that none of the system wrappers should have 
> -- browse_connect_description set, so don't need ORDER BY here
> select * from sys_boot.mgmt.browse_connect_foreign_wrappers;
+-----------------------+-----------------------------+
| FOREIGN_WRAPPER_NAME  | BROWSE_CONNECT_DESCRIPTION  |
+-----------------------+-----------------------------+
| HSQLDB_WRAPPER        | Hypersonic                  |
+-----------------------+-----------------------------+
> 
> -- query for available options with no proposed settings (empty_view)
> select * from table(
>   sys_boot.mgmt.browse_connect_foreign_server(
>     'HSQLDB_WRAPPER',
>     cursor(table sys_boot.mgmt.browse_connect_empty_options)))
> order by option_ordinal, option_choice_ordinal;
+-----------------+-------------------+-----------------------------------------------------+---------------------+------------------------+---------------------------+
| OPTION_ORDINAL  |    OPTION_NAME    |                 OPTION_DESCRIPTION                  | IS_OPTION_REQUIRED  | OPTION_CHOICE_ORDINAL  |    OPTION_CHOICE_VALUE    |
+-----------------+-------------------+-----------------------------------------------------+---------------------+------------------------+---------------------------+
| 0               | DRIVER_CLASS      | Fully-qualified class name of JDBC driver to load   | true                | -1                     | org.hsqldb.jdbcDriver     |
| 1               | URL               | JDBC URL for data source                            | true                | -1                     | jdbc:hsqldb:path/to/data  |
| 2               | USER_NAME         | User name for authentication in source DBMS         | false               | -1                     |                           |
| 3               | PASSWORD          | Password for authentication in source DBMS          | false               | -1                     |                           |
| 4               | EXTENDED_OPTIONS  | Whether driver-specific options should be accepted  | true                | -1                     | FALSE                     |
| 4               | EXTENDED_OPTIONS  | Whether driver-specific options should be accepted  | true                | 0                      | FALSE                     |
| 4               | EXTENDED_OPTIONS  | Whether driver-specific options should be accepted  | true                | 1                      | TRUE                      |
+-----------------+-------------------+-----------------------------------------------------+---------------------+------------------------+---------------------------+
> 
> -- query again with a real URL, asking for extended options:  
> -- should get back details direct from driver
> select option_name, option_choice_ordinal, option_choice_value from table(
>   sys_boot.mgmt.browse_connect_foreign_server(
>     'HSQLDB_WRAPPER',
>     cursor(
>         values ('URL', 'jdbc:hsqldb:testcases/hsqldb/scott'),
>                ('EXTENDED_OPTIONS', 'TRUE'))))
> order by option_ordinal, option_choice_ordinal;
+-------------------+------------------------+-------------------------------------+
|    OPTION_NAME    | OPTION_CHOICE_ORDINAL  |         OPTION_CHOICE_VALUE         |
+-------------------+------------------------+-------------------------------------+
| DRIVER_CLASS      | -1                     | org.hsqldb.jdbcDriver               |
| URL               | -1                     | jdbc:hsqldb:testcases/hsqldb/scott  |
| USER_NAME         | -1                     |                                     |
| PASSWORD          | -1                     |                                     |
| EXTENDED_OPTIONS  | -1                     | TRUE                                |
| EXTENDED_OPTIONS  | 0                      | FALSE                               |
| EXTENDED_OPTIONS  | 1                      | TRUE                                |
| user              | -1                     |                                     |
| password          | -1                     |                                     |
| get_column_name   | -1                     | true                                |
| get_column_name   | 0                      | true                                |
| get_column_name   | 1                      | false                               |
| ifexists          | -1                     |                                     |
| ifexists          | 0                      | true                                |
| ifexists          | 1                      | false                               |
| default_schema    | -1                     |                                     |
| default_schema    | 0                      | true                                |
| default_schema    | 1                      | false                               |
| shutdown          | -1                     |                                     |
| shutdown          | 0                      | true                                |
| shutdown          | 1                      | false                               |
+-------------------+------------------------+-------------------------------------+
> 
> -- NOTE jvs 17-Sept-2006:  Next ones return too much noise to make
> -- it possible to check their results; just verify that they can execute
> 
> select * from table(sys_boot.mgmt.threads()) where false;
+------------+--------------------+--------------+------------------+---------------+-----------+------------+-----------------+
| THREAD_ID  | THREAD_GROUP_NAME  | THREAD_NAME  | THREAD_PRIORITY  | THREAD_STATE  | IS_ALIVE  | IS_DAEMON  | IS_INTERRUPTED  |
+------------+--------------------+--------------+------------------+---------------+-----------+------------+-----------------+
+------------+--------------------+--------------+------------------+---------------+-----------+------------+-----------------+
> 
> select * from table(sys_boot.mgmt.thread_stack_entries()) where false;
+------------+--------------+---------------+-------------+--------------+------------+-----------+------------+
| THREAD_ID  | STACK_LEVEL  | ENTRY_STRING  | CLASS_NAME  | METHOD_NAME  | FILE_NAME  | LINE_NUM  | IS_NATIVE  |
+------------+--------------+---------------+-------------+--------------+------------+-----------+------------+
+------------+--------------+---------------+-------------+--------------+------------+-----------+------------+
> 
> select * from table(sys_boot.mgmt.system_info()) where false;
+-----------+--------------+--------------+------------+-------------+-------------+
| CATEGORY  | SUBCATEGORY  | SOURCE_NAME  | ITEM_NAME  | ITEM_UNITS  | ITEM_VALUE  |
+-----------+--------------+--------------+------------+-------------+-------------+
+-----------+--------------+--------------+------------+-------------+-------------+
> 
> select * from table(sys_boot.mgmt.performance_counters()) where false;
+-------------------+----------------------+--------------+---------------+----------------+----------------+
| COUNTER_CATEGORY  | COUNTER_SUBCATEGORY  | SOURCE_NAME  | COUNTER_NAME  | COUNTER_UNITS  | COUNTER_VALUE  |
+-------------------+----------------------+--------------+---------------+----------------+----------------+
+-------------------+----------------------+--------------+---------------+----------------+----------------+
> 
> select source_name, counter_name 
> from table(sys_boot.mgmt.performance_counters())
> order by source_name, counter_name;
+--------------+------------------------------------------+
| SOURCE_NAME  |               COUNTER_NAME               |
+--------------+------------------------------------------+
| Fennel       | CacheCheckpointWrites                    |
| Fennel       | CacheCheckpointWritesSinceInit           |
| Fennel       | CacheDirtyPages                          |
| Fennel       | CacheHits                                |
| Fennel       | CacheHitsSinceInit                       |
| Fennel       | CacheLazyWriteCalls                      |
| Fennel       | CacheLazyWriteCallsSinceInit             |
| Fennel       | CacheLazyWrites                          |
| Fennel       | CacheLazyWritesSinceInit                 |
| Fennel       | CachePageIoRetries                       |
| Fennel       | CachePageIoRetriesSinceInit              |
| Fennel       | CachePagePrefetchesRejected              |
| Fennel       | CachePagePrefetchesRejectedSinceInit     |
| Fennel       | CachePagesAllocated                      |
| Fennel       | CachePagesAllocationLimit                |
| Fennel       | CachePagesGoverned                       |
| Fennel       | CachePagesPrefetched                     |
| Fennel       | CachePagesPrefetchedSinceInit            |
| Fennel       | CachePagesRead                           |
| Fennel       | CachePagesReadSinceInit                  |
| Fennel       | CachePagesReserved                       |
| Fennel       | CachePagesUnused                         |
| Fennel       | CachePagesWritten                        |
| Fennel       | CachePagesWrittenSinceInit               |
| Fennel       | CacheRequests                            |
| Fennel       | CacheRequestsSinceInit                   |
| Fennel       | CacheReservePercentage                   |
| Fennel       | CacheVictimizationWrites                 |
| Fennel       | CacheVictimizationWritesSinceInit        |
| Fennel       | CacheVictimizations                      |
| Fennel       | CacheVictimizationsSinceInit             |
| Fennel       | DatabaseCheckpoints                      |
| Fennel       | DatabaseCheckpointsSinceInit             |
| Fennel       | DatabasePagesAllocated                   |
| Fennel       | DatabasePagesExtendedSinceInit           |
| Fennel       | DatabasePagesOccupiedHighWaterSinceInit  |
| Fennel       | ExpectedConcurrentStatements             |
| Fennel       | TempPagesAllocated                       |
| Fennel       | TempPagesExtendedSinceInit               |
| Fennel       | TempPagesOccupiedHighWaterSinceInit      |
| JVM          | JvmMemoryAllocated                       |
| JVM          | JvmMemoryAllocationLimit                 |
| JVM          | JvmMemoryUnused                          |
| JVM          | JvmNanoTime                              |
+--------------+------------------------------------------+
> 
> call sys_boot.mgmt.create_directory('testgen/mgmt_files');
> 
> create server test_server
> foreign data wrapper sys_file_wrapper
> options (
>     directory 'testgen/mgmt_files/',
>     file_extension 'csv',
>     with_header 'yes', 
>     lenient 'no');
> 
> call sys_boot.mgmt.flush_code_cache();
> 
> -- should pass
> call sys_boot.mgmt.test_data_server('TEST_SERVER');
> 
> call sys_boot.mgmt.flush_code_cache();
> 
> -- should pass
> call sys_boot.mgmt.test_all_servers_for_wrapper('SYS_FILE_WRAPPER');
> 
> call sys_boot.mgmt.delete_file_or_directory('testgen/mgmt_files');
> 
> call sys_boot.mgmt.flush_code_cache();
> 
> -- should fail now that directory is gone
> call sys_boot.mgmt.test_data_server('TEST_SERVER');
Error: Directory testgen/mgmt_files/ does not exist (state=,code=0)
> 
> call sys_boot.mgmt.flush_code_cache();
> 
> -- should fail now that directory is gone
> call sys_boot.mgmt.test_all_servers_for_wrapper('SYS_FILE_WRAPPER');
Error: Directory testgen/mgmt_files/ does not exist (state=,code=0)
> 
> -- set code cache size to some arbitrary number
> alter system set "codeCacheMaxBytes" = 42000;
> 
> call sys_boot.mgmt.flush_code_cache();
> 
> -- verify that flush did not modify code cache size
> select "codeCacheMaxBytes" from sys_fem."Config"."FarragoConfig";
+--------------------+
| codeCacheMaxBytes  |
+--------------------+
| 42000              |
+--------------------+
> 
> -- these should all pass
> 
> select statement from table(sys_boot.mgmt.generate_ddl_for_catalog());

||

| CREATE OR REPLACE FOREIGN DATA WRAPPER "HSQLDB_WRAPPER" LIBRARY '${FARRAGO_HOME}/plugin/FarragoMedJdbc.jar'
LANGUAGE JAVA
OPTIONS (
  "BROWSE_CONNECT_DESCRIPTION" 'Hypersonic',
  "DRIVER_CLASS" 'org.hsqldb.jdbcDriver',
  "URL" 'jdbc:hsqldb:path/to/data'
);

CREATE OR REPLACE FOREIGN DATA WRAPPER "SYS_COLUMN_STORE" LIBRARY 'class org.luciddb.lcs.LcsDataWrapper'
LANGUAGE JAVA;

CREATE OR REPLACE FOREIGN DATA WRAPPER "SYS_FILE_WRAPPER" LIBRARY 'class net.sf.farrago.namespace.flatfile.FlatFileDataWrapper'
LANGUAGE JAVA;

CREATE OR REPLACE FOREIGN DATA WRAPPER "SYS_FTRS" LIBRARY 'class net.sf.farrago.namespace.ftrs.FtrsDataWrapper'
LANGUAGE JAVA;

CREATE OR REPLACE FOREIGN DATA WRAPPER "SYS_JDBC" LIBRARY '${FARRAGO_HOME}/plugin/FarragoMedJdbc.jar'
LANGUAGE JAVA;

CREATE OR REPLACE FOREIGN DATA WRAPPER "SYS_MDR" LIBRARY 'class net.sf.farrago.namespace.mdr.MedMdrForeignDataWrapper'
LANGUAGE JAVA;

CREATE OR REPLACE FOREIGN DATA WRAPPER "SYS_MOCK" LIBRARY 'class net.sf.farrago.namespace.mock.MedMockLocalDataWrapp |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
> 
> create schema reznor;
> create table reznor.rhino (
>   a int primary key,
>   b int
> );
> create view reznor.r_view as
>   select a, b from reznor.rhino;
> create function reznor.eat(plumber varchar(32))
> returns varchar(20)
> contains sql
> return case
>   when plumber = 'Mario' then 'Luigi'
>   else 'Mario' end;
> 
> select statement from table(sys_boot.mgmt.generate_ddl_for_schema('REZNOR'));
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                                                                                                                                                                                  STATEMENT                                                                                                                                                                                                                                  |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| CREATE OR REPLACE SCHEMA "REZNOR";

CREATE TABLE "REZNOR"."RHINO" (
   "A" INTEGER NOT NULL,
   "B" INTEGER,
   PRIMARY KEY ("A")
);

CREATE OR REPLACE FUNCTION "REZNOR"."EAT"(
  "PLUMBER" VARCHAR(32))
RETURNS VARCHAR(20)
SPECIFIC "REZNOR"."EAT"
LANGUAGE SQL
CONTAINS SQL
NOT DETERMINISTIC
RETURN CASE WHEN "PLUMBER" = 'Mario' THEN 'Luigi' ELSE 'Mario' END;

SET SCHEMA '"REZNOR"';
CREATE OR REPLACE VIEW "REZNOR"."R_VIEW" AS
select a, b from reznor.rhino;

  |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
> select statement from
>   table(sys_boot.mgmt.generate_ddl_for_table('REZNOR', 'RHINO'));
+-----------------------------------------------------------------------------------------------------+
|                                              STATEMENT                                              |
+-----------------------------------------------------------------------------------------------------+
| CREATE TABLE "REZNOR"."RHINO" (
   "A" INTEGER NOT NULL,
   "B" INTEGER,
   PRIMARY KEY ("A")
);

  |
+-----------------------------------------------------------------------------------------------------+
> select statement from
>   table(sys_boot.mgmt.generate_ddl_for_table('REZNOR', 'RHINO'));
+-----------------------------------------------------------------------------------------------------+
|                                              STATEMENT                                              |
+-----------------------------------------------------------------------------------------------------+
| CREATE TABLE "REZNOR"."RHINO" (
   "A" INTEGER NOT NULL,
   "B" INTEGER,
   PRIMARY KEY ("A")
);

  |
+-----------------------------------------------------------------------------------------------------+
> select statement from
>   table(sys_boot.mgmt.generate_ddl_for_table('REZNOR', 'R_VIEW'));
+------------------------------------------------------------------------------------------------------+
|                                              STATEMENT                                               |
+------------------------------------------------------------------------------------------------------+
| SET SCHEMA '"REZNOR"';
CREATE OR REPLACE VIEW "REZNOR"."R_VIEW" AS
select a, b from reznor.rhino;

  |
+------------------------------------------------------------------------------------------------------+
> select statement from
>   table(sys_boot.mgmt.generate_ddl_for_table('REZNOR', 'not_exist'));
+------------+
| STATEMENT  |
+------------+
|            |
+------------+
> select statement from
>   table(sys_boot.mgmt.generate_ddl_for_routine('REZNOR', 'EAT'));
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                                                             STATEMENT                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| CREATE OR REPLACE FUNCTION "REZNOR"."EAT"(
  "PLUMBER" VARCHAR(32))
RETURNS VARCHAR(20)
SPECIFIC "REZNOR"."EAT"
LANGUAGE SQL
CONTAINS SQL
NOT DETERMINISTIC
RETURN CASE WHEN "PLUMBER" = 'Mario' THEN 'Luigi' ELSE 'Mario' END;

  |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
> 
> drop schema reznor cascade;
> 
> !quit
