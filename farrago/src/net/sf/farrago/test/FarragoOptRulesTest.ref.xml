<?xml version="1.0" ?>
<Root>
    <TestCase name="testFennelSortRule">
        <Resource name="sql">
            <![CDATA[select * from sales.depts order by deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
SortRel(sort0=[$0], dir0=[Ascending])
  ProjectRel(DEPTNO=[$0], NAME=[$1])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
FennelSortRel(key=[[0]], discardDuplicates=[false])
  ProjectRel(DEPTNO=[$0], NAME=[$1])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testFennelCartesianJoinRule">
        <Resource name="sql">
            <![CDATA[select 1 from sales.emps,sales.depts]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[1])
  JoinRel(condition=[true], joinType=[inner])
    TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[1])
  FennelCartesianProductRel(leftouterjoin=[false])
    TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testFennelAggRule">
        <Resource name="sql">
            <![CDATA[select deptno from sales.depts group by deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(DEPTNO=[$0])
  AggregateRel(groupCount=[1])
    ProjectRel($f0=[$0])
      TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(DEPTNO=[$0])
  FennelAggRel(groupCount=[1])
    FennelSortRel(key=[[0]], discardDuplicates=[false])
      ProjectRel($f0=[$0])
        TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testFtrsTableAccessRule">
        <Resource name="sql">
            <![CDATA[select deptno from sales.depts]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(DEPTNO=[$0])
  TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(DEPTNO=[$0])
  FtrsIndexScanRel(table=[[LOCALDB, SALES, DEPTS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$DEPTS$SYS$PRIMARY_KEY], preserveOrder=[false])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testFtrsScanToSearchRule">
        <Resource name="sql">
            <![CDATA[select * from sales.depts where deptno=5]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(DEPTNO=[$0], NAME=[$1])
  FilterRel(condition=[=($0, 5)])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(DEPTNO=[$0], NAME=[$1])
  FtrsIndexSearchRel(table=[[LOCALDB, SALES, DEPTS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$DEPTS$SYS$PRIMARY_KEY], uniqueKey=[false], preserveOrder=[false], outer=[false], inputKeyProj=[[1, 3]], inputJoinProj=[[]], inputDirectiveProj=[[0, 2]])
    FennelValuesRel(tuples=[[{ _ISO-8859-1'[', 5, _ISO-8859-1']', 5 }]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testFtrsTableProjectionRule">
        <Resource name="sql">
            <![CDATA[select name from sales.emps]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(NAME=[$1])
  TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[[1]], index=[EMPS_UX], preserveOrder=[false])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testFennelToIteratorConverterRule">
        <Resource name="sql">
            <![CDATA[select upper(name) from sales.emps]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[UPPER($1)])
  TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
IterCalcRel(expr#0..9=[{inputs}], expr#10=[UPPER($t1)], EXPR$0=[$t10])
  FennelToIteratorConverter
    FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$EMPS$SYS$PRIMARY_KEY], preserveOrder=[false])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testHeterogeneousConversion">
        <Resource name="sql">
            <![CDATA[select upper(name) from sales.emps union all select lower(name) from sales.emps]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
UnionRel(all=[true])
  ProjectRel(EXPR$0=[UPPER($1)])
    TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
  ProjectRel(EXPR$0=[LOWER($1)])
    TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
UnionRel(all=[true])
  IterCalcRel(expr#0..9=[{inputs}], expr#10=[UPPER($t1)], EXPR$0=[$t10])
    FennelToIteratorConverter
      FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$EMPS$SYS$PRIMARY_KEY], preserveOrder=[false])
  FennelCalcRel(expr#0..9=[{inputs}], expr#10=[LOWER($t1)], EXPR$0=[$t10])
    FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$EMPS$SYS$PRIMARY_KEY], preserveOrder=[false])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testMergeFilterWithJoinCondition">
        <Resource name="sql">
            <![CDATA[select d.name as dname,e.name as ename from sales.emps e inner join sales.depts d on e.deptno=d.deptno where d.name='Propane']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(DNAME=[$11], ENAME=[$1])
  FilterRel(condition=[=($11, _ISO-8859-1'Propane')])
    JoinRel(condition=[=($2, $10)], joinType=[inner])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
      TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
IterCalcRel(expr#0..11=[{inputs}], DNAME=[$t11], ENAME=[$t1])
  FennelToIteratorConverter
    FennelCalcRel(expr#0..11=[{inputs}], expr#12=[=($t2, $t10)], expr#13=[_ISO-8859-1'Propane'], expr#14=[=($t11, $t13)], expr#15=[AND($t12, $t14)], proj#0..11=[{exprs}], $condition=[$t15])
      FennelCartesianProductRel(leftouterjoin=[false])
        FtrsIndexScanRel(table=[[LOCALDB, SALES, EMPS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$EMPS$SYS$PRIMARY_KEY], preserveOrder=[false])
        FennelBufferRel(inMemory=[false], multiPass=[true])
          FtrsIndexScanRel(table=[[LOCALDB, SALES, DEPTS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$DEPTS$SYS$PRIMARY_KEY], preserveOrder=[false])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSemiJoinPastJoinRule_Left">
        <Resource name="sql">
            <![CDATA[select e1.name from sales.emps e1, sales.depts d, sales.emps e2 where e1.deptno = d.deptno and e1.empno = e2.empno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(NAME=[$1])
  FilterRel(condition=[AND(=($2, $10), =($0, $12))])
    JoinRel(condition=[true], joinType=[inner])
      JoinRel(condition=[true], joinType=[inner])
        TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
        TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(NAME=[$1])
  JoinRel(condition=[=($0, $12)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
    JoinRel(condition=[=($2, $10)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
      SemiJoinRel(condition=[=($0, $10)], joinType=[inner])
        SemiJoinRel(condition=[=($2, $10)], joinType=[inner])
          TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
          TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
        TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
      TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
    TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSemiJoinPastJoinRule_Right">
        <Resource name="sql">
            <![CDATA[select e1.name from sales.emps e1, sales.depts d, sales.emps e2 where e1.deptno = d.deptno and d.deptno = e2.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(NAME=[$1])
  FilterRel(condition=[AND(=($2, $10), =($10, $14))])
    JoinRel(condition=[true], joinType=[inner])
      JoinRel(condition=[true], joinType=[inner])
        TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
        TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(NAME=[$1])
  JoinRel(condition=[=($10, $14)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
    JoinRel(condition=[=($2, $10)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
      SemiJoinRel(condition=[=($2, $10)], joinType=[inner])
        TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
        TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
      SemiJoinRel(condition=[=($0, $4)], joinType=[inner])
        TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
        TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
    TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSemiJoinPastFilter">
        <Resource name="sql">
            <![CDATA[select e.name from sales.emps e, sales.depts d where e.deptno = d.deptno and e.name = 'foo']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(NAME=[$1])
  FilterRel(condition=[AND(=($2, $10), =($1, _ISO-8859-1'foo'))])
    JoinRel(condition=[true], joinType=[inner])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
      TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(NAME=[$1])
  JoinRel(condition=[=($2, $10)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
    FilterRel(condition=[=($1, _ISO-8859-1'foo')])
      SemiJoinRel(condition=[=($2, $10)], joinType=[inner])
        TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
        TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testConvertMultiJoinRule">
        <Resource name="sql">
            <![CDATA[select e1.name from sales.emps e1, sales.depts d, sales.emps e2 where e1.deptno = d.deptno and d.deptno = e2.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(NAME=[$1])
  FilterRel(condition=[AND(=($2, $10), =($10, $14))])
    JoinRel(condition=[true], joinType=[inner])
      JoinRel(condition=[true], joinType=[inner])
        TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
        TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(NAME=[$1])
  MultiJoinRel(joinFilter=[AND(=($10, $14), =($2, $10))], isFullOuterJoin=[false], joinTypes=[[INNER, INNER, INNER]], outerJoinConditions=[[NULL, NULL, NULL]])
    TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
    TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testReduceConstants">
        <Resource name="sql">
            <![CDATA[select 1+2, deptno+(3+4), (5+6)+deptno, cast(null as integer), coalesce(2,null) from sales.depts where deptno=(7+8) and deptno=coalesce(2,null)]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(EXPR$0=[+(1, 2)], EXPR$1=[+($0, +(3, 4))], EXPR$2=[+(+(5, 6), $0)], EXPR$3=[CAST(null):INTEGER], EXPR$4=[CASE(IS NOT NULL(2), 2, CAST(null):INTEGER)])
  FilterRel(condition=[AND(=($0, +(7, 8)), =($0, CASE(IS NOT NULL(2), 2, CAST(null):INTEGER)))])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(EXPR$0=[3], EXPR$1=[+($0, 7)], EXPR$2=[+(11, $0)], EXPR$3=[CAST(null):INTEGER], EXPR$4=[CAST(2):INTEGER])
  FilterRel(condition=[AND(=($0, 15), =($0, 2))])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testRemoveSemiJoin">
        <Resource name="sql">
            <![CDATA[select e.name from sales.emps e, sales.depts d where e.deptno = d.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(NAME=[$1])
  FilterRel(condition=[=($2, $10)])
    JoinRel(condition=[true], joinType=[inner])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
      TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(NAME=[$1])
  JoinRel(condition=[=($2, $10)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
    TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testRemoveSemiJoinWithFilter">
        <Resource name="sql">
            <![CDATA[select e.name from sales.emps e, sales.depts d where e.deptno = d.deptno and e.name = 'foo']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(NAME=[$1])
  FilterRel(condition=[AND(=($2, $10), =($1, _ISO-8859-1'foo'))])
    JoinRel(condition=[true], joinType=[inner])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
      TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(NAME=[$1])
  JoinRel(condition=[=($2, $10)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
    FilterRel(condition=[=($1, _ISO-8859-1'foo')])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testRemoveSemiJoinRight">
        <Resource name="sql">
            <![CDATA[select e1.name from sales.emps e1, sales.depts d, sales.emps e2 where e1.deptno = d.deptno and d.deptno = e2.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(NAME=[$1])
  FilterRel(condition=[AND(=($2, $10), =($10, $14))])
    JoinRel(condition=[true], joinType=[inner])
      JoinRel(condition=[true], joinType=[inner])
        TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
        TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(NAME=[$1])
  JoinRel(condition=[=($10, $14)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
    JoinRel(condition=[=($2, $10)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
      TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
    TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testRemoveSemiJoinRightWithFilter">
        <Resource name="sql">
            <![CDATA[select e1.name from sales.emps e1, sales.depts d, sales.emps e2 where e1.deptno = d.deptno and d.deptno = e2.deptno and d.name = 'foo']]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(NAME=[$1])
  FilterRel(condition=[AND(AND(=($2, $10), =($10, $14)), =($11, _ISO-8859-1'foo'))])
    JoinRel(condition=[true], joinType=[inner])
      JoinRel(condition=[true], joinType=[inner])
        TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
        TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(NAME=[$1])
  JoinRel(condition=[=($10, $14)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
    JoinRel(condition=[=($2, $10)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
      TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
      FilterRel(condition=[=($1, _ISO-8859-1'foo')])
        TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
    TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testConvertMultiJoinRuleOuterJoins">
        <Resource name="sql">
            <![CDATA[select * from     (select * from         (select * from             (select * from A right outer join B on a = b)             left outer join             (select * from C full outer join D on c = d)            on a = c and b = d)         right outer join         (select * from             (select * from E full outer join F on e = f)             right outer join             (select * from G left outer join H on g = h)             on e = g and f = h)         on a = e and b = f and c = g and d = h)     inner join     (select * from I inner join J on i = j)     on a = i and h = j]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(A=[$0], B=[$1], C=[$2], D=[$3], E=[$4], F=[$5], G=[$6], H=[$7], I=[$8], J=[$9])
  JoinRel(condition=[AND(=($0, $8), =($7, $9))], joinType=[inner])
    ProjectRel(A=[$0], B=[$1], C=[$2], D=[$3], E=[$4], F=[$5], G=[$6], H=[$7])
      JoinRel(condition=[AND(AND(AND(=($0, $4), =($1, $5)), =($2, $6)), =($3, $7))], joinType=[right])
        ProjectRel(A=[$0], B=[$1], C=[$2], D=[$3])
          JoinRel(condition=[AND(=($0, $2), =($1, $3))], joinType=[left])
            ProjectRel(A=[$0], B=[$1])
              JoinRel(condition=[=($0, $1)], joinType=[right])
                TableAccessRel(table=[[LOCALDB, OJ, A]])
                TableAccessRel(table=[[LOCALDB, OJ, B]])
            ProjectRel(C=[$0], D=[$1])
              JoinRel(condition=[=($0, $1)], joinType=[full])
                TableAccessRel(table=[[LOCALDB, OJ, C]])
                TableAccessRel(table=[[LOCALDB, OJ, D]])
        ProjectRel(E=[$0], F=[$1], G=[$2], H=[$3])
          JoinRel(condition=[AND(=($0, $2), =($1, $3))], joinType=[right])
            ProjectRel(E=[$0], F=[$1])
              JoinRel(condition=[=($0, $1)], joinType=[full])
                TableAccessRel(table=[[LOCALDB, OJ, E]])
                TableAccessRel(table=[[LOCALDB, OJ, F]])
            ProjectRel(G=[$0], H=[$1])
              JoinRel(condition=[=($0, $1)], joinType=[left])
                TableAccessRel(table=[[LOCALDB, OJ, G]])
                TableAccessRel(table=[[LOCALDB, OJ, H]])
    ProjectRel(I=[$0], J=[$1])
      JoinRel(condition=[=($0, $1)], joinType=[inner])
        TableAccessRel(table=[[LOCALDB, OJ, I]])
        TableAccessRel(table=[[LOCALDB, OJ, J]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
MultiJoinRel(joinFilter=[AND(AND(=($0, $8), =($7, $9)), =($8, $9))], isFullOuterJoin=[false], joinTypes=[[RIGHT, RIGHT, INNER, LEFT, INNER, INNER]], outerJoinConditions=[[AND(AND(AND(=($0, $4), =($1, $5)), =($2, $6)), =($3, $7)), AND(=($4, $6), =($5, $7)), NULL, =($6, $7), NULL, NULL]])
  MultiJoinRel(joinFilter=[true], isFullOuterJoin=[false], joinTypes=[[RIGHT, INNER, LEFT]], outerJoinConditions=[[=($0, $1), NULL, AND(=($0, $2), =($1, $3))]])
    TableAccessRel(table=[[LOCALDB, OJ, A]])
    TableAccessRel(table=[[LOCALDB, OJ, B]])
    MultiJoinRel(joinFilter=[=($0, $1)], isFullOuterJoin=[true], joinTypes=[[INNER, INNER]], outerJoinConditions=[[NULL, NULL]])
      TableAccessRel(table=[[LOCALDB, OJ, C]])
      TableAccessRel(table=[[LOCALDB, OJ, D]])
  MultiJoinRel(joinFilter=[=($0, $1)], isFullOuterJoin=[true], joinTypes=[[INNER, INNER]], outerJoinConditions=[[NULL, NULL]])
    TableAccessRel(table=[[LOCALDB, OJ, E]])
    TableAccessRel(table=[[LOCALDB, OJ, F]])
  TableAccessRel(table=[[LOCALDB, OJ, G]])
  TableAccessRel(table=[[LOCALDB, OJ, H]])
  TableAccessRel(table=[[LOCALDB, OJ, I]])
  TableAccessRel(table=[[LOCALDB, OJ, J]])
]]>
        </Resource>
    </TestCase>
    <TestCase name="testPushSemiJoinPastProject">
        <Resource name="sql">
            <![CDATA[select e.* from (select name, trim(city), age * 2, deptno from sales.emps) e, sales.depts d where e.deptno = d.deptno]]>
        </Resource>
        <Resource name="planBefore">
            <![CDATA[
ProjectRel(NAME=[$0], EXPR$1=[$1], EXPR$2=[$2], DEPTNO=[$3])
  FilterRel(condition=[=($3, $4)])
    JoinRel(condition=[true], joinType=[inner])
      ProjectRel(NAME=[$1], EXPR$1=[TRIM(FLAG(Both), _ISO-8859-1' ', $4)], EXPR$2=[*($6, 2)], DEPTNO=[$2])
        TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
      TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
        <Resource name="planAfter">
            <![CDATA[
ProjectRel(NAME=[$0], EXPR$1=[$1], EXPR$2=[$2], DEPTNO=[$3])
  JoinRel(condition=[=($3, $4)], joinType=[inner], semiJoinDone=[true], multiJoinDone=[false])
    ProjectRel(NAME=[$1], EXPR$1=[TRIM(FLAG(Both), _ISO-8859-1' ', $4)], EXPR$2=[*($6, 2)], DEPTNO=[$2])
      SemiJoinRel(condition=[=($2, $10)], joinType=[inner])
        TableAccessRel(table=[[LOCALDB, SALES, EMPS]])
        TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
    TableAccessRel(table=[[LOCALDB, SALES, DEPTS]])
]]>
        </Resource>
    </TestCase>
</Root>
