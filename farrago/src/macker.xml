<?xml version="1.0"?>
<!-- 
// $Id$
// Farrago is an extensible data management system.
// Copyright (C) 2005-2005 The Eigenbase Project
// Copyright (C) 2005-2005 Disruptive Tech
// Copyright (C) 2005-2005 LucidEra, Inc.
// Portions Copyright (C) 2003-2005 John V. Sichi
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later Eigenbase-approved version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//  
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307  USA
-->

<macker>
  <ruleset name="Layering rules">
    <!-- libraries -->

    <pattern name="eigenbase">
      <include class="org.eigenbase.****" />
    </pattern>

    <pattern name="farrago">
      <include class="net.sf.farrago.****" />
      <include class="com.disruptivetech.farrago.****" />
    </pattern>

    <!-- farrago components -->
    <pattern name="cwm" class="net.sf.farrago.cwm.***" />
    <pattern name="fem" class="net.sf.farrago.fem.***" />
    <pattern name="FarragoPackage">
      <include class="net.sf.farrago.FarragoPackage" />
      <include class="net.sf.farrago.FarragoMetadataFactory" />
    </pattern>
    <pattern name="trace" class="net.sf.farrago.trace.*" />
    <pattern name="util" class="net.sf.farrago.util.*" />
    <pattern name="resource" class="net.sf.farrago.resource.*" />
    <pattern name="catalog.codegen" class="net.sf.farrago.catalog.codegen.*" />
    <pattern name="catalog" class="net.sf.farrago.catalog.*" />
    <pattern name="plugin" class="net.sf.farrago.plugin.*" />
    <pattern name="type" class="net.sf.farrago.type.*" />
    <pattern name="type.runtime" class="net.sf.farrago.type.runtime.*" />
    <pattern name="namespace" class="net.sf.farrago.namespace.*" />
    <pattern name="namespace.util" class="net.sf.farrago.namespace.util.*" />
    <pattern name="fennel" class="net.sf.farrago.fennel.*" />
    <pattern name="session" class="net.sf.farrago.session.*" />
    <pattern name="runtime" class="net.sf.farrago.runtime.*" />
    <pattern name="dynamic" class="net.sf.farrago.dynamic.*" />
    <pattern name="ojrex" class="net.sf.farrago.ojrex.*" />
    <pattern name="query" class="net.sf.farrago.query.*" />
    <pattern name="ddl" class="net.sf.farrago.ddl.*" />
    <pattern name="parser" class="net.sf.farrago.parser.**" />
    <pattern name="db" class="net.sf.farrago.db.*" />
    <pattern name="jdbc" class="net.sf.farrago.jdbc.*" />
    <pattern name="jdbc.engine" class="net.sf.farrago.jdbc.engine.*" />
    <pattern name="jdbc.client" class="net.sf.farrago.jdbc.client.*" />
    <pattern name="jdbc.rmi" class="net.sf.farrago.jdbc.rmi.*" />
    <pattern name="server" class="net.sf.farrago.server.*" />
    <pattern name="namespace.impl" class="net.sf.farrago.namespace.impl.*" />
    <pattern name="namespace.mdr" class="net.sf.farrago.namespace.mdr.*" />
    <pattern name="namespace.mock" class="net.sf.farrago.namespace.mock.*" />
    <pattern name="namespace.jdbc" class="net.sf.farrago.namespace.jdbc.*" />
    <pattern name="namespace.ftrs" class="net.sf.farrago.namespace.ftrs.*" />

    <pattern name="dt.calc" class="com.disruptivetech.farrago.calc.*" />
    <pattern name="dt.volcano" class="com.disruptivetech.farrago.volcano.*" />
    <pattern name="dt.rel" class="com.disruptivetech.farrago.rel.*" />
    <pattern name="dt.fennel" class="com.disruptivetech.farrago.fennel.*" />
    <pattern name="dt.sql.advise" class="com.disruptivetech.farrago.sql.advise.*" />

    <pattern name="rs.fennel" class="com.redsquare.farrago.fennel.*" />

    <pattern name="defimpl" class="net.sf.farrago.defimpl.*" />

    <pattern name="test" class="net.sf.farrago.test.**" />

    <pattern name="dt.test" class="com.disruptivetech.farrago.test.*" />

    <pattern name="plannerviz" class="net.sf.farrago.plannerviz.**" />

    <!-- explicit list of all farrago components above -->
    <pattern name="farrago.explicit">
      <include pattern="cwm"/>
      <include pattern="fem"/>
      <include pattern="FarragoPackage"/>
      <include pattern="trace"/>
      <include pattern="util"/>
      <include pattern="resource"/>
      <include pattern="catalog.codegen"/>
      <include pattern="catalog"/>
      <include pattern="plugin"/>
      <include pattern="type"/>
      <include pattern="type.runtime"/>
      <include pattern="namespace"/>
      <include pattern="namespace.util"/>
      <include pattern="fennel"/>
      <include pattern="session"/>
      <include pattern="runtime"/>
      <include pattern="dynamic"/>
      <include pattern="ojrex"/>
      <include pattern="query"/>
      <include pattern="ddl"/>
      <include pattern="parser"/>
      <include pattern="db"/>
      <include pattern="jdbc"/>
      <include pattern="jdbc.engine"/>
      <include pattern="jdbc.client"/>
      <include pattern="jdbc.rmi"/>
      <include pattern="server"/>
      <include pattern="namespace.impl"/>
      <include pattern="namespace.mdr"/>
      <include pattern="namespace.mock"/>
      <include pattern="namespace.jdbc"/>
      <include pattern="namespace.ftrs"/>
      <include pattern="dt.calc"/>
      <include pattern="dt.volcano"/>
      <include pattern="dt.rel"/>
      <include pattern="dt.fennel"/>
      <include pattern="dt.sql.advise"/>
      <include pattern="rs.fennel"/>
      <include pattern="defimpl"/>
      <include pattern="test"/>
      <include pattern="dt.test"/>
      <include pattern="plannerviz"/>
    </pattern>

    <!-- Below are the actual rules. -->
    <!-- We define a COMPONENT.deps pattern for each component; -->
    <!-- these can be reused in other patterns, avoiding explict -->
    <!-- transitive closure.  The components are topologically -->
    <!-- sorted, starting from those which depend on nothing. -->

    <pattern name="FarragoPackage.deps">
      <include pattern="FarragoPackage" />
      <include pattern="cwm" />
      <include pattern="fem" />
    </pattern>

    <!-- NOTE:  we don't enforce any rules on what generated classes in
         FarragoPackage can depend on; this is to allow extensions. -->

    <pattern name="util.deps">
      <include pattern="trace" />
      <include pattern="util" />
    </pattern>

    <!-- NOTE:  trace is a special case, allowing for a circular dependency
         with just about anything, but not transitively -->

    <access-rule>
      <message>util dependency violation</message>
      <deny>
        <from pattern="util" />
        <to pattern="farrago" />
        <allow>
          <to pattern="util.deps" />
        </allow>
      </deny>
    </access-rule>

    <!-- special-case rule to enforce FarragoException restrictions -->
    <access-rule>
      <message>FarragoException dependency violation</message>
      <deny>
        <from class="net.sf.farrago.util.FarragoException" />
        <to pattern="farrago" />
      </deny>
    </access-rule>

    <pattern name="resource.deps">
      <include pattern="util.deps" />
      <include pattern="resource" />
    </pattern>

    <access-rule>
      <message>resource dependency violation</message>
      <deny>
        <from pattern="resource" />
        <to pattern="farrago" />
        <allow>
          <to pattern="resource.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="catalog.codegen.deps">
      <include pattern="FarragoPackage.deps" />
      <include pattern="util.deps" />
      <include pattern="catalog.codegen" />
      <include class="net.sf.farrago.catalog.FarragoModelLoader" />
    </pattern>

    <access-rule>
      <message>catalog.codegen dependency violation</message>
      <deny>
        <from pattern="catalog.codegen" />
        <to pattern="farrago" />
        <allow>
          <to pattern="catalog.codegen.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="catalog.deps">
      <include pattern="FarragoPackage.deps" />
      <include pattern="resource.deps" />
      <include pattern="catalog" />
    </pattern>

    <access-rule>
      <message>catalog dependency violation</message>
      <deny>
        <from pattern="catalog" />
        <to pattern="farrago" />
        <allow>
          <to pattern="catalog.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="plugin.deps">
      <include pattern="catalog.deps" />
      <include pattern="plugin" />
    </pattern>

    <access-rule>
      <message>plugin dependency violation</message>
      <deny>
        <from pattern="plugin" />
        <to pattern="farrago" />
        <allow>
          <to pattern="plugin.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="type.runtime.deps">
      <include pattern="resource.deps" />
      <include pattern="type.runtime" />
    </pattern>

    <access-rule>
      <message>type.runtime dependency violation</message>
      <deny>
        <from pattern="type.runtime" />
        <to pattern="farrago" />
        <allow>
          <to pattern="type.runtime.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="type.deps">
      <include pattern="catalog.deps" />
      <include pattern="type.runtime.deps" />
      <include pattern="type" />
    </pattern>

    <access-rule>
      <message>type dependency violation</message>
      <deny>
        <from pattern="type" />
        <to pattern="farrago" />
        <allow>
          <to pattern="type.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="fennel.deps">
      <include pattern="resource.deps" />
      <include pattern="FarragoPackage.deps" />
      <include pattern="fennel" />
    </pattern>

    <access-rule>
      <message>fennel dependency violation</message>
      <deny>
        <from pattern="fennel" />
        <to pattern="farrago" />
        <allow>
          <to pattern="fennel.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="namespace.deps">
      <include pattern="type.deps" />
      <include pattern="fennel.deps" />
      <include pattern="plugin.deps" />
      <include pattern="jdbc" />
      <include pattern="namespace" />
    </pattern>

    <access-rule>
      <message>namespace dependency violation</message>
      <deny>
        <from pattern="namespace" />
        <to pattern="farrago" />
        <allow>
          <to pattern="namespace.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="namespace.util.deps">
      <include pattern="namespace.deps" />
      <include pattern="namespace.util" />
    </pattern>

    <access-rule>
      <message>namespace.util dependency violation</message>
      <deny>
        <from pattern="namespace" />
        <to pattern="farrago" />
        <allow>
          <to pattern="namespace.util.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="session.deps">
      <include pattern="namespace.util.deps" />
      <include pattern="fennel.deps" />
      <include pattern="session" />
    </pattern>

    <access-rule>
      <message>session dependency violation</message>
      <deny>
        <from pattern="session" />
        <to pattern="farrago" />
        <allow>
          <to pattern="session.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="runtime.deps">
      <include pattern="session.deps" />
      <include pattern="runtime" />
    </pattern>

    <access-rule>
      <message>runtime dependency violation</message>
      <deny>
        <from pattern="runtime" />
        <to pattern="farrago" />
        <allow>
          <to pattern="runtime.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="dynamic.deps">
      <include pattern="runtime.deps" />
      <include pattern="dynamic" />
    </pattern>

    <!-- NOTE:  this is an unenforced guideline for generated code -->
    <access-rule>
      <message>dynamic dependency violation</message>
      <deny>
        <from pattern="dynamic" />
        <to pattern="farrago" />
        <allow>
          <to pattern="dynamic.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="ojrex.deps">
      <include pattern="session.deps" />
      <include pattern="ojrex" />
    </pattern>

    <access-rule>
      <message>ojrex dependency violation</message>
      <deny>
        <from pattern="ojrex" />
        <to pattern="farrago" />
        <allow>
          <to pattern="ojrex.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="query.deps">
      <include pattern="dynamic.deps" />
      <include pattern="ojrex.deps" />
      <include pattern="query" />
    </pattern>

    <access-rule>
      <message>query dependency violation</message>
      <deny>
        <from pattern="query" />
        <to pattern="farrago" />
        <allow>
          <to pattern="query.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="ddl.deps">
      <include pattern="query.deps" />
      <include pattern="ddl" />
    </pattern>

    <access-rule>
      <message>ddl dependency violation</message>
      <deny>
        <from pattern="ddl" />
        <to pattern="farrago" />
        <allow>
          <to pattern="ddl.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="parser.deps">
      <include pattern="ddl.deps" />
      <include pattern="parser" />
    </pattern>

    <access-rule>
      <message>parser dependency violation</message>
      <deny>
        <from pattern="parser" />
        <to pattern="farrago" />
        <allow>
          <to pattern="parser.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="db.deps">
      <include pattern="parser.deps" />
      <include pattern="db" />
    </pattern>

    <access-rule>
      <message>db dependency violation</message>
      <deny>
        <from pattern="db" />
        <to pattern="farrago" />
        <allow>
          <to pattern="db.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="jdbc.deps">
      <include pattern="util.deps" />
      <include pattern="jdbc" />
    </pattern>

    <access-rule>
      <message>jdbc dependency violation</message>
      <deny>
        <from pattern="jdbc" />
        <to pattern="farrago" />
        <allow>
          <to pattern="jdbc.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="jdbc.engine.deps">
      <include pattern="db.deps" />
      <include pattern="jdbc.deps" />
      <include pattern="jdbc.engine" />
    </pattern>

    <access-rule>
      <message>jdbc.engine dependency violation</message>
      <deny>
        <from pattern="jdbc.engine" />
        <to pattern="farrago" />
        <allow>
          <to pattern="jdbc.engine.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="jdbc.client.deps">
      <include pattern="jdbc.deps" />
      <include pattern="jdbc.rmi" />
      <include pattern="jdbc.client" />
    </pattern>

    <access-rule>
      <message>jdbc.client dependency violation</message>
      <deny>
        <from pattern="jdbc.client" />
        <to pattern="farrago" />
        <allow>
          <to pattern="jdbc.client.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="jdbc.rmi.deps">
      <include pattern="jdbc.deps" />
      <include pattern="jdbc.rmi" />
    </pattern>

    <access-rule>
      <message>jdbc.rmi dependency violation</message>
      <deny>
        <from pattern="jdbc.rmi" />
        <to pattern="farrago" />
        <allow>
          <to pattern="jdbc.rmi.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="server.deps">
      <include pattern="jdbc.engine.deps" />
      <include pattern="jdbc.rmi" />
      <include pattern="server" />
    </pattern>

    <access-rule>
      <message>server dependency violation</message>
      <deny>
        <from pattern="server" />
        <to pattern="farrago" />
        <allow>
          <to pattern="server.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="namespace.impl.deps">
      <include pattern="query.deps" />
      <include pattern="namespace.impl" />
    </pattern>

    <access-rule>
      <message>namespace.impl dependency violation</message>
      <deny>
        <from pattern="namespace.impl" />
        <to pattern="farrago" />
        <allow>
          <to pattern="namespace.impl.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="namespace.jdbc.deps">
      <include pattern="namespace.impl.deps" />
      <include pattern="namespace.jdbc" />
    </pattern>

    <access-rule>
      <message>namespace.jdbc dependency violation</message>
      <deny>
        <from pattern="namespace.jdbc" />
        <to pattern="farrago" />
        <allow>
          <to pattern="namespace.jdbc.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="namespace.ftrs.deps">
      <include pattern="namespace.impl.deps" />
      <include pattern="namespace.ftrs" />
    </pattern>

    <access-rule>
      <message>namespace.ftrs dependency violation</message>
      <deny>
        <from pattern="namespace.ftrs" />
        <to pattern="farrago" />
        <allow>
          <to pattern="namespace.ftrs.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="namespace.mdr.deps">
      <include pattern="namespace.impl.deps" />
      <include pattern="namespace.mdr" />
    </pattern>

    <access-rule>
      <message>namespace.mdr dependency violation</message>
      <deny>
        <from pattern="namespace.mdr" />
        <to pattern="farrago" />
        <allow>
          <to pattern="namespace.mdr.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="namespace.mock.deps">
      <include pattern="namespace.impl.deps" />
      <include pattern="namespace.mock" />
    </pattern>

    <access-rule>
      <message>namespace.mock dependency violation</message>
      <deny>
        <from pattern="namespace.mock" />
        <to pattern="farrago" />
        <allow>
          <to pattern="namespace.mock.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="dt.calc.deps">
      <include pattern="resource.deps" />
      <include pattern="dt.calc" />
    </pattern>

    <access-rule>
      <message>dt.calc dependency violation</message>
      <deny>
        <from pattern="dt.calc" />
        <to pattern="farrago" />
        <allow>
          <to pattern="dt.calc.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="dt.volcano.deps">
      <include pattern="resource.deps" />
      <include pattern="dt.volcano" />
    </pattern>

    <access-rule>
      <message>dt.volcano dependency violation</message>
      <deny>
        <from pattern="dt.volcano" />
        <to pattern="farrago" />
        <allow>
          <to pattern="dt.volcano.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="dt.rel.deps">
      <include pattern="query.deps" />
      <include pattern="dt.calc.deps" />
      <include pattern="dt.rel" />
    </pattern>

    <access-rule>
      <message>dt.rel dependency violation</message>
      <deny>
        <from pattern="dt.rel" />
        <to pattern="farrago" />
        <allow>
          <to pattern="dt.rel.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="dt.fennel.deps">
      <include pattern="dt.fennel" />
    </pattern>

    <access-rule>
      <message>dt.fennel dependency violation</message>
      <deny>
        <from pattern="dt.fennel" />
        <to pattern="farrago" />
        <allow>
          <to pattern="dt.fennel.deps" />
        </allow>
      </deny>
    </access-rule>
    
    <pattern name="dt.sql.advise.deps">
      <include pattern="util" />
      <include pattern="dt.sql.advise" />
    </pattern>

    <access-rule>
      <message>dt.sql.advise dependency violation</message>
      <deny>
        <from pattern="dt.sql.advise" />
        <to pattern="farrago" />
        <allow>
          <to pattern="dt.sql.advise.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="rs.fennel.deps">
      <include pattern="rs.fennel" />
    </pattern>

    <access-rule>
      <message>rs.fennel dependency violation</message>
      <deny>
        <from pattern="rs.fennel" />
        <to pattern="farrago" />
        <allow>
          <to pattern="rs.fennel.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="defimpl.deps">
      <include pattern="db.deps" />
      <include pattern="dt.calc.deps" />
      <include pattern="dt.volcano.deps" />
      <include pattern="dt.rel.deps" />
      <include pattern="dt.fennel.deps" />
      <include pattern="rs.fennel.deps" />
      <include pattern="defimpl" />
    </pattern>

    <access-rule>
      <message>defimpl dependency violation</message>
      <deny>
        <from pattern="defimpl" />
        <to pattern="farrago" />
        <allow>
          <to pattern="defimpl.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="test.deps">
      <include pattern="server.deps" />
      <include pattern="jdbc.client.deps" />
      <include pattern="defimpl.deps" />
      <include pattern="test" />
    </pattern>

    <access-rule>
      <message>test dependency violation</message>
      <deny>
        <from pattern="test" />
        <to pattern="farrago" />
        <allow>
          <to pattern="test.deps" />
        </allow>
      </deny>
    </access-rule>

    <pattern name="dt.test.deps">
      <include pattern="test.deps" />
      <include pattern="dt.calc.deps" />
      <include pattern="dt.volcano.deps" />
      <include pattern="dt.rel.deps" />
      <include pattern="dt.sql.advise.deps" />
      <include pattern="dt.test" />
      <include pattern="defimpl.deps" />
    </pattern>

    <access-rule>
      <message>dt.test dependency violation</message>
      <deny>
        <from pattern="dt.test" />
        <to pattern="farrago" />
        <allow>
          <to pattern="dt.test.deps" />
        </allow>
      </deny>
    </access-rule>

    <!-- catch-all for anything not covered above -->
    <access-rule>
      <message>farrago dependency violation</message>
      <deny>
        <from pattern="farrago">
          <exclude pattern="farrago.explicit"/>
        </from>
        <to pattern="farrago" />
      </deny>
    </access-rule>

    <!-- org.eigenbase must be standalone -->
    <access-rule>
      <message>org.eigenbase dependency violation</message>
      <deny>
        <from pattern="eigenbase"/>
        <to pattern="farrago"/>
      </deny>
    </access-rule>

  </ruleset>
</macker>
