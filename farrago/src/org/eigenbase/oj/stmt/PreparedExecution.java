/*
// $Id$
// Saffron preprocessor and data engine
// (C) Copyright 2002-2003 Disruptive Technologies, Inc.
// (C) Copyright 2003-2004 John V. Sichi
// You must accept the terms in LICENSE.html to use this software.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*/

package org.eigenbase.oj.stmt;

import org.eigenbase.relopt.*;
import org.eigenbase.reltype.*;
import org.eigenbase.rel.*;
import org.eigenbase.util.*;

import openjava.ptree.*;

import java.lang.reflect.*;
import java.sql.*;


/**
 * PreparedExecution is a PreparedResult of a statement for which Java code
 * was generated by preparation.
 *
 * @author John V. Sichi
 * @version $Id$
 */
public class PreparedExecution implements PreparedResult
{
    //~ Instance fields -------------------------------------------------------

    private final ParseTree parseTree;
    private final RelDataType rowType;
    private final boolean isDml;
    private final BoundMethod boundMethod;

    //~ Constructors ----------------------------------------------------------

    PreparedExecution(
        ParseTree parseTree,
        RelDataType rowType,
        boolean isDml,
        BoundMethod boundMethod)
    {
        this.parseTree = parseTree;
        this.rowType = rowType;
        this.isDml = isDml;
        this.boundMethod = boundMethod;
    }

    //~ Methods ---------------------------------------------------------------

    public String getCode()
    {
        return parseTree.toString();
    }

    public boolean isDml()
    {
        return isDml;
    }

    public RelDataType getRowType()
    {
        return rowType;
    }

    public Method getMethod()
    {
        return boundMethod.method;
    }

    public Object execute()
    {
        try {
            return boundMethod.call();
        } catch (IllegalAccessException e) {
            throw Util.newInternal(e);
        } catch (InvocationTargetException e) {
            throw Util.newInternal(e);
        }
    }

    public void setArgs(Object [] args) 
    {
        boundMethod.args = args;
    }
}


// End PreparedExecution.java
