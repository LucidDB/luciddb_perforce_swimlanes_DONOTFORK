<?xml version="1.0" ?>
<?xml-stylesheet type="text/xsl"
 href="http://eigenbase.sourceforge.net/resgen/Resource.xsl" ?>
<!--
  $Id$
  Package org.eigenbase is a class library of data management components.
  Copyright (C) 2005-2005 The Eigenbase Project
  Copyright (C) 2004-2005 Disruptive Tech
  Copyright (C) 2005-2005 LucidEra, Inc.
  Portions Copyright (C) 2004-2005 John V. Sichi

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later Eigenbase-approved version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307  USA
-->

<resourceBundle
	static="false"
	locale="en_US"
	exceptionClassName="org.eigenbase.util.EigenbaseException">

<!-- ====================================================================== -->
<!-- Eigenbase Parser resources 100,000 - 110,000 -->
<!-- ====================================================================== -->
<message id="100000" name="ParserContext">
    <text>line {0,number,#}, column {1,number,#}</text>
</message>

<message id="100010" name="IllegalLiteral">
    <text>Illegal {0} literal {1} at {2}: {3}</text>
</message>

<message id="100030" name="BadFormat">
    <text>not in format ''{0}''</text>
</message>

<exception id="100040" name="BetweenWithoutAnd">
    <text>BETWEEN operator has no terminating AND; at line {0,number,#}, column {1,number,#}</text>
</exception>

<exception id="100050" name="IllegalIntervalLiteral">
    <text>Illegal INTERVAL literal {0}; at {1}</text>
</exception>

<exception id="100060" name="IllegalMinusDate">
    <text>Illegal expression; at {0}. Was expecting "(DATETIME - DATETIME) INTERVALQUALIFIER"</text>
</exception>

<exception id="100070" name="IllegalOverlaps">
    <text>Illegal overlaps expression; at {0}. Was expecting expression on the form "(DATETIME, EXPRESSION) OVERLAPS (DATETIME, EXPRESSION)"</text>
</exception>


<!-- ====================================================================== -->
<!-- Eigenbase Validator resources 121,000 - 130,000 -->
<!-- ====================================================================== -->
<exception id="120000" name="ValidatorUnknownFunction" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>No match found for function signature {0}</text>
</exception>

<!-- 
<exception id="120001" name="InvalidArgument">
    <text>Argument {0,number,#} to function ''{1}'' is invalid: {2}</text>
</exception>
 -->

<exception id="120002" name="InvalidArgCount" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Invalid number of arguments to function ''{0}''. Was expecting {1,number,#} arguments</text>
</exception>

<exception id="120003" name="ValidatorContextPoint" className="org.eigenbase.util.EigenbaseContextException">
    <text>At line {0,number,#}, column {1,number,#}</text>
</exception>

<exception id="120004" name="ValidatorContext" className="org.eigenbase.util.EigenbaseContextException">
    <text>From line {0,number,#}, column {1,number,#} to line {2,number,#}, column {3,number,#}</text>
</exception>

<exception id="120010" name="CannotCastValue">
    <text>Cast function cannot convert value of type {0} to type {1}</text>
</exception>

<exception id="120011" name="UnknownDatatypeName" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Unknown datatype name ''{0}''</text>
</exception>

<exception id="120020" name="IncompatibleValueType" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Values passed to VALUES operator must have compatible types</text>
</exception>

<exception id="120030" name="IncompatibleCharset">
    <text>Cannot apply {0} to the two different charsets {1} and {2}</text>
</exception>

<exception id="120040" name="InvalidOrderByPos" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>ORDER BY is only allowed on top-level SELECT</text>
</exception>

<exception id="120050" name="UnknownIdentifier" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Unknown identifier ''{0}''</text>
</exception>

<exception id="120055" name="UnknownField" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Unknown field ''{0}''</text>
</exception>

<exception id="120060" name="UnknownTargetColumn" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Unknown target column ''{0}''</text>
</exception>

<exception id="120070" name="UnmatchInsertColumn">
    <text>Number of INSERT target columns ({0,number}) does not equal number of source items ({1,number})</text>
</exception>

<exception id="120080" name="TableNameNotFound" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Table ''{0}'' not found</text>
</exception>

<exception id="120085" name="ColumnNotFound" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Column ''{0}'' not found in any table</text>
</exception>

<exception id="120090" name="ColumnNotFoundInTable">
    <text>Column ''{0}'' not found in table {1}</text>
</exception>

<exception id="120100" name="ColumnAmbiguous" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Column ''{0}'' is ambiguous</text>
</exception>

<!-- REVIEW: jhyde: should this be an internal error? is there a test? -->
<exception id="120110" name="NeedQueryOp" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Operand {0} must be a query</text>
</exception>

<exception id="120120" name="NeedSameTypeParameter" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Parameters must be of the same type</text>
</exception>

<exception id="120130" name="CanNotApplyOp2Type" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Cannot apply ''{0}'' to arguments of type {1}. Supported form(s): {2}</text>
</exception>

<exception id="120140" name="ExpectedBoolean" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Expected a boolean type</text>
</exception>

<exception id="120150" name="MustNotNullInElse">
    <text>ELSE clause or at least one THEN clause must be non-NULL</text>
</exception>

<exception id="120160" name="FunctionUndefined" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Function ''{0}'' is not defined</text>
</exception>

<!-- REVIEW: jhyde: sentence construction is not l10n-safe -->
<exception id="120170" name="WrongNumberOfParam" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Encountered {0} with {1,number} parameter(s); was expecting {2}</text>
</exception>

<exception id="120180" name="IllegalMixingOfTypes" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Illegal mixing of types in CASE or COALESCE statement</text>
</exception>

<exception id="120200" name="InvalidCompare">
    <text>Invalid compare. Comparing  (collation, coercibility): ({0}, {1} with ({2}, {3}) is illegal</text>
</exception>

<exception id="120210" name="DifferentCollations">
    <text>Invalid syntax. Two explicit different collations ({0}, {1}) are illegal</text>
</exception>

<exception id="120220" name="TypeNotComparable">
    <text>{0} is not comparable to {1}</text>
</exception>

<exception id="120225" name="TypeNotComparableNear" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Cannot compare values of types ''{0}'', ''{1}''</text>
</exception>

<exception id="120230" name="WrongNumOfArguments" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Wrong number of arguments to expression</text>
</exception>

<exception id="120240" name="OperandNotComparable">
    <text>Operands {0} not comparable to each other</text>
</exception>

<exception id="120250" name="TypeNotComparableEachOther">
    <text>Types {0} not comparable to each other</text>
</exception>

<exception id="120260" name="NumberLiteralOutOfRange" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Numeric literal ''{0}'' out of range</text>
</exception>

<exception id="120270" name="StringFragsOnSameLine" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>String literal continued on same line</text>
</exception>

<exception id="120280" name="AliasMustBeSimpleIdentifier" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Table or column alias must be a simple identifier</text>
</exception>

<exception id="120290" name="JoinRequiresCondition" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>INNER, LEFT, RIGHT or FULL join requires a condition (NATURAL keyword or ON or USING clause)</text>
</exception>

<exception id="120300" name="CrossJoinDisallowsCondition" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Cannot specify condition (NATURAL keyword, or ON or USING clause) following CROSS JOIN</text>
</exception>

<exception id="120310" name="NaturalDisallowsOnOrUsing" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Cannot specify NATURAL keyword with ON or USING clause</text>
</exception>

<exception id="120320" name="WindowNotFound" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Window ''{0}'' not found</text>
</exception>

<exception id="120330" name="NotGroupExpr" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Expression ''{0}'' is not being grouped</text>
</exception>

<exception id="120340" name="AggregateIllegalInWhere" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Aggregate expression is illegal in WHERE clause</text>
</exception>

<exception id="120350" name="WhereMustBeBoolean" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>WHERE clause must be a condition</text>
</exception>

<exception id="120360" name="HavingMustBeBoolean" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>HAVING clause must be a condition</text>
</exception>

<exception id="120370" name="OverNonAggregate" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>OVER must be applied to aggregate function</text>
</exception>

<exception id="120380" name="CannotOverrideWindowAttribute" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Cannot override window attribute</text>
</exception>

<exception id="120390" name="ColumnCountMismatchInSetop" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Column count mismatch in {0}</text>
</exception>

<exception id="120400" name="ColumnTypeMismatchInSetop" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Type mismatch in column {0,number} of {1}</text>
</exception>

<exception id="120410" name="BinaryLiteralOdd" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Binary literal string must contain an even number of hexits</text>
</exception>

<exception id="120420" name="UnsupportedIntervalLiteral" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Illegal interval literal format {0} for {1}</text>
</exception>

<exception id="120425" name="CompoundOrderByProhibitsRange" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>RANGE clause cannot be used with compound ORDER BY clause</text>
</exception>

<exception id="120430" name="OrderByDataTypeProhibitsRange" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Data type of ORDER BY prohibits use of RANGE clause</text>
</exception>

<exception id="120435" name="OrderByRangeMismatch" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Data Type mismatch between ORDER BY and RANGE clause</text>
</exception>

<exception id="120440" name="DateRequiresInterval" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Window ORDER BY expression of type DATE requires range of type INTERVAL</text>
</exception>

<exception id="120450" name="RangeOrRowMustBeConstant" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Window boundry must be constant</text>
</exception>

<exception id="120460" name="RowMustBeNumeric" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>ROWS value must be a numeric constant</text>
</exception>

<exception id="120470" name="OverMissingOrderBy" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Window specification must contain a ORDER BY clause</text>
</exception>

<!-- ====================================================================== -->
<!-- Eigenbase Generic resources 130,000 - 140,000 -->
<!-- ====================================================================== -->
<exception id="130000" name="Internal">
    <text>Internal error: {0}</text>
</exception>

<exception id="130010" name="FunctionNotFound">
    <text>Function ''{0}'' does not exist</text>
</exception>

<exception id="130020" name="ArgumentMustBeLiteral">
    <text>Argument to function ''{0}'' must be a literal</text>
</exception>

<exception id="130030" name="ArgumentMustBePositiveInteger">
    <text>Argument to function ''{0}'' must be a positive integer literal</text>
</exception>

<exception id="130040" name="ValidationError">
    <text>Validation Error: {0}</text>
</exception>

<exception id="130050" name="ParserError">
    <text>Parser Error: {0}</text>
</exception>

<exception id="130060" name="ArgumentMustNotBeNull">
    <text>Argument to function ''{0}'' must not be NULL</text>
</exception>

<exception id="130070" name="NullIllegal" className="org.eigenbase.sql.validate.SqlValidatorException">
    <text>Illegal use of ''NULL''</text>
</exception>

<!-- End of last error section ============================================ -->

</resourceBundle>

<!-- End EigenbaseResource.xml -->
