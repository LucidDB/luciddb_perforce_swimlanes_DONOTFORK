0: jdbc:farrago:> -- $Id: //open/dt/dev/farrago/regressionsql/selectSimple.sql#7 $
0: jdbc:farrago:> -- Full vertical system testing of non advanced select statements
0: jdbc:farrago:> 
0: jdbc:farrago:> -- NOTE: This script is run twice. Once with the "calcVirtualMachine" set to use fennel
0: jdbc:farrago:> -- and another time to use java. The caller of this script is setting the flag so no need
0: jdbc:farrago:> -- to do it directly unless you need to do acrobatics.
0: jdbc:farrago:> 
0: jdbc:farrago:> select empno from sales.emps order by empno asc;
+--------+
| EMPNO  |
+--------+
| 100    |
| 110    |
| 110    |
| 120    |
+--------+
0: jdbc:farrago:> select empno+1 from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| 101     |
| 111     |
| 111     |
| 121     |
+---------+
0: jdbc:farrago:> select empno-1 from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| 99      |
| 109     |
| 109     |
| 119     |
+---------+
0: jdbc:farrago:> select empno*2 from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| 200     |
| 220     |
| 220     |
| 240     |
+---------+
0: jdbc:farrago:> select empno/2 from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| 50      |
| 55      |
| 55      |
| 60      |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select empno from sales.emps where empno=110;
+--------+
| EMPNO  |
+--------+
| 110    |
| 110    |
+--------+
0: jdbc:farrago:> select empno from sales.emps where empno>=110 order by 1;
+--------+
| EMPNO  |
+--------+
| 110    |
| 110    |
| 120    |
+--------+
0: jdbc:farrago:> select empno from sales.emps where empno>110;
+--------+
| EMPNO  |
+--------+
| 120    |
+--------+
0: jdbc:farrago:> select empno from sales.emps where empno<=110 order by 1;
+--------+
| EMPNO  |
+--------+
| 100    |
| 110    |
| 110    |
+--------+
0: jdbc:farrago:> select empno from sales.emps where empno<110;
+--------+
| EMPNO  |
+--------+
| 100    |
+--------+
0: jdbc:farrago:> select empno from sales.emps where empno<>110 order by 1;
+--------+
| EMPNO  |
+--------+
| 100    |
| 120    |
+--------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select empno from sales.emps where empno=99999;
+--------+
| EMPNO  |
+--------+
+--------+
0: jdbc:farrago:> select empno from sales.emps where empno>=99999;
+--------+
| EMPNO  |
+--------+
+--------+
0: jdbc:farrago:> select empno from sales.emps where empno<1;
+--------+
| EMPNO  |
+--------+
+--------+
0: jdbc:farrago:> select empno from sales.emps where empno<=1;
+--------+
| EMPNO  |
+--------+
+--------+
0: jdbc:farrago:> select empno from sales.emps where empno>99999;
+--------+
| EMPNO  |
+--------+
+--------+
0: jdbc:farrago:> select empno from sales.emps where empno<>99999 order by 1;
+--------+
| EMPNO  |
+--------+
| 100    |
| 110    |
| 110    |
| 120    |
+--------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select empno+1 from sales.emps where empno=110;
+---------+
| EXPR$0  |
+---------+
| 111     |
| 111     |
+---------+
0: jdbc:farrago:> select empno+1 from sales.emps where empno>=110 order by 1;
+---------+
| EXPR$0  |
+---------+
| 111     |
| 111     |
| 121     |
+---------+
0: jdbc:farrago:> select empno+1 from sales.emps where empno>110;
+---------+
| EXPR$0  |
+---------+
| 121     |
+---------+
0: jdbc:farrago:> select empno+1 from sales.emps where empno<110;
+---------+
| EXPR$0  |
+---------+
| 101     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select empno+1, empno/2 from sales.emps order by 1;
+---------+---------+
| EXPR$0  | EXPR$1  |
+---------+---------+
| 101     | 50      |
| 111     | 55      |
| 111     | 55      |
| 121     | 60      |
+---------+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select * from sales.emps where name = 'Wilma';
+--------+--------+---------+---------+-------+--------+------+-------------+----------+----------+
| EMPNO  |  NAME  | DEPTNO  | GENDER  | CITY  | EMPID  | AGE  | PUBLIC_KEY  | SLACKER  | MANAGER  |
+--------+--------+---------+---------+-------+--------+------+-------------+----------+----------+
| 120    | Wilma  | 20      | F       |       | 1      | 50   |             |          | true     |
+--------+--------+---------+---------+-------+--------+------+-------------+----------+----------+
0: jdbc:farrago:> select * from sales.emps where name = 'wilma';
+--------+-------+---------+---------+-------+--------+------+-------------+----------+----------+
| EMPNO  | NAME  | DEPTNO  | GENDER  | CITY  | EMPID  | AGE  | PUBLIC_KEY  | SLACKER  | MANAGER  |
+--------+-------+---------+---------+-------+--------+------+-------------+----------+----------+
+--------+-------+---------+---------+-------+--------+------+-------------+----------+----------+
0: jdbc:farrago:> select empno, empno from sales.emps order by 1;
+--------+--------+
| EMPNO  | EMPNO  |
+--------+--------+
| 100    | 100    |
| 110    | 110    |
| 110    | 110    |
| 120    | 120    |
+--------+--------+
0: jdbc:farrago:> --select empno,*,empno from sales.emps;
0: jdbc:farrago:> select 1 as apa, age as apa, 3 as APA, 4 as "APA" from sales.emps order by 2;
+------+------+------+------+
| APA  | APA  | APA  | APA  |
+------+------+------+------+
| 1    |      | 3    | 4    |
| 1    | 25   | 3    | 4    |
| 1    | 50   | 3    | 4    |
| 1    | 80   | 3    | 4    |
+------+------+------+------+
0: jdbc:farrago:> select 1+2 as empno, empno as empno, age as empno, 1+2 as empno from sales.emps order by 3;
+--------+--------+--------+--------+
| EMPNO  | EMPNO  | EMPNO  | EMPNO  |
+--------+--------+--------+--------+
| 3      | 110    |        | 3      |
| 3      | 100    | 25     | 3      |
| 3      | 120    | 50     | 3      |
| 3      | 110    | 80     | 3      |
+--------+--------+--------+--------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select age from (select emps.* from sales.emps) order by 1;
+------+
| AGE  |
+------+
|      |
| 25   |
| 50   |
| 80   |
+------+
0: jdbc:farrago:> 
0: jdbc:farrago:> --Fails
0: jdbc:farrago:> SELECT 0.5e1.1 from sales.emps;
Error: org.eigenbase.sql.parser.SqlParseException: Encountered ".1" at line 1, column 13.
Was expecting one of:
    "AND" ...
    "AS" ...
    "BETWEEN" ...
    "FROM" ...
    "IN" ...
    "IS" ...
    "LIKE" ...
    "MEMBER" ...
    "MULTISET" ...
    "NOT" ...
    "OR" ...
    "SIMILAR" ...
    "SUBMULTISET" ...
    "," ...
    "=" ...
    ">" ...
    "<" ...
    "<=" ...
    ">=" ...
    "<>" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "||" ...
    <IDENTIFIER> ...
    <QUOTED_IDENTIFIER> ... (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> --OK 
0: jdbc:farrago:> --values 0.5e-3*1e3;
0: jdbc:farrago:> --values 0.5e-3*1.1e3;
0: jdbc:farrago:> 
0: jdbc:farrago:> values true>=true;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values true>=false;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values true>=unknown;
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values false>=true;
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values false>=false;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values false>=unknown;
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values unknown>=true;
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values unknown>=false;
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values unknown>=unknown;
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values true<=true;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values true<=false;
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values true<=unknown;
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values false<=true;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values false<=false;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values false<=unknown;
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values unknown<=true;
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values unknown<=false;
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values unknown<=unknown;
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- SQL2003 Part 2 Section 4.3.2 and
0: jdbc:farrago:> -- SQL2003 Part 2 Section 8.2 General Rule 4 state
0: jdbc:farrago:> -- that CLOBS (ex. BINARY/VARBINARY) may only be compared for
0: jdbc:farrago:> -- equality. Currently allow the other (>,>=, etc.) comparisons
0: jdbc:farrago:> -- as an extension.
0: jdbc:farrago:> -- tests that return true:
0: jdbc:farrago:> values   x'ff' =  x'ff';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'ff' <= x'ff';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'ff' >= x'ff';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'00' =  x'00';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values x'00ff' =  x'00ff';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'ff' >  x'00';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values x'00ff' >  x'0000';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values x'0000' >  x'00';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'ff' >= x'00';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values x'00ff' >= x'0000';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values x'0000' >= x'00';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'00' <  x'ff';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'00' <  x'0000';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values x'0000' <  x'00ff';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'00' <= x'ff';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'00' <= x'0000';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values x'0000' <= x'00ff';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'00' <> x'ff';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'ff' <> x'00';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values x'0000' <> x'0001';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values x'0000' <> x'00';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values   x'00' <> x'0000';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- symmetric (inverted) tests return false:
0: jdbc:farrago:> values   x'ff' <>  x'ff';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values   x'00' <>  x'00';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values x'00ff' <>  x'00ff';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values   x'ff' <  x'00';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values x'00ff' <  x'0000';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values x'0000' <  x'00';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values   x'ff' <= x'00';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values x'00ff' <= x'0000';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values x'0000' <= x'00';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values   x'00' >  x'ff';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values   x'00' >  x'0000';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values x'0000' >  x'00ff';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values   x'00' >= x'ff';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values   x'00' >= x'0000';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values x'0000' >= x'00ff';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values   x'00' =  x'ff';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values   x'ff' =  x'00';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values x'0000' =  x'0001';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values x'0000' =  x'00';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values   x'00' =  x'0000';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> 
0: jdbc:farrago:> values 'a' is distinct from 'a';
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values 'a' is distinct from 'aa';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values 'a' is distinct from 'b';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values 1 is distinct from cast(null as integer);
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values cast(null as integer) is distinct from cast(null as integer);
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> -- end selectSimple.sql
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
