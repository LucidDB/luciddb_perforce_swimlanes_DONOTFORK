0: jdbc:farrago:> -- $Id: //open/dt/dev/farrago/regressionsql/cast.sql#2 $
0: jdbc:farrago:> -- Full vertical system testing of the cast function
0: jdbc:farrago:> 
0: jdbc:farrago:> -- NOTE: This script is run twice. Once with the "calcVirtualMachine" set to use fennel
0: jdbc:farrago:> -- and another time to use java. The caller of this script is setting the flag so no need
0: jdbc:farrago:> -- to do it directly unless you need to do acrobatics.
0: jdbc:farrago:> 
0: jdbc:farrago:> values cast(null as tinyint);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as smallint);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as integer);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as bigint);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as real);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as double);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as boolean);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as char(1));
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as varchar(1));
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as binary(1));
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as date);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as time);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as timestamp);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as varbinary(1));
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values cast(null as float);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> --values cast(null as decimal);
0: jdbc:farrago:> 
0: jdbc:farrago:> 
0: jdbc:farrago:> values cast(1.8 as integer);
+---------+
| EXPR$0  |
+---------+
| 2       |
+---------+
0: jdbc:farrago:> values cast(-1.8 as tinyint);
+---------+
| EXPR$0  |
+---------+
| -2      |
+---------+
0: jdbc:farrago:> values cast(-1.1 as smallint);
+---------+
| EXPR$0  |
+---------+
| -1      |
+---------+
0: jdbc:farrago:> values cast(1e-4 as integer);
+---------+
| EXPR$0  |
+---------+
| 0       |
+---------+
0: jdbc:farrago:> values cast(1e2 as integer);
+---------+
| EXPR$0  |
+---------+
| 100     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> values cast(1 as double);
+---------+
| EXPR$0  |
+---------+
| 1.0     |
+---------+
0: jdbc:farrago:> values cast(cast(1 as real) as double);
+---------+
| EXPR$0  |
+---------+
| 1.0     |
+---------+
0: jdbc:farrago:> values cast(1.1 as double);
+---------+
| EXPR$0  |
+---------+
| 1.1     |
+---------+
0: jdbc:farrago:> values cast(cast(1.0 as double) as real);
+---------+
| EXPR$0  |
+---------+
| 1.0     |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> values cast(127 as tinyint);
+---------+
| EXPR$0  |
+---------+
| 127     |
+---------+
0: jdbc:farrago:> values cast(128 as tinyint);
Error: could not calculate results for the following row:
[ 0 ]
Messages:
[0]:PC=0 Code=22003 (state=,code=0)
0: jdbc:farrago:> values cast(255 as tinyint);
Error: could not calculate results for the following row:
[ 0 ]
Messages:
[0]:PC=0 Code=22003 (state=,code=0)
0: jdbc:farrago:> values cast(256 as tinyint);
Error: could not calculate results for the following row:
[ 0 ]
Messages:
[0]:PC=0 Code=22003 (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
