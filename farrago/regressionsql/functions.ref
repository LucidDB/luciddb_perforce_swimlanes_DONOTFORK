0: jdbc:farrago:> -- $Id: //open/lu/dev_lcs/farrago/regressionsql/functions.sql#2 $
0: jdbc:farrago:> -- Full vertical system testing of non function statements
0: jdbc:farrago:> 
0: jdbc:farrago:> -- NOTE: This script is run twice. Once with the "calcVirtualMachine" set to use fennel
0: jdbc:farrago:> -- and another time to use java. The caller of this script is setting the flag so no need
0: jdbc:farrago:> -- to do it directly unless you need to do acrobatics.
0: jdbc:farrago:> 
0: jdbc:farrago:> select pow(2.0,2.0) as exponential from sales.emps where empno=100 ;
+--------------+
| EXPONENTIAL  |
+--------------+
| 4.0          |
+--------------+
0: jdbc:farrago:> select -pow(2.0,2.0) as exponential from sales.emps where empno=100 ;
+--------------+
| EXPONENTIAL  |
+--------------+
| -4.0         |
+--------------+
0: jdbc:farrago:> select mod(age,9) from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
| 5       |
| 7       |
| 8       |
+---------+
0: jdbc:farrago:> --values abs(-5000000000);
0: jdbc:farrago:> select abs(-pow(2.0,-2.0)) as res from sales.emps where empno=100 ;
+-------+
|  RES  |
+-------+
| 0.25  |
+-------+
0: jdbc:farrago:> select ln(2.71828) as res from sales.emps where empno=100;
+--------------------+
|        RES         |
+--------------------+
| 0.999999327347282  |
+--------------------+
0: jdbc:farrago:> select log10(10.0) from sales.emps;
+---------+
| EXPR$0  |
+---------+
| 1.0     |
| 1.0     |
| 1.0     |
| 1.0     |
+---------+
0: jdbc:farrago:> select log10(10) from sales.emps;
+---------+
| EXPR$0  |
+---------+
| 1.0     |
| 1.0     |
| 1.0     |
| 1.0     |
+---------+
0: jdbc:farrago:> values log10(10*10.0);
+---------+
| EXPR$0  |
+---------+
| 2.0     |
+---------+
0: jdbc:farrago:> select (-empno) as res from sales.emps order by 1;
+-------+
|  RES  |
+-------+
| -120  |
| -110  |
| -110  |
| -100  |
+-------+
0: jdbc:farrago:> select (-empno)*2 as res from sales.emps order by 1;
+-------+
|  RES  |
+-------+
| -240  |
| -220  |
| -220  |
| -200  |
+-------+
0: jdbc:farrago:> select slacker and true from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
| false   |
| true    |
+---------+
0: jdbc:farrago:> select slacker and false from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| false   |
| false   |
| false   |
| false   |
+---------+
0: jdbc:farrago:> select slacker and unknown from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
|         |
| false   |
+---------+
0: jdbc:farrago:> select slacker or true from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| true    |
| true    |
| true    |
| true    |
+---------+
0: jdbc:farrago:> select slacker or false from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
| false   |
| true    |
+---------+
0: jdbc:farrago:> select slacker or unknown from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
|         |
| true    |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select coalesce(age,-1) from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| -1      |
| 25      |
| 50      |
| 80      |
+---------+
0: jdbc:farrago:> select case slacker when true then 'yes' when false then 'no' end from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
| no      |
| yes     |
+---------+
0: jdbc:farrago:> select case slacker when true then 'yes' when false then 'no' else 'null' end from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| no      |
| null    |
| null    |
| yes     |
+---------+
0: jdbc:farrago:> values CASE WHEN TRUE THEN 9 ELSE 1 END;
+---------+
| EXPR$0  |
+---------+
| 9       |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> values nullif(5.0, 5.0);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> values nullif(4.2, 1);
+---------+
| EXPR$0  |
+---------+
| 4.2     |
+---------+
0: jdbc:farrago:> values nullif(34e1, 3.4e1);
+---------+
| EXPR$0  |
+---------+
| 340.0   |
+---------+
0: jdbc:farrago:> select nullif(name,'Wilma') from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
| Eric    |
| Fred    |
| John    |
+---------+
0: jdbc:farrago:> select nullif(50,age) is null from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| false   |
| false   |
| false   |
| true    |
+---------+
0: jdbc:farrago:> select nullif(age,50) is null from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| false   |
| false   |
| true    |
| true    |
+---------+
0: jdbc:farrago:> select nullif(50,age) from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
| 50      |
| 50      |
| 50      |
+---------+
0: jdbc:farrago:> select nullif(age,50) from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
| 25      |
| 80      |
+---------+
0: jdbc:farrago:> select nullif(age,cast(null as integer)) from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
| 25      |
| 50      |
| 80      |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select abs((-empno)*2) as res from sales.emps order by 1;
+------+
| RES  |
+------+
| 200  |
| 220  |
| 220  |
| 240  |
+------+
0: jdbc:farrago:> select abs(2) as res from sales.emps;
+------+
| RES  |
+------+
| 2    |
| 2    |
| 2    |
| 2    |
+------+
0: jdbc:farrago:> select abs(-2) as res from sales.emps;
+------+
| RES  |
+------+
| 2    |
| 2    |
| 2    |
| 2    |
+------+
0: jdbc:farrago:> select abs((-empno)*2.0) as res from sales.emps order by 1;
+--------+
|  RES   |
+--------+
| 200.0  |
| 220.0  |
| 220.0  |
| 240.0  |
+--------+
0: jdbc:farrago:> 
0: jdbc:farrago:> values 1+1.0;
+---------+
| EXPR$0  |
+---------+
| 2.0     |
+---------+
0: jdbc:farrago:> values 1.0-1;
+---------+
| EXPR$0  |
+---------+
| 0.0     |
+---------+
0: jdbc:farrago:> values 10<=10.0;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values 10<10.001;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values 10>9.999;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values 10.0>=10;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values 5000000000<>1e1;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values 5000000000<-1.3;
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values 1e-2=1;
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values 1.0=0.1;
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values 1=1.0;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values 1.0=1;
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> 
0: jdbc:farrago:> values trim(' ' from '  abc');
+---------+
| EXPR$0  |
+---------+
| abc     |
+---------+
0: jdbc:farrago:> values trim('a' from 'Aa');
+---------+
| EXPR$0  |
+---------+
| A       |
+---------+
0: jdbc:farrago:> values trim(leading 'a' from 'Aa');
+---------+
| EXPR$0  |
+---------+
| Aa      |
+---------+
0: jdbc:farrago:> values trim('a' from 'aAa');
+---------+
| EXPR$0  |
+---------+
| A       |
+---------+
0: jdbc:farrago:> values trim(trailing 'a' from 'Aa');
+---------+
| EXPR$0  |
+---------+
| A       |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
