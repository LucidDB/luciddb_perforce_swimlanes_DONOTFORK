0: jdbc:farrago:> -- $Id: //open/dt/dev/farrago/regressionsql/precedence.sql#1 $
0: jdbc:farrago:> -- Full vertical system testing of precedence tests 
0: jdbc:farrago:> 
0: jdbc:farrago:> -- NOTE: This script is run twice. Once with the "calcVirtualMachine" set to use fennel
0: jdbc:farrago:> -- and another time to use java. The caller of this script is setting the flag so no need
0: jdbc:farrago:> -- to do it directly unless you need to do acrobatics.
0: jdbc:farrago:> 
0: jdbc:farrago:> -- If a test fails it should have a sql comment preceding it saying it should fail. Oterwise it should pass.
0: jdbc:farrago:> 
0: jdbc:farrago:> -- should pass but doesnt
0: jdbc:farrago:> -- values true AND 'x' LIKE 'x';
0: jdbc:farrago:> 
0: jdbc:farrago:> -- OK
0: jdbc:farrago:> values (('x' LIKE 'x') or false);
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values (false AND true OR NOT false AND true);
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values (not not false);
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values (1+2*3*10/2-3*2);
+---------+
| EXPR$0  |
+---------+
| 25      |
+---------+
0: jdbc:farrago:> values ((1+2)*3);
+---------+
| EXPR$0  |
+---------+
| 9       |
+---------+
0: jdbc:farrago:> values (2.0*pow(2.0, 2.0)+3.0*pow(2.0, 2.0));
+---------+
| EXPR$0  |
+---------+
| 20.0    |
+---------+
0: jdbc:farrago:> values (2.0*{fn pow(2.0, 2.0)}+3.0*{fn pow(2.0, 2.0)});
Error: At line 1, column 13: Function '{fn POW}' is not defined (state=,code=0)
0: jdbc:farrago:> 
0: jdbc:farrago:> values (true is unknown is not unknown);
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values (not true is unknown is not unknown);
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values (true and 3=3);
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values (true and 3<>3);
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values (true and 3>=3);
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values (true and 3<=3);
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:farrago:> values (true and 3>3);
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> values (true and 3<3);
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> values (true and 1 between 2 and 3);
+---------+
| EXPR$0  |
+---------+
| false   |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
