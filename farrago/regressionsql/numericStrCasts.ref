> -- $Id$
> -- Test casts between string types
> 
> --
> -- test basic integer conversions
> --
> create schema s;
> set schema 's';
> create table ints (
>     x integer not null primary key,
>     si smallint not null,
>     i integer not null,
>     bi bigint not null);
> insert into ints values (1, 1, 1, 1);
> insert into ints values (2, -1, -1, -1);
> insert into ints values (3, 0, 0, 0);
> insert into ints values (4, 32767, 2147483647, 9223372036854775807);
> insert into ints values (5, -32768, -2147483648, -9223372036854775808);
> 
> create table exacts (
>     x integer not null primary key,
>     i decimal(5,0) not null,
>     r decimal(4,2) not null);
> insert into exacts values (1, 1, 1.00);
> insert into exacts values (2, -1, -1.00);
> insert into exacts values (3, 0, 0.00);
> insert into exacts values (4, 99999, 99.99);
> insert into exacts values (5, -99999, -99.99);
> 
> create table approx (
>     x integer not null primary key,
>     r real not null,
>     d double not null);
> insert into approx values (1, 1.0, 1.0);
> insert into approx values (2, -1.0, -1.0);
> insert into approx values (3, 0.0, 0.0);
> insert into approx values (4, 3.1415927, 3.141592653589793);
> insert into approx values (5, 31.415927, 31.41592653589793);
> 
> select * from ints;
+----+---------+--------------+-----------------------+
| X  |   SI    |      I       |          BI           |
+----+---------+--------------+-----------------------+
| 1  | 1       | 1            | 1                     |
| 2  | -1      | -1           | -1                    |
| 3  | 0       | 0            | 0                     |
| 4  | 32767   | 2147483647   | 9223372036854775807   |
| 5  | -32768  | -2147483648  | -9223372036854775808  |
+----+---------+--------------+-----------------------+
> select * from exacts;
+----+---------+---------+
| X  |    I    |    R    |
+----+---------+---------+
| 1  | 1       | 1.00    |
| 2  | -1      | -1.00   |
| 3  | 0       | 0.00    |
| 4  | 99999   | 99.99   |
| 5  | -99999  | -99.99  |
+----+---------+---------+
> select * from approx;
+----+------------+--------------------+
| X  |     R      |         D          |
+----+------------+--------------------+
| 1  | 1.0        | 1.0                |
| 2  | -1.0       | -1.0               |
| 3  | 0.0        | 0.0                |
| 4  | 3.1415927  | 3.141592653589793  |
| 5  | 31.415928  | 31.41592653589793  |
+----+------------+--------------------+
> 
> --
> -- cast numbers to char
> --
> select cast(si as char(6))  from ints;
+---------+
| EXPR$0  |
+---------+
| 1       |
| -1      |
| 0       |
| 32767   |
| -32768  |
+---------+
> select cast(i as char(11)) from ints;
+--------------+
|    EXPR$0    |
+--------------+
| 1            |
| -1           |
| 0            |
| 2147483647   |
| -2147483648  |
+--------------+
> select cast(bi as char(20)) from ints;
+-----------------------+
|        EXPR$0         |
+-----------------------+
| 1                     |
| -1                    |
| 0                     |
| 9223372036854775807   |
| -9223372036854775808  |
+-----------------------+
> select cast(i as char(6)) from exacts;
+---------+
| EXPR$0  |
+---------+
| 1       |
| -1      |
| 0       |
| 99999   |
| -99999  |
+---------+
> select cast(r as char(6)) from exacts;
+---------+
| EXPR$0  |
+---------+
| 1.00    |
| -1.00   |
| .00     |
| 99.99   |
| -99.99  |
+---------+
> 
> -- REVIEW: Results are likely to be non-portable, as float representations
> -- REVIEW: will differ on various processors. Should round or truncate
> -- REVIEW: results lexically. -JK 2004/08/11
> select cast(r as char(10)) from approx;
+-------------+
|   EXPR$0    |
+-------------+
| 1E0         |
| -1E0        |
| 0E0         |
| 3.141593E0  |
| 3.141593E1  |
+-------------+
> select cast(d as char(23)) from approx;
+--------------------------+
|          EXPR$0          |
+--------------------------+
| 1E0                      |
| -1E0                     |
| 0E0                      |
| 3.141592653589793E0      |
| 3.141592653589793E1      |
+--------------------------+
> 
> --
> -- cast numbers to varchar
> --
> select cast(si as varchar(6)) from ints;
+---------+
| EXPR$0  |
+---------+
| 1       |
| -1      |
| 0       |
| 32767   |
| -32768  |
+---------+
> select cast(i as varchar(11)) from ints;
+--------------+
|    EXPR$0    |
+--------------+
| 1            |
| -1           |
| 0            |
| 2147483647   |
| -2147483648  |
+--------------+
> select cast(bi as varchar(20)) from ints;
+-----------------------+
|        EXPR$0         |
+-----------------------+
| 1                     |
| -1                    |
| 0                     |
| 9223372036854775807   |
| -9223372036854775808  |
+-----------------------+
> select cast(i as varchar(6)) from exacts;
+---------+
| EXPR$0  |
+---------+
| 1       |
| -1      |
| 0       |
| 99999   |
| -99999  |
+---------+
> select cast(r as varchar(6)) from exacts;
+---------+
| EXPR$0  |
+---------+
| 1.00    |
| -1.00   |
| .00     |
| 99.99   |
| -99.99  |
+---------+
> 
> 
> --
> -- cast numbers to char that's too small
> --
> select cast(si as char(3)) from ints;
Error: could not calculate results for the following row:
[ 32767 ]
Messages:
[0]:PC=1 Code=22001 (state=,code=0)
> select cast(i as char(5)) from ints;
Error: could not calculate results for the following row:
[ 2147483647 ]
Messages:
[0]:PC=1 Code=22001 (state=,code=0)
> select cast(bi as char(10)) from ints;
Error: could not calculate results for the following row:
[ 9223372036854775807 ]
Messages:
[0]:PC=0 Code=22001 (state=,code=0)
> select cast(i as char(3)) from exacts;
Error: could not calculate results for the following row:
[ 99999 ]
Messages:
[0]:PC=0 Code=22001 (state=,code=0)
> select cast(r as char(3)) from exacts;
Error: could not calculate results for the following row:
[ 100 ]
Messages:
[0]:PC=0 Code=22001 (state=,code=0)
> select cast(r as char(3)) from approx;
Error: could not calculate results for the following row:
[ -1 ]
Messages:
[0]:PC=0 Code=22001 (state=,code=0)
> select cast(d as char(3)) from approx;
Error: could not calculate results for the following row:
[ -1 ]
Messages:
[0]:PC=0 Code=22001 (state=,code=0)
> 
> 
> --
> -- cast numbers to varchar that's too small
> --
> select cast(si as varchar(3)) from ints;
Error: could not calculate results for the following row:
[ 32767 ]
Messages:
[0]:PC=1 Code=22001 (state=,code=0)
> select cast(i as varchar(5)) from ints;
Error: could not calculate results for the following row:
[ 2147483647 ]
Messages:
[0]:PC=1 Code=22001 (state=,code=0)
> select cast(bi as varchar(10)) from ints;
Error: could not calculate results for the following row:
[ 9223372036854775807 ]
Messages:
[0]:PC=0 Code=22001 (state=,code=0)
> select cast(i as varchar(3)) from exacts;
Error: could not calculate results for the following row:
[ 99999 ]
Messages:
[0]:PC=0 Code=22001 (state=,code=0)
> select cast(r as varchar(3)) from exacts;
Error: could not calculate results for the following row:
[ 100 ]
Messages:
[0]:PC=0 Code=22001 (state=,code=0)
> select cast(r as varchar(3)) from approx;
Error: could not calculate results for the following row:
[ -1 ]
Messages:
[0]:PC=0 Code=22001 (state=,code=0)
> select cast(d as varchar(3)) from approx;
Error: could not calculate results for the following row:
[ -1 ]
Messages:
[0]:PC=0 Code=22001 (state=,code=0)
> 
> -- REVIEW: Results are likely to be non-portable, as float representations
> -- REVIEW: will differ on various processors. Should round or truncate
> -- REVIEW: results lexically. -JK 2004/08/11
> select cast(d as varchar(23)) from approx;
+----------------------+
|        EXPR$0        |
+----------------------+
| 1E0                  |
| -1E0                 |
| 0E0                  |
| 3.141592653589793E0  |
| 3.141592653589793E1  |
+----------------------+
> 
> -- TODO: fennel displays more than 8 digits. (plus signg ...), that caused diff.
> alter system set "calcVirtualMachine"='CALCVM_JAVA';
> select cast(r as varchar(23)) from approx;
+-------------+
|   EXPR$0    |
+-------------+
| 1E0         |
| -1E0        |
| 0E0         |
| 3.141593E0  |
| 3.141593E1  |
+-------------+
> 
> drop table ints;
> drop table exacts;
> drop table approx;
> drop schema s;
> 
> !quit
