#!/bin/bash
# $Id$
# Farrago is an extensible data management system.
# Copyright (C) 2005-2007 The Eigenbase Project
# Copyright (C) 2005-2007 Disruptive Tech
# Copyright (C) 2005-2007 LucidEra, Inc.
# Portions Copyright (C) 2003-2007 John V. Sichi
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later Eigenbase-approved version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307  USA

# Run a single Junit test case.
# usage: junitSingle [-repeat] TEST [TARGET],
#  where TEST is the name of a test class
#  and TARGET is a target in build.xml.
#  The -repeat option repeats the test until it fails.
#  Unqualified test classes are assumed to live in package net.sf.farrago.test,
#  or ${EIGEN_TEST_DEFAULT_PACKAGE} if it is set.

once=true
if [ "$1" == "-repeat" -o "$1" == "--repeat" ]; then
    once=false;
    shift;
fi

if [ ! "$1" ]; then 
    echo "Error: specify a .sql or .java filename or a test class name";
    exit; 
fi
test=$1

if [ ! "$2" ]; then
    target=junit
else
    target="$2"
fi

if [ ! "$EIGEN_TEST_DEFAULT_PACKAGE" ]; then
    EIGEN_TEST_DEFAULT_PACKAGE=net.sf.farrago.test
fi

if [ -e "$test" -a ${test:0-5} == ".java" ]; then
    # Interpret the argument as the name of a java source file.
    # Convert it to the name of a java class.
    # For example, "src/com/acme/foo/Bar.java" becomes "com.acme.foo.Bar".
    junit_class=$(awk '
/^package / {
  p = substr($2,0,length($2)-1);
}
/^public.* class / {
  for (i = 1; i <= NF; i++) {
    if ($i == "class") {
      c = $(i+1);
      print p "." c;
      exit;
    }
  }
}' "$test")
    command="ant -Djunit.class=$junit_class -Dfileset.unitsql='' $target"
elif [ -e "$test" ]; then
    # Interpret the argument as the name of an .sql script to run

    # Assume unitsql tests
    junit_class=net.sf.farrago.test.FarragoSqlTest
    fileset=fileset.unitsql

    # if we're running regressionsql tests, use the right class and ant target
    if [ ${test/*regressionsql*/x} == "x" ]; then
	if [ "$target" == "jswat.junit" ]; then
	    # REVIEW: it needs a jswat.junit.regressionsql target that sets
	    # the necessary system properties for regressionsql tests.
	    echo "build.xml does not support jswat on regressionsql"
	    exit 1;
	fi
	target=regressionWithoutBuild
	junit_class=net.sf.farrago.test.regression.FarragoSqlRegressionTest
	fileset=fileset.regressionsql
    elif [ ${test:0-6} == ".mtsql" ]; then
	if [ "$target" == "jswat.junit" ]; then
	    # REVIEW: it needs a jswat.junit.regressionsql target that sets
	    # the necessary system properties for regressionsql tests.
	    echo "build.xml does not support jswat on regressionsql"
	    exit 1;
	fi
	target=regressionWithoutBuild
	junit_class=net.sf.farrago.test.concurrent.FarragoTestConcurrentTest
	fileset=fileset.concurrentsql
    elif [ ${test:0-6} == ".lurql" ]; then
        junit_class=com.lucidera.lurql.test.LurqlQueryTest
        fileset=fileset.unitlurql
    fi

    command="ant -Djunit.class=$junit_class -D$fileset=$test $target"
else
    # Interpret the argument as the name of a test case
    if [ -z `echo $test | grep '\.'` ]; then
        test=$EIGEN_TEST_DEFAULT_PACKAGE.$test
    fi
    command="ant -Djunit.class=$test -Dfileset.unitsql='' -Dfileset.unitlurql='' $target"
fi

if $once; then
    $command;
else
    count=1
    echo Execution $count started at `date`

    while $command; do
        let count++;
        echo Execution $count started at `date`
    done

    echo Failed on execution $count
    exit 1;
fi

# End junitSingle
