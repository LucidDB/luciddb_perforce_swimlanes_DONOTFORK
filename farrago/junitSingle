#!/bin/bash
# $Id$
# Run a single Junit test case.
# usage: junitSingle [-repeat] TEST [TARGET],
#  where TEST is the name of a test class
#  and TARGET is a target in build.xml.
#  The -repeat option repeats the test until it fails.
#  Unqualified test classes are assumed to live in package net.sf.farrago.test

once=true
if [ "$1" == "-repeat" ]; then
    once=false;
    shift;
fi

if [ ! "$1" ]; then 
    echo "Error: specify a .sql filename or a test class name"; 
    exit; 
fi
test=$1

if [ ! "$2" ]; then
    target=junit
else
    target="$2"
fi

if [ -e "$test" ]; then
    # Interpret the argument as the name of an .sql script to run

    # Assume unitsql tests
    junit_class=net.sf.farrago.test.FarragoSqlTest
    fileset=fileset.unitsql

    # if we're running regressionsql tests, use the right class and ant target
    if [ ${test/*regressionsql*/x} == "x" ]; then
	if [ "$target" == "jswat.junit" ]; then
	    # REVIEW: it needs a jswat.junit.regressionsql target that sets
	    # the necessary system properties for regressionsql tests.
	    echo "build.xml does not support jswat on regressionsql"
	    exit 1;
	fi
	target=regressionWithoutBuild
	junit_class=net.sf.farrago.test.regression.FarragoSqlRegressionTest
	fileset=fileset.regressionsql
    fi

    command="ant -Djunit.class=$junit_class -D$fileset=$test $target"
else
    # Interpret the argument as the name of a test case
    if [ -z `echo $test | grep '\.'` ]; then
        test=net.sf.farrago.test.$test
    fi
    command="ant -Djunit.class=$test -Dfileset.unitsql='' $target"
fi

if $once; then
    $command;
else
    count=1
    echo Execution $count started at `date`

    while $command; do
	let count++;
	echo Execution $count started at `date`
    done

    echo Failed on execution $count
    exit 1;
fi


