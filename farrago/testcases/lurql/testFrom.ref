# $Id$

# Find all Exceptions.
PARSE RESULT:
select *
from
class "Exception";

EXPLANATION:
anon_1 { Exception }

EXECUTION RESULT:
Exception: NameNotFound
Exception: NameNotResolved

****

# Test IN filter with literals.
PARSE RESULT:
select *
from
class "ModelElement"
where
    "name" in ('Class', 'Exception');

EXPLANATION:
anon_1 { ModelElement } where "name" in ('Class', 'Exception')

EXECUTION RESULT:
Class: Class
Class: Exception

****

# Test MATCHES filter
PARSE RESULT:
select *
from
class "ModelElement"
where
    "name" matches '.*x.*';

EXPLANATION:
anon_1 { ModelElement } where "name" matches '.*x.*'

EXECUTION RESULT:
Association: Exposes
AssociationEnd: except
AssociationEnd: exposedEnd
Attribute: expression
Class: Exception
Constraint: ContainerMustMatchExposedType
Constraint: ExceptionContainmentRules
Constraint: ExceptionsHaveOnlyOutParameters
Constraint: LowerCannotExceedUpper
Constraint: OperationExceptionsMustBeVisible
Operation: findElementsByTypeExtended
Operation: lookupElementExtended
Parameter: explanation
Reference: exceptions
Reference: exposedEnd

****

# Test IN filter with SQL query.
PARSE RESULT:
select *
from
class "ModelElement"
where
    "name" in [
        values (trim('Class')), ('Exception')
    ];

EXPLANATION:
anon_1 { ModelElement } where "name" in [
    values (trim('Class')), ('Exception')
]

EXECUTION RESULT:
Class: Class
Class: Exception

****

# Test IN filter with SQL query which returns object ID.
PARSE RESULT:
select *
from
class "ModelElement"
where
    "mofId" in [
        select "mofId" from sys_mof.model."Class" where "name"='Exception'
    ];

EXECUTION RESULT:
Class: Exception

****

# Test filter based on association.
PARSE RESULT:
select *
from
class "Attribute"
where
    "container" in [
        select "mofId" from sys_mof.model."Class" where "name"='ModelElement'
    ];

EXECUTION RESULT:
Attribute: annotation
Attribute: name
Attribute: qualifiedName

****

PARAM_VALUE className
Exception

****

PARAM_VALUES classNames
Class
Exception

****

# Test single-valued dynamic parameter
PARSE RESULT:
select *
from
class "ModelElement"
where
    "name" = ?"className";

EXPLANATION:
param ?className : class java.lang.String
anon_1 { ModelElement } where "name" = ?"className"

EXECUTION RESULT:
Class: Exception

****

# Test set-valued dynamic parameter
PARSE RESULT:
select *
from
class "ModelElement"
where
    "name" in ?"classNames";

EXPLANATION:
param ?classNames : interface java.util.Set
anon_1 { ModelElement } where "name" in ?"classNames"

EXECUTION RESULT:
Class: Class
Class: Exception

****

# Test single-valued dynamic parameter as a set element
PARSE RESULT:
select *
from
class "ModelElement"
where
    "name" in ('Class', ?"className");

EXPLANATION:
param ?className : class java.lang.String
anon_1 { ModelElement } where "name" in ('Class', ?"className")

EXECUTION RESULT:
Class: Class
Class: Exception

****

