0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- joinFilt.sql - join Filter tests
0: jdbc:luciddb:> --
0: jdbc:luciddb:> 
0: jdbc:luciddb:> set schema 's';
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Standard join filter case
0: jdbc:luciddb:> explain plan for select lname,dname from emp,dept
. . . . . . . . > where emp.deptno=dept.deptno and dept.dname='Marketing';
+-----------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                    column0                                                                    |
+-----------------------------------------------------------------------------------------------------------------------------------------------+
| IterCalcRel(LNAME=[$2], DNAME=[$11], condition=[AND(=($4, $10), =($11, _ISO-8859-1'Marketing'))])                                             |
|   FennelToIteratorConverter                                                                                                                   |
|     FennelCartesianProductRel(leftouterjoin=[false])                                                                                          |
|       FtrsIndexScanRel(table=[[LOCALDB, S, EMP]], projection=[*], index=[SYS$CONSTRAINT_INDEX$EMP$SYS$PRIMARY_KEY], preserveOrder=[false])    |
|       FtrsIndexScanRel(table=[[LOCALDB, S, DEPT]], projection=[*], index=[SYS$CONSTRAINT_INDEX$DEPT$SYS$PRIMARY_KEY], preserveOrder=[false])  |
+-----------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> explain plan for select lname,dname from emp,dept
. . . . . . . . > where emp.deptno=dept.deptno and dept.dname<'Development'
. . . . . . . . > order by 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                     column0                                                                     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                       |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                           |
|     FennelCalcRel(LNAME=[$2], DNAME=[$11], condition=[AND(=($4, $10), <($11, _ISO-8859-1'Development'))])                                       |
|       FennelCartesianProductRel(leftouterjoin=[false])                                                                                          |
|         FtrsIndexScanRel(table=[[LOCALDB, S, EMP]], projection=[*], index=[SYS$CONSTRAINT_INDEX$EMP$SYS$PRIMARY_KEY], preserveOrder=[false])    |
|         FtrsIndexScanRel(table=[[LOCALDB, S, DEPT]], projection=[*], index=[SYS$CONSTRAINT_INDEX$DEPT$SYS$PRIMARY_KEY], preserveOrder=[false])  |
+-------------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- multiple dimension filter conditions
0: jdbc:luciddb:> explain plan for select emp.lname, emp.fname, dname from emp,dept
. . . . . . . . > where emp.deptno=dept.deptno and dept.dname='Accounting' and dept.locid in ('HQ','SF')
. . . . . . . . > order by 1,2;
Error: java.lang.UnsupportedOperationException: class org.eigenbase.sql.SqlNodeList: 'HQ', 'SF' (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- don't reference dept in the select list, should drop out
0: jdbc:luciddb:> -- of select list
0: jdbc:luciddb:> explain plan for select 1 from emp,dept
. . . . . . . . > where emp.deptno=dept.deptno and dept.deptno=20
. . . . . . . . > order by 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                     column0                                                                     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                       |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                           |
|     FennelCalcRel(EXPR$0=[1], condition=[AND(=($4, $10), =($10, 20))])                                                                          |
|       FennelCartesianProductRel(leftouterjoin=[false])                                                                                          |
|         FtrsIndexScanRel(table=[[LOCALDB, S, EMP]], projection=[*], index=[SYS$CONSTRAINT_INDEX$EMP$SYS$PRIMARY_KEY], preserveOrder=[false])    |
|         FtrsIndexScanRel(table=[[LOCALDB, S, DEPT]], projection=[*], index=[SYS$CONSTRAINT_INDEX$DEPT$SYS$PRIMARY_KEY], preserveOrder=[false])  |
+-------------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> explain plan for select emp.fname from emp,dept
. . . . . . . . > where emp.deptno=dept.deptno and dept.deptno<20
. . . . . . . . > order by 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                     column0                                                                     |
+-------------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                       |
|   FennelSortRel(key=[[0]], discardDuplicates=[false])                                                                                           |
|     FennelCalcRel(FNAME=[$1], condition=[AND(=($4, $10), <($10, 20))])                                                                          |
|       FennelCartesianProductRel(leftouterjoin=[false])                                                                                          |
|         FtrsIndexScanRel(table=[[LOCALDB, S, EMP]], projection=[*], index=[SYS$CONSTRAINT_INDEX$EMP$SYS$PRIMARY_KEY], preserveOrder=[false])    |
|         FtrsIndexScanRel(table=[[LOCALDB, S, DEPT]], projection=[*], index=[SYS$CONSTRAINT_INDEX$DEPT$SYS$PRIMARY_KEY], preserveOrder=[false])  |
+-------------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- multiple dimension tables, filters on both
0: jdbc:luciddb:> explain plan for select customers.lname, products.name, sales.price
. . . . . . . . > from sales, products, customers
. . . . . . . . > where customers.custid=sales.custid
. . . . . . . . > and sales.prodid = products.prodid
. . . . . . . . > and customers.lname < 'C'
. . . . . . . . > and products.name >= 'Soap'
. . . . . . . . > order by 1,2,3;
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                          column0                                                                          |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                                 |
|   FennelSortRel(key=[[0, 1, 2]], discardDuplicates=[false])                                                                                               |
|     FennelCalcRel(LNAME=[$9], NAME=[$5], PRICE=[$3], condition=[AND(AND(AND(=($7, $0), =($2, $4)), <($9, _ISO-8859-1'C')), >=($5, _ISO-8859-1'Soap'))])   |
|       FennelCartesianProductRel(leftouterjoin=[false])                                                                                                    |
|         FennelCartesianProductRel(leftouterjoin=[false])                                                                                                  |
|           FtrsIndexScanRel(table=[[LOCALDB, S, SALES]], projection=[*], index=[SYS$CONSTRAINT_INDEX$SALES$SYS$PRIMARY_KEY], preserveOrder=[false])        |
|           FtrsIndexScanRel(table=[[LOCALDB, S, PRODUCTS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$PRODUCTS$SYS$PRIMARY_KEY], preserveOrder=[false])  |
|         FtrsIndexScanRel(table=[[LOCALDB, S, CUSTOMERS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$CUSTOMERS$SYS$PRIMARY_KEY], preserveOrder=[false])  |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- multiple dimension tables but filter on only one
0: jdbc:luciddb:> explain plan for select customers.lname, products.name, sales.price
. . . . . . . . > from sales, products, customers
. . . . . . . . > where customers.custid=sales.custid
. . . . . . . . > and sales.prodid = products.prodid
. . . . . . . . > and customers.lname = 'Andrews'
. . . . . . . . > order by 1,2,3;
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                          column0                                                                          |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                                 |
|   FennelSortRel(key=[[0, 1, 2]], discardDuplicates=[false])                                                                                               |
|     FennelCalcRel(LNAME=[$9], NAME=[$5], PRICE=[$3], condition=[AND(AND(=($7, $0), =($2, $4)), =($9, _ISO-8859-1'Andrews'))])                             |
|       FennelCartesianProductRel(leftouterjoin=[false])                                                                                                    |
|         FennelCartesianProductRel(leftouterjoin=[false])                                                                                                  |
|           FtrsIndexScanRel(table=[[LOCALDB, S, SALES]], projection=[*], index=[SYS$CONSTRAINT_INDEX$SALES$SYS$PRIMARY_KEY], preserveOrder=[false])        |
|           FtrsIndexScanRel(table=[[LOCALDB, S, PRODUCTS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$PRODUCTS$SYS$PRIMARY_KEY], preserveOrder=[false])  |
|         FtrsIndexScanRel(table=[[LOCALDB, S, CUSTOMERS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$CUSTOMERS$SYS$PRIMARY_KEY], preserveOrder=[false])  |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- multiple dimension tables, multiple filters
0: jdbc:luciddb:> explain plan for select customers.lname, products.name, sales.price
. . . . . . . . > from sales, products, customers
. . . . . . . . > where customers.custid=sales.custid
. . . . . . . . > and sales.prodid = products.prodid
. . . . . . . . > and customers.lname < 'C'
. . . . . . . . > and customers.fname > 'S'
. . . . . . . . > order by 1,2,3;
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
|                                                                          column0                                                                          |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| FennelToIteratorConverter                                                                                                                                 |
|   FennelSortRel(key=[[0, 1, 2]], discardDuplicates=[false])                                                                                               |
|     FennelCalcRel(LNAME=[$9], NAME=[$5], PRICE=[$3], condition=[AND(AND(AND(=($7, $0), =($2, $4)), <($9, _ISO-8859-1'C')), >($8, _ISO-8859-1'S'))])       |
|       FennelCartesianProductRel(leftouterjoin=[false])                                                                                                    |
|         FennelCartesianProductRel(leftouterjoin=[false])                                                                                                  |
|           FtrsIndexScanRel(table=[[LOCALDB, S, SALES]], projection=[*], index=[SYS$CONSTRAINT_INDEX$SALES$SYS$PRIMARY_KEY], preserveOrder=[false])        |
|           FtrsIndexScanRel(table=[[LOCALDB, S, PRODUCTS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$PRODUCTS$SYS$PRIMARY_KEY], preserveOrder=[false])  |
|         FtrsIndexScanRel(table=[[LOCALDB, S, CUSTOMERS]], projection=[*], index=[SYS$CONSTRAINT_INDEX$CUSTOMERS$SYS$PRIMARY_KEY], preserveOrder=[false])  |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> explain plan for select customers.lname, products.name, sales.price
. . . . . . . . > from sales, products, customers
. . . . . . . . > where customers.custid=sales.custid
. . . . . . . . > and sales.prodid = products.prodid
. . . . . . . . > and customers.lname < 'C'
. . . . . . . . > and customers.fname > 'S'
. . . . . . . . > and sales.prodid < 10009
. . . . . . . . > and products.name IN ('Soap', 'Juice', 'Soup', 'Microwave', 'Soda')
. . . . . . . . > and products.price < 5.00
. . . . . . . . > order by 1,2,3;
Error: java.lang.UnsupportedOperationException: class org.eigenbase.sql.SqlNodeList: 'Soap', 'Juice', 'Soup', 'Microwave', 'Soda' (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- dimension tables not referenced in select list, should drop
0: jdbc:luciddb:> -- out of join
0: jdbc:luciddb:> explain plan for select sum(sales.price)
. . . . . . . . > from sales, products, customers
. . . . . . . . > where customers.custid=sales.custid
. . . . . . . . > and sales.prodid = products.prodid
. . . . . . . . > and customers.lname < 'C'
. . . . . . . . > and customers.fname > 'S'
. . . . . . . . > and sales.prodid < 10009
. . . . . . . . > and products.name IN ('Soap', 'Juice', 'Soup', 'Microwave', 'Soda')
. . . . . . . . > and products.price < 5.00;
Error: java.lang.UnsupportedOperationException: class org.eigenbase.sql.SqlNodeList: 'Soap', 'Juice', 'Soup', 'Microwave', 'Soda' (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> explain plan for select sum(sales.price)
. . . . . . . . > from sales
. . . . . . . . > where custid in (select custid from customers where lname<'F' and fname>'D')
. . . . . . . . > and prodid in (select prodid from products where name
. . . . . . . . > IN ('Soap', 'Juice', 'Soup', 'Microwave', 'Soda'));
Error: java.lang.UnsupportedOperationException: class org.eigenbase.sql.SqlBinaryOperator: IN (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> !quit
