0: jdbc:luciddb:> -- $Id$
0: jdbc:luciddb:> -- Ported from //open/lu/dev/farrago/unitsql/ddl/udf.sql
0: jdbc:luciddb:> -- Test DDL for user-defined functions
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create schema udftest2;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> set schema 'udftest';
0: jdbc:luciddb:> set path 'udftest';
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test SQL-defined functions
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function celsius_to_fahrenheit(c double)
. . . . . . . . > returns double
. . . . . . . . > contains sql
. . . . . . . . > return c*1.8 + 32;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function add_integers(i int,j int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > return i + j;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- this should fail since add_integers is not a procedure
0: jdbc:luciddb:> drop procedure add_integers;
Error: DDL validation error near line 1, column 16: Reference to unknown procedure "UDFTEST"."ADD_INTEGERS" (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- but DROP ROUTINE should work
0: jdbc:luciddb:> drop routine add_integers;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test overloading
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail
0: jdbc:luciddb:> create function celsius_to_fahrenheit(c real)
. . . . . . . . > returns real
. . . . . . . . > contains sql
. . . . . . . . > return c*1.8 + 32;
Error: DDL validation error near line 1, column 8: Target schema "LOCALDB"."UDFTEST" already contains routine "CELSIUS_TO_FAHRENHEIT" with same name (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should succeed:  specific name avoids conflict
0: jdbc:luciddb:> create function celsius_to_fahrenheit(c real)
. . . . . . . . > returns real
. . . . . . . . > specific celsius_to_fahrenheit_real
. . . . . . . . > contains sql
. . . . . . . . > return c*1.8 + 32;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  schema for specific name must match schema for invocation name
0: jdbc:luciddb:> create function add_integers(i int,j int)
. . . . . . . . > returns int
. . . . . . . . > specific udftest2.add_ints
. . . . . . . . > contains sql
. . . . . . . . > return i + j;
Error: DDL validation error near line 1, column 8: Schema "UDFTEST2" for specific name does not match schema "LOCALDB"."UDFTEST" for invocation name (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- drop by specific name
0: jdbc:luciddb:> drop function celsius_to_fahrenheit;
0: jdbc:luciddb:> drop function celsius_to_fahrenheit_real;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test redundant language specification
0: jdbc:luciddb:> create function celsius_to_fahrenheit(c real)
. . . . . . . . > returns real
. . . . . . . . > language sql
. . . . . . . . > contains sql
. . . . . . . . > return c*1.8 + 32;
0: jdbc:luciddb:> drop function celsius_to_fahrenheit;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail: can't specify parameter style for SQL-defined routine
0: jdbc:luciddb:> create function celsius_to_fahrenheit(c real)
. . . . . . . . > returns real
. . . . . . . . > parameter style sql
. . . . . . . . > contains sql
. . . . . . . . > return c*1.8 + 32;
Error: DDL validation error near line 1, column 8: Parameter style cannot be specified for routine "UDFTEST"."CELSIUS_TO_FAHRENHEIT" with language SQL (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  can't declare explicit IN parameter to function
0: jdbc:luciddb:> create function add_integers(in i int,j int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > return i + j;
Error: DDL validation error near line 1, column 29: Parameter mode to routine "UDFTEST"."ADD_INTEGERS" may not be declared because it is a function (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  can't declare OUT parameter to function
0: jdbc:luciddb:> create function add_integers(out i int,j int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > return i + j;
Error: DDL validation error near line 1, column 29: Parameter mode to routine "UDFTEST"."ADD_INTEGERS" may not be declared because it is a function (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  can't declare INOUT parameter to function
0: jdbc:luciddb:> create function add_integers(inout i int,j int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > return i + j;
Error: DDL validation error near line 1, column 29: Parameter mode to routine "UDFTEST"."ADD_INTEGERS" may not be declared because it is a function (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  reference to bogus parameter
0: jdbc:luciddb:> create function add_integers(i int,j int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > return i + j + k;
Error: At line 4, column 16: Unknown identifier 'K' (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test various modifiers
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  NO SQL can't be specified for SQL-defined routines
0: jdbc:luciddb:> create function add_integers(i int,j int)
. . . . . . . . > returns int
. . . . . . . . > no sql
. . . . . . . . > return i + j;
Error: DDL validation error near line 1, column 8: NO SQL cannot be specified for routine "UDFTEST"."ADD_INTEGERS" with SQL definition (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- a bit of a fib, but should pass
0: jdbc:luciddb:> create function add_integers(i int,j int)
. . . . . . . . > returns int
. . . . . . . . > reads sql data
. . . . . . . . > return i + j;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> drop function add_integers;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- a bit of a fib, but should pass
0: jdbc:luciddb:> create function add_integers(i int,j int)
. . . . . . . . > returns int
. . . . . . . . > modifies sql data
. . . . . . . . > return i + j;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> drop function add_integers;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function add_integers(i int,j int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > deterministic
. . . . . . . . > return i + j;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> drop function add_integers;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function add_integers(i int,j int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > not deterministic
. . . . . . . . > return i + j;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> drop function add_integers;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function add_integers(i int,j int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > returns null on null input
. . . . . . . . > return i + j;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> drop function add_integers;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function add_integers(i int,j int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > called on null input
. . . . . . . . > return i + j;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> drop function add_integers;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test dependencies and cascade/restrict
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function to_upper(v varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > contains sql
. . . . . . . . > return upper(v);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create view upper_crust as
. . . . . . . . > select to_upper(fname)
. . . . . . . . > from udftest.customers;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function to_upper2(v varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > contains sql
. . . . . . . . > return upper(v);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function to_uppertrim(v varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > contains sql
. . . . . . . . > return trim(trailing ' ' from to_upper2(v));
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  restrict
0: jdbc:luciddb:> drop function to_upper;
Error: Dropping routine "UDFTEST"."TO_UPPER" requires CASCADE because other objects still reference it (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> drop function to_upper cascade;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  restrict
0: jdbc:luciddb:> drop function to_upper2;
Error: Dropping routine "UDFTEST"."TO_UPPER2" requires CASCADE because other objects still reference it (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> drop function to_uppertrim;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should succeed now that to_uppertrim is gone
0: jdbc:luciddb:> drop function to_upper2;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function add_integers(i int,j int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > return i + j;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail
0: jdbc:luciddb:> create schema badpath
. . . . . . . . > create function double_integer(i int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > return add_integers(i,i);
Error: From line 5, column 8 to line 5, column 24: No match found for function signature ADD_INTEGERS(<NUMERIC>, <NUMERIC>) (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should succeed
0: jdbc:luciddb:> create schema goodpath
. . . . . . . . > path udftest
. . . . . . . . > create function double_integer(i int)
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > return add_integers(i,i);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- begin tests for mismatched Java/SQL
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  cannot specify both SQL body and external name
0: jdbc:luciddb:> create function get_java_property(name varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > contains sql
. . . . . . . . > external name 'class java.lang.System.getProperty'
. . . . . . . . > return 'undefined';
Error: org.eigenbase.sql.parser.SqlParseException: Encountered "return" at line 5, column 1.
Was expecting one of:
    <EOF> 
    "EXTERNAL" ...
    "PARAMETER" ... (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  cannot specify language SQL with external name
0: jdbc:luciddb:> create function get_java_property(name varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > language sql
. . . . . . . . > contains sql
. . . . . . . . > external name 'class java.lang.System.getProperty';
Error: DDL validation error near line 1, column 8: Body required for routine "UDFTEST"."GET_JAVA_PROPERTY" with language SQL (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  cannot specify parameter style SQL with external name
0: jdbc:luciddb:> create function get_java_property(name varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > language java
. . . . . . . . > parameter style sql
. . . . . . . . > contains sql
. . . . . . . . > external name 'class java.lang.System.getProperty';
Error: DDL validation error near line 1, column 8: External JAVA routine "UDFTEST"."GET_JAVA_PROPERTY" cannot specify non-JAVA parameter style (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  cannot specify parameter style SQL with external name
0: jdbc:luciddb:> create function get_java_property(name varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > language java
. . . . . . . . > contains sql
. . . . . . . . > external name 'class java.lang.System.getProperty'
. . . . . . . . > parameter style sql;
Error: DDL validation error near line 1, column 8: External JAVA routine "UDFTEST"."GET_JAVA_PROPERTY" cannot specify non-JAVA parameter style (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  cannot specify language JAVA with SQL body
0: jdbc:luciddb:> create function celsius_to_fahrenheit(c double)
. . . . . . . . > returns double
. . . . . . . . > language java
. . . . . . . . > contains sql
. . . . . . . . > return c*1.8 + 32;
Error: DDL validation error near line 1, column 8: External routine "UDFTEST"."CELSIUS_TO_FAHRENHEIT" cannot specify a body (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  cannot specify parameter style JAVA with SQL body
0: jdbc:luciddb:> create function celsius_to_fahrenheit(c double)
. . . . . . . . > returns double
. . . . . . . . > parameter style java
. . . . . . . . > contains sql
. . . . . . . . > return c*1.8 + 32;
Error: DDL validation error near line 1, column 8: Parameter style cannot be specified for routine "UDFTEST"."CELSIUS_TO_FAHRENHEIT" with language SQL (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test external Java routines
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function get_java_property(name varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > language java
. . . . . . . . > no sql
. . . . . . . . > external name 'class java.lang.System.getProperty';
0: jdbc:luciddb:> drop function get_java_property;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test redundant parameter style specification
0: jdbc:luciddb:> create function get_java_property(name varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > language java
. . . . . . . . > parameter style java
. . . . . . . . > no sql
. . . . . . . . > external name 'class java.lang.System.getProperty';
0: jdbc:luciddb:> drop function get_java_property;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  missing method spec
0: jdbc:luciddb:> create function get_java_property(name varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > language java
. . . . . . . . > no sql
. . . . . . . . > external name 'class foobar';
Error: DDL validation error near line 1, column 8: Invalid external Java method specification "class foobar" specified for routine "UDFTEST"."GET_JAVA_PROPERTY" (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  unknown class
0: jdbc:luciddb:> create function get_java_property(name varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > language java
. . . . . . . . > no sql
. . . . . . . . > external name 'class java.lang.Rodent.getProperty';
Error: java.lang.ClassNotFoundException: java.lang.Rodent (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  unknown method 
0: jdbc:luciddb:> create function get_java_property(name varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > language java
. . . . . . . . > no sql
. . . . . . . . > external name 'class java.lang.System.getHotels';
Error: DDL validation error near line 1, column 8: Unknown external Java method "java.lang.System.getHotels(java.lang.String)" referenced by routine "UDFTEST"."GET_JAVA_PROPERTY" (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  method not found due to parameter type mismatch
0: jdbc:luciddb:> create function get_java_property(name int)
. . . . . . . . > returns varchar(128)
. . . . . . . . > language java
. . . . . . . . > no sql
. . . . . . . . > external name 'class java.lang.System.getProperty';
Error: DDL validation error near line 1, column 8: Unknown external Java method "java.lang.System.getProperty(int)" referenced by routine "UDFTEST"."GET_JAVA_PROPERTY" (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  parameter type mismatch for explicit method spec
0: jdbc:luciddb:> create function get_java_property(name int)
. . . . . . . . > returns varchar(128)
. . . . . . . . > language java
. . . . . . . . > no sql
. . . . . . . . > external name 'class java.lang.System.getProperty(java.lang.String)';
Error: DDL validation error near line 1, column 8: Type of routine parameter "NAME" in routine "UDFTEST"."GET_JAVA_PROPERTY" is INTEGER but external Java method "java.lang.System.getProperty(java.lang.String)" takes type class java.lang.String for corresponding parameter (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  return type mismatch
0: jdbc:luciddb:> create function get_java_property(name varchar(128))
. . . . . . . . > returns int
. . . . . . . . > language java
. . . . . . . . > no sql
. . . . . . . . > external name 'class java.lang.System.getProperty';
Error: DDL validation error near line 1, column 8: Return type of routine "UDFTEST"."GET_JAVA_PROPERTY" is INTEGER but external Java method "java.lang.System.getProperty(java.lang.String)" has return type class java.lang.String (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test explicit selection of method from overloads
0: jdbc:luciddb:> create function to_hex_string(i int)
. . . . . . . . > returns varchar(128)
. . . . . . . . > language java
. . . . . . . . > no sql
. . . . . . . . > external name 
. . . . . . . . > 'class net.sf.farrago.test.FarragoTestUDR.toHexString(java.lang.Integer)';
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test early definition binding
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function magic(i bigint)
. . . . . . . . > returns int
. . . . . . . . > specific magic10
. . . . . . . . > contains sql
. . . . . . . . > return 10;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function presto()
. . . . . . . . > returns int
. . . . . . . . > contains sql
. . . . . . . . > return magic(1);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function magic(i int)
. . . . . . . . > returns int
. . . . . . . . > specific magic20
. . . . . . . . > contains sql
. . . . . . . . > return 20;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should get 10, even though new overload for magic is a better match
0: jdbc:luciddb:> values presto();
+---------+
| EXPR$0  |
+---------+
| 10      |
+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test stored binding for builtins vs routines
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function "UPPER"(x varchar(128))
. . . . . . . . > returns varchar(128)
. . . . . . . . > contains sql
. . . . . . . . > return x||'_plus_one';
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function tweedledee()
. . . . . . . . > returns varchar(128)
. . . . . . . . > contains sql
. . . . . . . . > return upper('cobol');
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function tweedledum()
. . . . . . . . > returns varchar(128)
. . . . . . . . > contains sql
. . . . . . . . > return information_schema."UPPER"('cobol');
0: jdbc:luciddb:> 
0: jdbc:luciddb:> values tweedledee();
+-----------------+
|     EXPR$0      |
+-----------------+
| cobol_plus_one  |
+-----------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> values tweedledum();
+---------+
| EXPR$0  |
+---------+
| COBOL   |
+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test stored bindings for specific name vs invocation name
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function gargantua()
. . . . . . . . > returns varchar(128)
. . . . . . . . > specific pantagruel
. . . . . . . . > contains sql
. . . . . . . . > return 'gargantua';
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function pantagruel()
. . . . . . . . > returns varchar(128)
. . . . . . . . > specific gargantua
. . . . . . . . > contains sql
. . . . . . . . > return 'pantagruel';
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function rabelais()
. . . . . . . . > returns varchar(128)
. . . . . . . . > contains sql
. . . . . . . . > return gargantua();
0: jdbc:luciddb:> 
0: jdbc:luciddb:> values gargantua();
+------------+
|   EXPR$0   |
+------------+
| gargantua  |
+------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> values specific gargantua();
+-------------+
|   EXPR$0    |
+-------------+
| pantagruel  |
+-------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> values rabelais();
+------------+
|   EXPR$0   |
+------------+
| gargantua  |
+------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test conflict detection
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --create procedure set_java_property(in name varchar(128),val varchar(128))
0: jdbc:luciddb:> --language java
0: jdbc:luciddb:> --no sql
0: jdbc:luciddb:> --external name 'class net.sf.farrago.test.FarragoTestUDR.setSystemProperty';
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  procedures cannot be overloaded on parameter type
0: jdbc:luciddb:> --create procedure set_java_property(in name char(128),in val char(128))
0: jdbc:luciddb:> --language java
0: jdbc:luciddb:> --no sql
0: jdbc:luciddb:> --external name 'class net.sf.farrago.test.FarragoTestUDR.setSystemProperty';
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create function piffle(i int)
. . . . . . . . > returns int
. . . . . . . . > specific piffle1
. . . . . . . . > contains sql
. . . . . . . . > return 20;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should succeed:  functions can be overloaded on parameter type
0: jdbc:luciddb:> create function piffle(d double)
. . . . . . . . > returns int
. . . . . . . . > specific piffle2
. . . . . . . . > contains sql
. . . . . . . . > return 20;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail
0: jdbc:luciddb:> create function piffle(d double)
. . . . . . . . > returns int
. . . . . . . . > specific piffle3
. . . . . . . . > contains sql
. . . . . . . . > return 20;
Error: DDL validation error near line 1, column 8: Invocation name and parameter type signature of routine "UDFTEST"."PIFFLE3" conflicts with another routine (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should fail:  even though the parameter type is different, it is
0: jdbc:luciddb:> -- in the same type precedence equivalence class
0: jdbc:luciddb:> create function piffle(f float)
. . . . . . . . > returns int
. . . . . . . . > specific piffle4
. . . . . . . . > contains sql
. . . . . . . . > return 20;
Error: DDL validation error near line 1, column 8: Invocation name and parameter type signature of routine "UDFTEST"."PIFFLE4" conflicts with another routine (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> !quit
