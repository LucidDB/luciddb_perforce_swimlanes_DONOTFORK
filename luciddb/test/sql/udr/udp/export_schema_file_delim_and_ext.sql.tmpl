--
-- exports using file delimiter and file extension parameters
--

create schema exportfdext;
set schema 'exportfdext';

create table example(
  id int,
  line varchar(100),
  charline char(100)
);

insert into example values
(1, 'perfectly normal text', 'perfectly normal text'),
(2, 'let''s see some "double""quotes" and single''ones too', 'let''s see some "double""quotes" and single''ones too'),
(3, 'now, how about them,,,commas,yes?', 'now, how about them,,,commas,yes?'),
(4, 'all,"together''",'',","now!', 'all,"together''",'',","now!'),
(5, 'don''t forget
about these wonderous,
carriage returns too', 'don''t forget
about these wonderous,
carriage returns too');

select * from example order by 1;

-- export with tab delimiter and .tab
call sys_root.export_schema_to_file(null, 'EXPORTFDEXT', false, null, null, '@EXPDIR@/local/fdext', true, true, '\t', '.tab');

create server tab_server
foreign data wrapper "FLAT FILE"
options(
  directory '@EXPDIR@/local/fdext',
  file_extension '.tab',
  field_delimiter '\t',
  line_delimiter '\n',
  quote_char '"',
  with_header 'yes'
);

select * from tab_server.bcp.example order by 1;

-- export with comma delimiter and .csv
call sys_root.export_schema_to_file(null, 'EXPORTFDEXT', false, null, null, '@EXPDIR@/local/fdext', true, true, ',', '.csv');

create server commacsv_server
foreign data wrapper "FLAT FILE"
options(
  directory '@EXPDIR@/local/fdext',
  file_extension '.csv',
  field_delimiter ',',
  line_delimiter '\n',
  quote_char '"',
  with_header 'yes'
);

select * from commacsv_server.bcp.example order by 1;
