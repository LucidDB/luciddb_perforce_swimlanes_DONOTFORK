<?xml version="1.0" encoding="UTF-8"?>
<!--
// $Id$
// LucidDB is a DBMS optimized for business intelligence.
// Copyright (C) 2005-2005 LucidEra, Inc.
// Copyright (C) 2005-2005 The Eigenbase Project
//
// This program is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version approved by The Eigenbase Project.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-->

<project name="udp" basedir="." default="test">
  <dirname property="udp.dir" file="${ant.file.udp}" />

  <property name="open.dir" location="${udp.dir}/../../../../.."/>
  <fail unless="open.dir" />

  <property environment="env" />
  <property file="run.properties"/>

  <!-- override Farrago -->
  <property name="project.catalog.dir" location="${open.dir}/luciddb/catalog" />
  <property name="project.trace.propfile" location="${open.dir}/luciddb/trace/LucidDbTrace.properties" />
  <property name="project.testlog.dir" location="${open.dir}/luciddb/testlog" />
  <import file="${open.dir}/farrago/buildMacros.xml" />

  <!-- directory where sql is generated -->
  <property name="gensql.dir" value="${udp.dir}/gen" />

  <!-- directory where blackhawk output should go -->
  <property name="bh.log.basedir" value="${udp.dir}/testlog" />

  <!-- directory of csv files -->
  <property name="csv.copy.dir" value="${open.dir}/luciddb/test/sql/udr/udp/csv-copy" />
  <property name="data.dir" value="${open.dir}/luciddb/test/data" />
  
  <!-- directory where flatfiles are exported -->
  <property name="csv.exp.dir" value="${open.dir}/luciddb/test/sql/udr/udp/csv-exp" />

  <!-- directory for error logs -->
  <property name="errlog.dir" value="${open.dir}/luciddb/test/sql/udr/udp/logs" />

  <!-- classpath for running tests via ant -->
  <path id="test.classpath">
    <pathelement path="${open.dir}/luciddb/classes"/>
    <pathelement path="${farrago.sqlline.classpath}"/>
    <pathelement path="${ant.classpath}"/>
    <pathelement path="${blackhawk.run.classpath}"/>
    <pathelement path="${test.emma.classpath}" />
  </path>
  <property name="test.classpath" refid="test.classpath"/>

  <target name="gen-all-sql">
    <!-- generate run.properties -->
    <available file="run.properties" type="file"
      property="run.properties.exists"/>
    <if>
      <isset property="run.properties.exists"/>
      <then/>
      <else>
        <copy file="run.properties.tmpl" tofile="run.properties"/>
        <property file="run.properties"/>
      </else>
    </if>

    <!-- create error log directory -->
    <mkdir dir="${errlog.dir}"/>

    <!-- generate sql -->
    <copy todir="${gensql.dir}">
      <fileset dir="${udp.dir}" includes="*.tmpl"/>
      <filterset>
        <filter token="DIR" value="${csv.copy.dir}"/>
        <filter token="EXPDIR" value="${csv.exp.dir}"/>
        <filter token="LOGDIR" value="${errlog.dir}"/>
      </filterset>
      <globmapper from="*.tmpl" to="*"/>
    </copy>
  </target>

  <target name="test" depends="clean-test,gen-all-sql">
    <blackhawk.fork
      basedir="${udp.dir}"
      testscript="${testfile}"
      classpathref="test.classpath"/>
  </target>

  <target name="copy-csv">
    <sync todir="${csv.copy.dir}"
      overwrite="true"
      verbose="true"
      failonerror="true">
      <fileset dir="${data.dir}">
        <include name="*.csv"/>
        <include name="*.bcp"/>
        <exclude name="blob.*"/>
      </fileset>
    </sync>
  </target>

  <target name="clean-exp">
    <delete dir="${csv.exp.dir}" quiet="true"/>
  </target>

  <target name="clean-test">
  	<delete quiet="true" includeemptydirs="true">
      <fileset dir="${gensql.dir}"/>
      <fileset dir="${csv.exp.dir}"/>
      <fileset dir="${bh.log.basedir}"/>
      <fileset dir="${udp.dir}">
        <include name="*.log"/>
      </fileset>
      <fileset dir="${errlog.dir}"/>
    </delete>
  </target>
  
  <target name="clean" depends="clean-test">
    <delete quiet="true" includeemptydirs="true">
      <fileset dir="${csv.copy.dir}"/>
      <fileset dir="${udp.dir}">
        <include name="run.properties"/>
      </fileset>
    </delete>
  </target>

</project>
