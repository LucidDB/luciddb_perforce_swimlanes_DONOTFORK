0: jdbc:luciddb:> create schema hello;
0: jdbc:luciddb:> set schema 'hello';
0: jdbc:luciddb:> create table firing (step varchar(100), dirty_seq int, relative_seq int);
0: jdbc:luciddb:> insert into firing values ('Ready', 0, 2), ('Aim', 0, 0), ('Fire', 0, 1),
. . . . . . . . > ('Drag', 1, 0), ('Bury', 2, 0), ('Kill', 0, 1);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Simple tests without partitioning
0: jdbc:luciddb:> select * from table(
. . . . . . . . >   applib.generate_sequence(
. . . . . . . . >     cursor(select step, dirty_seq, relative_seq from firing),
. . . . . . . . >     0, 1));
+--------+------------+---------------+----------+
|  STEP  | DIRTY_SEQ  | RELATIVE_SEQ  | SEQ_NUM  |
+--------+------------+---------------+----------+
| Ready  | 0          | 2             | 0        |
| Aim    | 0          | 0             | 1        |
| Fire   | 0          | 1             | 2        |
| Drag   | 1          | 0             | 3        |
| Bury   | 2          | 0             | 4        |
| Kill   | 0          | 1             | 5        |
+--------+------------+---------------+----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> select * from table(
. . . . . . . . >   applib.generate_sequence(
. . . . . . . . >     cursor(select step, dirty_seq, relative_seq from firing),
. . . . . . . . >     3, 2));
+--------+------------+---------------+----------+
|  STEP  | DIRTY_SEQ  | RELATIVE_SEQ  | SEQ_NUM  |
+--------+------------+---------------+----------+
| Ready  | 0          | 2             | 3        |
| Aim    | 0          | 0             | 5        |
| Fire   | 0          | 1             | 7        |
| Drag   | 1          | 0             | 9        |
| Bury   | 2          | 0             | 11       |
| Kill   | 0          | 1             | 13       |
+--------+------------+---------------+----------+
0: jdbc:luciddb:> select * from table(
. . . . . . . . >   applib.generate_sequence(
. . . . . . . . >     cursor(select step, dirty_seq, relative_seq from firing),
. . . . . . . . >     10, -1));
+--------+------------+---------------+----------+
|  STEP  | DIRTY_SEQ  | RELATIVE_SEQ  | SEQ_NUM  |
+--------+------------+---------------+----------+
| Ready  | 0          | 2             | 10       |
| Aim    | 0          | 0             | 9        |
| Fire   | 0          | 1             | 8        |
| Drag   | 1          | 0             | 7        |
| Bury   | 2          | 0             | 6        |
| Kill   | 0          | 1             | 5        |
+--------+------------+---------------+----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- bigint overflow
0: jdbc:luciddb:> select * from table(
. . . . . . . . >   applib.generate_sequence(
. . . . . . . . >     cursor(select step, dirty_seq, relative_seq from firing),
. . . . . . . . >     9223372036854775805, 1));
+--------+------------+---------------+-----------------------+
|  STEP  | DIRTY_SEQ  | RELATIVE_SEQ  |        SEQ_NUM        |
+--------+------------+---------------+-----------------------+
| Ready  | 0          | 2             | 9223372036854775805   |
| Aim    | 0          | 0             | 9223372036854775806   |
| Fire   | 0          | 1             | 9223372036854775807   |
| Drag   | 1          | 0             | -9223372036854775808  |
| Bury   | 2          | 0             | -9223372036854775807  |
| Kill   | 0          | 1             | -9223372036854775806  |
+--------+------------+---------------+-----------------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- zero increment
0: jdbc:luciddb:> select * from table(
. . . . . . . . >   applib.generate_sequence(
. . . . . . . . >     cursor(select step, dirty_seq, relative_seq from firing),
. . . . . . . . >     1, 0));
Error: INCREMENT_BY cannot be zero (but it was). (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test null values
0: jdbc:luciddb:> select * from table(
. . . . . . . . >   applib.generate_sequence(
. . . . . . . . >     cursor(select step, dirty_seq, relative_seq from firing),
. . . . . . . . >     cast(null as bigint), 2));
+--------+------------+---------------+----------+
|  STEP  | DIRTY_SEQ  | RELATIVE_SEQ  | SEQ_NUM  |
+--------+------------+---------------+----------+
| Ready  | 0          | 2             | 1        |
| Aim    | 0          | 0             | 3        |
| Fire   | 0          | 1             | 5        |
| Drag   | 1          | 0             | 7        |
| Bury   | 2          | 0             | 9        |
| Kill   | 0          | 1             | 11       |
+--------+------------+---------------+----------+
0: jdbc:luciddb:> select * from table(
. . . . . . . . >   applib.generate_sequence(
. . . . . . . . >     cursor(select step, dirty_seq, relative_seq from firing),
. . . . . . . . >     3, cast(null as bigint)));
+--------+------------+---------------+----------+
|  STEP  | DIRTY_SEQ  | RELATIVE_SEQ  | SEQ_NUM  |
+--------+------------+---------------+----------+
| Ready  | 0          | 2             | 3        |
| Aim    | 0          | 0             | 4        |
| Fire   | 0          | 1             | 5        |
| Drag   | 1          | 0             | 6        |
| Bury   | 2          | 0             | 7        |
| Kill   | 0          | 1             | 8        |
+--------+------------+---------------+----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- some basic partitioning now
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- out of order sorting:
0: jdbc:luciddb:> select step, dirty_seq, seq_num as relative_seq from table(
. . . . . . . . >   applib.generate_sequence_partitioned(
. . . . . . . . >     cursor(select step, dirty_seq from firing),
. . . . . . . . >     row(dirty_seq), 0, 1));
Error: Input cursor must be sorted by the following column(s) in ascending order: [[DIRTY_SEQ]]; out of order column value(s): [[STEP, DIRTY_SEQ]] (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- sorted
0: jdbc:luciddb:> 
0: jdbc:luciddb:> select * from table(applib.generate_sequence_partitioned(
. . . . . . . . >     cursor(select * from firing order by dirty_seq),
. . . . . . . . >     row(dirty_seq), 0, 1));
+--------+------------+---------------+----------+
|  STEP  | DIRTY_SEQ  | RELATIVE_SEQ  | SEQ_NUM  |
+--------+------------+---------------+----------+
| Ready  | 0          | 2             | 0        |
| Aim    | 0          | 0             | 1        |
| Fire   | 0          | 1             | 2        |
| Kill   | 0          | 1             | 3        |
| Drag   | 1          | 0             | 0        |
| Bury   | 2          | 0             | 0        |
+--------+------------+---------------+----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- two keys
0: jdbc:luciddb:> select * from table(applib.generate_sequence_partitioned(
. . . . . . . . >     cursor(select * from firing order by dirty_seq, relative_seq),
. . . . . . . . >     row(dirty_seq, relative_seq), 0, 1));
+--------+------------+---------------+----------+
|  STEP  | DIRTY_SEQ  | RELATIVE_SEQ  | SEQ_NUM  |
+--------+------------+---------------+----------+
| Aim    | 0          | 0             | 0        |
| Fire   | 0          | 1             | 0        |
| Kill   | 0          | 1             | 1        |
| Ready  | 0          | 2             | 0        |
| Drag   | 1          | 0             | 0        |
| Bury   | 2          | 0             | 0        |
+--------+------------+---------------+----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- cleanup
0: jdbc:luciddb:> drop table firing;
0: jdbc:luciddb:> drop schema hello cascade;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> !quit
