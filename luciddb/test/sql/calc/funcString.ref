0: jdbc:luciddb:> -- test STRING builtin functions
0: jdbc:luciddb:> 
0: jdbc:luciddb:> set schema 's';
0: jdbc:luciddb:> 
0: jdbc:luciddb:> select s1 || '-' || s2, upper(s1),
. . . . . . . . > lower(s2), trim(s3), substring(s2 from 4 for 3),
. . . . . . . . > position('RI' in s2), position('ri' in s2), char_length(s2)
. . . . . . . . > from boris
. . . . . . . . > ;
+------------------+----------+----------+----------+---------+---------+---------+---------+
|      EXPR$0      |  EXPR$1  |  EXPR$2  |  EXPR$3  | EXPR$4  | EXPR$5  | EXPR$6  | EXPR$7  |
+------------------+----------+----------+----------+---------+---------+---------+---------+
| string1-string2  | STRING1  | string2  | string3  | ing     | 0       | 3       | 7       |
+------------------+----------+----------+----------+---------+---------+---------+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> select position('ing' in s2), position('' in s2), position('ing' in snull)
. . . . . . . . > from boris
. . . . . . . . > ;
+---------+---------+---------+
| EXPR$0  | EXPR$1  | EXPR$2  |
+---------+---------+---------+
| 4       | 1       |         |
+---------+---------+---------+
0: jdbc:luciddb:> select snull || snull || 'Boris', 'Boris ' || s2 from boris
. . . . . . . . > ;
+---------+----------------+
| EXPR$0  |     EXPR$1     |
+---------+----------------+
|         | Boris string2  |
+---------+----------------+
0: jdbc:luciddb:> select lower(upper(lower(upper(s2)))), upper(s2), upper(snull), lower('B')
. . . . . . . . > from boris
. . . . . . . . > ;
+----------+----------+---------+---------+
|  EXPR$0  |  EXPR$1  | EXPR$2  | EXPR$3  |
+----------+----------+---------+---------+
| string2  | STRING2  |         | b       |
+----------+----------+---------+---------+
0: jdbc:luciddb:> select substring(snull from 4 for 3), substring(s2 from 1 for 3),
. . . . . . . . > substring(s2 from 1 for 0), substring(s2 from 2 for 1) from boris
. . . . . . . . > ;
+---------+---------+---------+---------+
| EXPR$0  | EXPR$1  | EXPR$2  | EXPR$3  |
+---------+---------+---------+---------+
|         | str     |         | t       |
+---------+---------+---------+---------+
0: jdbc:luciddb:> select char_length(snull), char_length('Boris'), char_length(s2) from boris
. . . . . . . . > ;
+---------+---------+---------+
| EXPR$0  | EXPR$1  | EXPR$2  |
+---------+---------+---------+
|         | 5       | 7       |
+---------+---------+---------+
0: jdbc:luciddb:> select initcap('see spot, see Spot run'), initcap(snull) from boris
. . . . . . . . > ;
+-------------------------+---------+
|         EXPR$0          | EXPR$1  |
+-------------------------+---------+
| See Spot, See Spot Run  |         |
+-------------------------+---------+
0: jdbc:luciddb:> -- select lpad(s2, 10), rpad(s2, 10), lpad(snull, 2), rpad(s2, nnull) from boris
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> DROP TABLE FOO;
Error: DDL validation error near line 1, column 12: Reference to unknown table "FOO" (state=,code=0)
0: jdbc:luciddb:> create table foo(cola double, str varchar(20));
0: jdbc:luciddb:> insert into foo values (1.12345, 'boy');
0: jdbc:luciddb:> insert into foo values (21.12345, 'girl');
0: jdbc:luciddb:> -- select cola, trunc(cola,4), round(cola,4) from foo;
0: jdbc:luciddb:> select substring(str from 2 for 3) from foo;
+---------+
| EXPR$0  |
+---------+
| oy      |
| irl     |
+---------+
0: jdbc:luciddb:> select substring(str from 2 for -2) from foo;
Error: The length for substring can not be negative (state=,code=0)
0: jdbc:luciddb:> DROP TABLE FOO;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- New versions of statements
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Check upper vs lower
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.c1, B.c1 FROM TEST_CHAR_TABLE A, TEST_CHAR_TABLE B
. . . . . . . . > WHERE A.c1 = B.c1
. . . . . . . . >   AND UPPER(A.c1) <> UPPER(LOWER(UPPER(B.c1)));
+-----+-----+
| C1  | C1  |
+-----+-----+
+-----+-----+
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.c3, B.c3 FROM TEST_CHAR_TABLE A, TEST_CHAR_TABLE B
. . . . . . . . > WHERE A.c3 = B.c3
. . . . . . . . >   AND UPPER(A.c3) <> UPPER(LOWER(UPPER(B.c3)));
+-----+-----+
| C3  | C3  |
+-----+-----+
+-----+-----+
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.s1, B.s1 FROM TEST_VARCHAR_TABLE A, TEST_VARCHAR_TABLE B
. . . . . . . . > WHERE A.s1 = B.s1
. . . . . . . . >   AND UPPER(A.s1) <> UPPER(LOWER(UPPER(B.s1)));
+-----+-----+
| S1  | S1  |
+-----+-----+
+-----+-----+
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.s3, B.s3 FROM TEST_VARCHAR_TABLE A, TEST_VARCHAR_TABLE B
. . . . . . . . > WHERE A.s3 = B.s3
. . . . . . . . >   AND UPPER(A.s3) <> UPPER(LOWER(UPPER(B.s3)));
+-----+-----+
| S3  | S3  |
+-----+-----+
+-----+-----+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Check substring and trimming on greater sizes than the width of the
0: jdbc:luciddb:> -- column
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.c1, B.c1 FROM TEST_CHAR_TABLE A, TEST_CHAR_TABLE B
. . . . . . . . > WHERE A.c1 = B.c1
. . . . . . . . >   AND A.c1 <> SUBSTRING(B.c1, 1, 10);
+-----+-----+
| C1  | C1  |
+-----+-----+
+-----+-----+
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.s1, B.s1 FROM TEST_VARCHAR_TABLE A, TEST_VARCHAR_TABLE B
. . . . . . . . > WHERE A.s1 = B.s1
. . . . . . . . >   AND A.s1 <> SUBSTRING(B.s1, 1, 10);
+-----+-----+
| S1  | S1  |
+-----+-----+
+-----+-----+
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.c1, B.c1 FROM TEST_CHAR_TABLE A, TEST_CHAR_TABLE B
. . . . . . . . > WHERE A.c1 = B.c1
. . . . . . . . >   AND A.c1 <> LEFTN(B.c1, 10);
Error: From line 1, column 93 to line 1, column 107: No match found for function signature LEFTN(<CHARACTER>, <NUMERIC>) (state=,code=0)
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.s1, B.s1 FROM TEST_VARCHAR_TABLE A, TEST_VARCHAR_TABLE B
. . . . . . . . > WHERE A.s1 = B.s1
. . . . . . . . >   AND A.s1 <> LEFTN(B.s1, 10);
Error: From line 1, column 99 to line 1, column 113: No match found for function signature LEFTN(<CHARACTER>, <NUMERIC>) (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Note that LTRIM on a given character should not remove
0: jdbc:luciddb:> -- any characters that don't match.
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.c1, B.c1 FROM TEST_CHAR_TABLE A, TEST_CHAR_TABLE B
. . . . . . . . > WHERE A.c1 = B.c1
. . . . . . . . >   AND A.c1 <> LTRIM(B.c1, '@');
Error: From line 1, column 93 to line 1, column 108: No match found for function signature LTRIM(<CHARACTER>, <CHARACTER>) (state=,code=0)
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.s1, B.s1 FROM TEST_VARCHAR_TABLE A, TEST_VARCHAR_TABLE B
. . . . . . . . > WHERE A.s1 = B.s1
. . . . . . . . >   AND A.s1 <> LTRIM(B.s1, '@');
Error: From line 1, column 99 to line 1, column 114: No match found for function signature LTRIM(<CHARACTER>, <CHARACTER>) (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Just check that our substringing and padding, etc. returns
0: jdbc:luciddb:> -- the proper number of columns and that CHAR_LENGTH checks it properly.
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.c3, B.c3 FROM TEST_CHAR_TABLE A, TEST_CHAR_TABLE B
. . . . . . . . > WHERE A.c3 = B.c3
. . . . . . . . >   AND CHAR_LENGTH(A.c3) <> CHAR_LENGTH(LPAD(RTRIM(RPAD(SUBSTRING(B.c3, 2, 2), 100, '#'), '#'), CHAR_LENGTH(B.c3)));
Error: From line 1, column 129 to line 1, column 165: No match found for function signature RPAD(<CHARACTER>, <NUMERIC>, <CHARACTER>) (state=,code=0)
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.s3, B.s3 FROM TEST_VARCHAR_TABLE A, TEST_VARCHAR_TABLE B
. . . . . . . . > WHERE A.s3 = B.s3
. . . . . . . . >   AND CHAR_LENGTH(A.s3) <> CHAR_LENGTH(LPAD(RTRIM(RPAD(SUBSTRING(B.s3, 2, 2), 100, '#'), '#'), CHAR_LENGTH(B.s3)));
Error: From line 1, column 135 to line 1, column 171: No match found for function signature RPAD(<CHARACTER>, <NUMERIC>, <CHARACTER>) (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Translate is semi random, but we should check it intelligently.
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.c1, B.c1 FROM TEST_CHAR_TABLE A, TEST_CHAR_TABLE B
. . . . . . . . > WHERE A.c1 = B.c1
. . . . . . . . >   AND A.c1 <> TRANSLATE(B.c1, 'abcdefgkirkKIRK12345678x', 'abcdefgkirkKIRK12345678x');
Error: org.eigenbase.sql.parser.SqlParseException: Encountered "," at line 1, column 107.
Was expecting one of:
    "AND" ...
    "BETWEEN" ...
    "IN" ...
    "IS" ...
    "LIKE" ...
    "MEMBER" ...
    "MULTISET" ...
    "NOT" ...
    "OR" ...
    "SIMILAR" ...
    "SUBMULTISET" ...
    "USING" ...
    "." ...
    "=" ...
    ">" ...
    "<" ...
    "<=" ...
    ">=" ...
    "<>" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "||" ...
    "(" ... (state=,code=0)
0: jdbc:luciddb:> -- This statement should not return any rows
0: jdbc:luciddb:> SELECT A.s1, B.s1 FROM TEST_VARCHAR_TABLE A, TEST_VARCHAR_TABLE B
. . . . . . . . > WHERE A.s1 = B.s1
. . . . . . . . >   AND A.s1 <> TRANSLATE(B.s1, 'abcdefgkirkKIRK12345678x', 'abcdefgkirkKIRK12345678x');
Error: org.eigenbase.sql.parser.SqlParseException: Encountered "," at line 1, column 113.
Was expecting one of:
    "AND" ...
    "BETWEEN" ...
    "IN" ...
    "IS" ...
    "LIKE" ...
    "MEMBER" ...
    "MULTISET" ...
    "NOT" ...
    "OR" ...
    "SIMILAR" ...
    "SUBMULTISET" ...
    "USING" ...
    "." ...
    "=" ...
    ">" ...
    "<" ...
    "<=" ...
    ">=" ...
    "<>" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "||" ...
    "(" ... (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Check INITCAP on combinations of alpha numeric words
0: jdbc:luciddb:> values(INITCAP('  123a3b3v3c  gff78f 4 4'));
+---------------------------+
|          EXPR$0           |
+---------------------------+
|   123a3b3v3c  Gff78f 4 4  |
+---------------------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Check the results of this sequence manually.
0: jdbc:luciddb:> DROP TABLE FOO;
Error: DDL validation error near line 1, column 12: Reference to unknown table "FOO" (state=,code=0)
0: jdbc:luciddb:> CREATE TABLE FOO (c CHAR(10));
0: jdbc:luciddb:> INSERT INTO FOO VALUES ('1');
0: jdbc:luciddb:> INSERT INTO FOO VALUES (' 1');
0: jdbc:luciddb:> INSERT INTO FOO VALUES ('  1');
0: jdbc:luciddb:> INSERT INTO FOO VALUES (' 1x');
0: jdbc:luciddb:> INSERT INTO FOO VALUES (' 1 1');
0: jdbc:luciddb:> INSERT INTO FOO VALUES ('1 1');
0: jdbc:luciddb:> INSERT INTO FOO VALUES ('11');
0: jdbc:luciddb:> INSERT INTO FOO VALUES ('1234567890');
0: jdbc:luciddb:> INSERT INTO FOO VALUES ('123.456');
0: jdbc:luciddb:> SELECT c, ISINTEGER(c) FROM FOO ORDER BY c;
Error: From line 1, column 11 to line 1, column 22: No match found for function signature ISINTEGER(<CHARACTER>) (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> values (TOKEN('1 2 3', 3));
Error: From line 1, column 9 to line 1, column 25: No match found for function signature TOKEN(<CHARACTER>, <NUMERIC>) (state=,code=0)
0: jdbc:luciddb:> values (TOKEN('1 2  3', 3));
Error: From line 1, column 9 to line 1, column 26: No match found for function signature TOKEN(<CHARACTER>, <NUMERIC>) (state=,code=0)
0: jdbc:luciddb:> values (TOKEN('   1 2 3', 4));
Error: From line 1, column 9 to line 1, column 28: No match found for function signature TOKEN(<CHARACTER>, <NUMERIC>) (state=,code=0)
0: jdbc:luciddb:> values (TOKEN(null, 3));
Error: From line 1, column 15 to line 1, column 18: Illegal use of 'NULL' (state=,code=0)
0: jdbc:luciddb:> values (TOKEN('1 2 3', 4));
Error: From line 1, column 9 to line 1, column 25: No match found for function signature TOKEN(<CHARACTER>, <NUMERIC>) (state=,code=0)
0: jdbc:luciddb:> values (TOKEN('   1  2    3  ', 3));
Error: From line 1, column 9 to line 1, column 34: No match found for function signature TOKEN(<CHARACTER>, <NUMERIC>) (state=,code=0)
0: jdbc:luciddb:> values (TOKEN('   11  222    33333  ', 4));
Error: From line 1, column 9 to line 1, column 41: No match found for function signature TOKEN(<CHARACTER>, <NUMERIC>) (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Check title capping
0: jdbc:luciddb:> values (TITLE('This is a title of a book'));
Error: From line 1, column 9 to line 1, column 42: No match found for function signature TITLE(<CHARACTER>) (state=,code=0)
0: jdbc:luciddb:> values (TITLE('This IS a tiTLe of a book'));
Error: From line 1, column 9 to line 1, column 42: No match found for function signature TITLE(<CHARACTER>) (state=,code=0)
0: jdbc:luciddb:> values (TITLE('This is a TITLE Of A Book'));
Error: From line 1, column 9 to line 1, column 42: No match found for function signature TITLE(<CHARACTER>) (state=,code=0)
0: jdbc:luciddb:> values (TITLE('This is a title of (a) book'));
Error: From line 1, column 9 to line 1, column 44: No match found for function signature TITLE(<CHARACTER>) (state=,code=0)
0: jdbc:luciddb:> values (TITLE('This <is> [a] {title}+^#$&@%~~;:.,.,.,'' of a book'));
Error: From line 1, column 9 to line 1, column 67: No match found for function signature TITLE(<CHARACTER>) (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Check concatenation precision
0: jdbc:luciddb:> -- TODO: not sure what is System.Columns
0: jdbc:luciddb:> DROP TABLE BUG8574;
Error: DDL validation error near line 1, column 12: Reference to unknown table "BUG8574" (state=,code=0)
0: jdbc:luciddb:> CREATE TABLE BUG8574
. . . . . . . . > (
. . . . . . . . >     C1 CHAR(20),
. . . . . . . . >     C2 CHAR(10),
. . . . . . . . >     C3 COMPUTED (C1 || C2),
. . . . . . . . >     V1 VARCHAR(20),
. . . . . . . . >     V2 VARCHAR(10),
. . . . . . . . >     V3 COMPUTED (V1 || V2)
. . . . . . . . >     );
Error: org.eigenbase.sql.parser.SqlParseException: Encountered "C1" at line 1, column 75.
Was expecting:
    <UNSIGNED_INTEGER_LITERAL> ... (state=,code=0)
0: jdbc:luciddb:> SELECT SCHEMA_NAME,
. . . . . . . . >    TABLE_NAME,
. . . . . . . . >    COLUMN_NAME,
. . . . . . . . >    SQL_TYPE,
. . . . . . . . >    SQL_Q1,
. . . . . . . . >    SQL_Q2
. . . . . . . . > FROM SYSTEM.COLUMNS
. . . . . . . . > WHERE TABLE_NAME = 'BUG8574'
. . . . . . . . > ORDER BY COLUMN_NAME;
Error: org.eigenbase.sql.parser.SqlParseException: Encountered "SYSTEM" at line 1, column 91.
Was expecting one of:
    "LATERAL" ...
    "TABLE" ...
    "UNNEST" ...
    "(" ...
    <IDENTIFIER> ...
    <QUOTED_IDENTIFIER> ... (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Check precision of to_char
0: jdbc:luciddb:> CREATE TABLE bug9210
. . . . . . . . >    (
. . . . . . . . >     i1 TINYINT,
. . . . . . . . >     i2 SMALLINT,
. . . . . . . . >     i3 INTEGER,
. . . . . . . . >     i4 BIGINT,
. . . . . . . . >     i5 DECIMAL(15, 4),
. . . . . . . . >     i6 DECIMAL(5,3),
. . . . . . . . >     i7 DECIMAL(5,0)
. . . . . . . . >     );
0: jdbc:luciddb:> CREATE OR REPLACE VIEW
. . . . . . . . >    bug9210_view
. . . . . . . . >    (c1, c2, c3, c4, c5, c6, c7)
. . . . . . . . > AS
. . . . . . . . >    SELECT
. . . . . . . . >       to_char(i1),
. . . . . . . . >       to_char(i2),
. . . . . . . . >       to_char(i3),
. . . . . . . . >       to_char(i4),
. . . . . . . . >       to_char(i5),
. . . . . . . . >       to_char(i6),
. . . . . . . . >       to_char(i7)
. . . . . . . . >    FROM bug9210;
Error: From line 1, column 91 to line 1, column 101: No match found for function signature TO_CHAR(<NUMERIC>) (state=,code=0)
0: jdbc:luciddb:> SELECT table_name, column_name, sql_type, sql_Q1, sql_Q2
. . . . . . . . > FROM system.COLUMNS
. . . . . . . . > WHERE table_name = 'BUG9210_VIEW'
. . . . . . . . > ORDER BY *;
Error: org.eigenbase.sql.parser.SqlParseException: Encountered "system" at line 1, column 63.
Was expecting one of:
    "LATERAL" ...
    "TABLE" ...
    "UNNEST" ...
    "(" ...
    <IDENTIFIER> ...
    <QUOTED_IDENTIFIER> ... (state=,code=0)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- End test
0: jdbc:luciddb:> 
0: jdbc:luciddb:> !quit
