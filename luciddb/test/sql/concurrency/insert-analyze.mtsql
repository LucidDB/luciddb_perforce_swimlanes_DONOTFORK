@nolockstep

@setup
-- Test analyze table being run concurrently with an insert

  set schema 'concurrency';
  delete from t1;
  insert into t1 values (1),(2);
  delete from t2;
  insert into t2 values (5);
@end

-----------------------------------------------------------

-- make sure analyze runs now that the insert is finished
@thread cleanup
  @sync
  @sync
  analyze table concurrency.t1 compute statistics for all columns;
  analyze table concurrency.t2 compute statistics for all columns;
  select * from concurrency.t1;
  select * from concurrency.t2;
  delete from concurrency.t1;
  delete from concurrency.t2;
@end

-----------------------------------------------------------

@thread writer
  set schema 'concurrency';

  @sync
  insert into t1 values (sys_boot.mgmt.sleep(10000));
  @sync

@end

-----------------------------------------------------------

@thread analyze1
  set schema 'concurrency';

  @sync
  @sleep 1000
  analyze table t2 compute statistics for all columns;
  @sync

@end

-----------------------------------------------------------

-- This analyze statement should fail because it couldn't acquire an exclusive
-- (not a shared) lock.
@thread analyze2
  set schema 'concurrency';

  @sync
  @sleep 1000
  @err analyze table t1 compute statistics for all columns;
  @sync

@end
