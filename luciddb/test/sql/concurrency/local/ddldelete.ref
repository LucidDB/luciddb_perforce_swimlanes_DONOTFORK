-- setup
> set schema 's';
0 rows affected.
> create table t1m      ("kseq" bigint primary key,
> "k2" bigint,
> "k4" bigint,
> "k5" bigint,
> "k10" bigint,
> "k25" bigint,
> "k100" bigint,
> "k1k" bigint,
> "k10k" bigint,
> "k40k" bigint,
> "k100k" bigint,
> "k250k" bigint,
> "k500k" bigint);
0 rows affected.
> insert into t1m select * from bench1m;
1000000 rows affected.
-- end of setup

-- thread comp
> set schema 's';
0 rows affected.
> drop index k2idx;
0 rows affected.
> drop table t1m;
0 rows affected.
-- end of thread comp

-- thread w1
> set schema 's';
0 rows affected.
> create index k2idx on t1m("k2");
0 rows affected.
-- end of thread w1

-- thread w2
> set schema 's';
0 rows affected.
> explain plan for delete from t1m where "k2"=1;
+---------+
| column0 |
+---------+
| FennelToIteratorConverter |
|   LcsTableDeleteRel(table=[[LOCALDB, S, T1M]]) |
|     FennelCalcRel(expr#0..1=[{inputs}], expr#2=[1], expr#3=[=($t0, $t2)], expr#4=[CAST($t1):BIGINT NOT NULL], expr#5=[null], expr#6=[CAST($t5):VARBINARY(512)], rid=[$t4], descriptor=[$t6], segment=[$t6], $condition=[$t3]) |
|       LcsRowScanRel(table=[[LOCALDB, S, T1M]], projection=[[1, LCS_RID]], clustered indexes=[[SYS$CLUSTERED_INDEX$S$T1M$k2]]) |
+---------+

> select count(*) from t1m where "k2"=1;
+---------------------+
| EXPR$0              |
+---------------------+
| 499598              |
+---------------------+

> explain plan for delete from t1m where "k2"=1;
+---------+
| column0 |
+---------+
| FennelToIteratorConverter |
|   LcsTableDeleteRel(table=[[LOCALDB, S, T1M]]) |
|     FennelCalcRel(expr#0=[{inputs}], expr#1=[CAST($t0):BIGINT NOT NULL], expr#2=[null], expr#3=[CAST($t2):VARBINARY(512)], rid=[$t1], descriptor=[$t3], segment=[$t3]) |
|       LcsRowScanRel(table=[[LOCALDB, S, T1M]], projection=[[LCS_RID]], clustered indexes=[[SYS$CLUSTERED_INDEX$S$T1M$k10]]) |
|         LcsIndexSearchRel(table=[[LOCALDB, S, T1M]], index=[K2IDX], projection=[*], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]], startRidParamId=[0], rowLimitParamId=[0]) |
|           FennelValuesRel(tuples=[[{ _ISO-8859-1'[', 1, _ISO-8859-1']', 1 }]]) |
+---------+

> delete from t1m where "k2"=1;
499598 rows affected.
> select count(*) from t1m;
+---------------------+
| EXPR$0              |
+---------------------+
| 500402              |
+---------------------+

> explain plan for delete from t1m where "k2"=1;
+---------+
| column0 |
+---------+
| FennelToIteratorConverter |
|   LcsTableDeleteRel(table=[[LOCALDB, S, T1M]]) |
|     FennelCalcRel(expr#0=[{inputs}], expr#1=[CAST($t0):BIGINT NOT NULL], expr#2=[null], expr#3=[CAST($t2):VARBINARY(512)], rid=[$t1], descriptor=[$t3], segment=[$t3]) |
|       LcsRowScanRel(table=[[LOCALDB, S, T1M]], projection=[[LCS_RID]], clustered indexes=[[SYS$CLUSTERED_INDEX$S$T1M$k10]]) |
|         LcsIndexSearchRel(table=[[LOCALDB, S, T1M]], index=[K2IDX], projection=[*], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]], startRidParamId=[0], rowLimitParamId=[0]) |
|           FennelValuesRel(tuples=[[{ _ISO-8859-1'[', 1, _ISO-8859-1']', 1 }]]) |
+---------+

> select count(*) from t1m where "k2"=1;
+---------------------+
| EXPR$0              |
+---------------------+
| 0                   |
+---------------------+

-- end of thread w2

