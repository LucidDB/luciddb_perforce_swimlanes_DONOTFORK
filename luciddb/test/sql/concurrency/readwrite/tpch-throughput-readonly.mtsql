@nolockstep

@setup
  set schema 'rwconcur';
  
  --load tables
  insert into nation select * from "nation";
  insert into region select * from "region";
  insert into part select * from "part";
  insert into supplier select * from "supplier";
  insert into customer select * from "customer";
  insert into partsupp select * from "partsupp";
  insert into orders select * from "orders";
  insert into lineitem select * from "lineitem";
  insert into ordersu1 select * from "ordersu1";
  insert into lineitemu1 select * from "lineitemu1";
  insert into delete1 select * from "delete1";
 
  --create views for all threads (otherwise ddl errors)
  CREATE VIEW REVENUE0 (SUPPLIER_NO, TOTAL_REVENUE) AS
    SELECT L_SUPPKEY, SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT))
    FROM LINEITEM
    WHERE
        L_SHIPDATE >= DATE'1996-01-01' AND
        L_SHIPDATE < DATE'1996-04-01'
    GROUP BY L_SUPPKEY;

@end

-----------------------------------------------------------

@thread cleanup
  @sync
  @sync
    set schema 'rwconcur';
    truncate table Nation;
    truncate table Region;
    truncate table Part;
    truncate table Supplier;
    truncate table Customer;
    truncate table PartSupp;
    truncate table Orders;
    truncate table LineItem;

@end

-----------------------------------------------------------

@thread queries1

  set schema 'rwconcur';

  @sync

--
--3.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions

--set rowcount=10


SELECT L_ORDERKEY, SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS REVENUE,
        O_ORDERDATE, O_SHIPPRIORITY
FROM CUSTOMER, ORDERS, LINEITEM
WHERE
    C_MKTSEGMENT = 'BUILDING' AND
    C_CUSTKEY = O_CUSTKEY AND
    L_ORDERKEY = O_ORDERKEY AND
    O_ORDERDATE < DATE '1995-03-15' AND
    L_SHIPDATE > DATE '1995-03-15'
GROUP BY L_ORDERKEY, O_ORDERDATE, O_SHIPPRIORITY
ORDER BY REVENUE, O_ORDERDATE;


--
--18.sql
--


select
  c_name,
  c_custkey,
  o_orderkey,
  o_orderdate,
  o_totalprice,
  sum(l_quantity)
from
  customer,
  orders,
  lineitem
where
  o_orderkey in (
    select
      l_orderkey
    from
      lineitem
    group by
      l_orderkey 
    having
      sum(l_quantity) > 300
  )
  and c_custkey = o_custkey
  and o_orderkey = l_orderkey
group by
  c_name,
  c_custkey,
  o_orderkey,
  o_orderdate,
  o_totalprice
order by
  o_totalprice desc,
  o_orderdate;
--
--5.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT N_NAME, SUM(L_EXTENDEDPRICE * ( 1 - L_DISCOUNT)) AS REVENUE
FROM CUSTOMER, ORDERS, LINEITEM, SUPPLIER, NATION, REGION
WHERE
    C_CUSTKEY = O_CUSTKEY AND
    L_ORDERKEY = O_ORDERKEY AND
    L_SUPPKEY = S_SUPPKEY AND
    C_NATIONKEY = S_NATIONKEY AND
    S_NATIONKEY = N_NATIONKEY AND
    N_REGIONKEY = R_REGIONKEY AND
    R_NAME = 'ASIA' AND
    O_ORDERDATE >=  date '1994-01-01' AND
    O_ORDERDATE < DATE '1995-01-01'
        GROUP BY N_NAME
ORDER BY REVENUE ;

--
--11.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
    PS_PARTKEY, SUM(PS_SUPPLYCOST * PS_AVAILQTY) AS VAL
FROM
    PARTSUPP, SUPPLIER, NATION,
    (SELECT SUM(PS_SUPPLYCOST * PS_AVAILQTY) * 0.001000000 AS TMP
     FROM PARTSUPP, SUPPLIER, NATION
     WHERE PS_SUPPKEY = S_SUPPKEY AND
           S_NATIONKEY = N_NATIONKEY AND
           N_NAME = 'GERMANY') AS TEMPS
WHERE 
    PS_SUPPKEY = S_SUPPKEY AND 
    S_NATIONKEY = N_NATIONKEY AND
    N_NAME = 'GERMANY'
GROUP BY PS_PARTKEY
HAVING SUM(PS_SUPPLYCOST*PS_AVAILQTY) > SUM(TEMPS.TMP)/COUNT(*)
ORDER BY VAL;
-- ORDER BY VAL DESC;
--
--7.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT SUPP_NATION, CUST_NATION, YYEAR, SUM(VOLUME) AS REVENUE
FROM
    (SELECT 
        N1.N_NAME AS SUPP_NATION,
        N2.N_NAME AS CUST_NATION,
        SUBSTRING (CAST(L_SHIPDATE AS CHAR(10)) FROM 1 FOR 4) AS YYEAR,
        L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS VOLUME
    FROM SUPPLIER, LINEITEM, ORDERS, CUSTOMER, NATION N1, NATION N2
    WHERE
        S_SUPPKEY = L_SUPPKEY
        AND O_ORDERKEY = L_ORDERKEY
        AND C_CUSTKEY = O_CUSTKEY
        AND S_NATIONKEY = N1.N_NATIONKEY
        AND C_NATIONKEY = N2.N_NATIONKEY
        AND ((N1.N_NAME = 'FRANCE' AND N2.N_NAME = 'GERMANY')
                OR (N1.N_NAME = 'GERMANY' AND N2.N_NAME = 'FRANCE'))
        AND L_SHIPDATE BETWEEN DATE'1995-01-01' AND DATE'1996-12-31'
        ) AS SHIPPING
GROUP BY SUPP_NATION, CUST_NATION, YYEAR
ORDER BY SUPP_NATION, CUST_NATION, YYEAR;
--
--6.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT SUM(L_EXTENDEDPRICE * L_DISCOUNT) AS REVENUE
FROM LINEITEM
WHERE
    L_SHIPDATE >= DATE '1994-01-01' AND
    L_SHIPDATE < date '1995-01-01' AND
    L_DISCOUNT BETWEEN .06 - 0.01 AND .06 + 0.01 AND
    L_QUANTITY <  24;

--
--20.sql
--


select
  s_name,
  s_address
from
  supplier, nation
where
  s_suppkey in (
    select
      ps_suppkey
    from
      partsupp
    where
      ps_partkey in (
        select
          p_partkey
        from
          part
        where
          p_name like 'forest%'
      )
    and ps_availqty > (
      select
        0.5 * sum(l_quantity)
      from
        lineitem
      where
        l_partkey = ps_partkey
        and l_suppkey = ps_suppkey
        and l_shipdate >= date '1994-01-01'
        and l_shipdate < date '1995-01-01'
      )
    )
    and s_nationkey = n_nationkey
    and n_name = 'CANADA'
order by
  s_name;
--
--17.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT SUM(L_EXTENDEDPRICE) / 7.0 AS AVG_YEARLY
FROM LINEITEM L, PART,
     (SELECT L1.L_PARTKEY, (0.2 * AVG(L_QUANTITY)) AS AVGQTY 
      FROM LINEITEM L1
      GROUP BY L1.L_PARTKEY) AS TEMP
WHERE
    P_PARTKEY = L.L_PARTKEY AND
    P_BRAND = 'Brand#23' AND
    P_CONTAINER = 'MED BOX' AND
    P_PARTKEY = TEMP.L_PARTKEY AND
    L.L_QUANTITY < TEMP.AVGQTY;
--
--12.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
    L_SHIPMODE,
    SUM(CASE WHEN O_ORDERPRIORITY = '1-URGENT'
               OR O_ORDERPRIORITY = '2-HIGH'
                    THEN 1
                    ELSE 0
                END) AS HIGH_LINE_COUNT,
    SUM(CASE WHEN O_ORDERPRIORITY <> '1-URGENT'
               AND O_ORDERPRIORITY <> '2-HIGH'
                    THEN 1
                    ELSE 0
                END) AS LOW_LINE_COUNT
FROM ORDERS, LINEITEM
WHERE
       O_ORDERKEY = L_ORDERKEY
AND L_SHIPMODE IN ('MAIL', 'SHIP')
AND L_COMMITDATE < L_RECEIPTDATE
AND L_SHIPDATE < L_COMMITDATE
AND L_RECEIPTDATE >= DATE'1994-01-01'
AND L_RECEIPTDATE < DATE'1995-01-01'
GROUP BY L_SHIPMODE
ORDER BY L_SHIPMODE;
--
--16.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT P_BRAND, P_TYPE, P_SIZE, COUNT(DISTINCT PS_SUPPKEY) AS SUPPLIER_CNT
FROM PARTSUPP, PART, SUPPLIER
WHERE
        P_PARTKEY = PS_PARTKEY AND
        P_BRAND <> 'Brand#45' AND
        P_TYPE NOT LIKE 'MEDIUM POLISHED%' AND
        P_SIZE IN (49, 14, 23, 45, 19, 3, 36, 9) AND
        PS_SUPPKEY = S_SUPPKEY AND
        S_COMMENT NOT LIKE  '%Better Business Bureau%Complaints%'
GROUP BY P_BRAND, P_TYPE, P_SIZE
ORDER BY SUPPLIER_CNT, P_BRAND, P_TYPE, P_SIZE;
--ORDER BY SUPPLIER_CNT DESC, P_BRAND, P_TYPE, P_SIZE;
--
--15.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions


SELECT S_SUPPKEY, S_NAME, S_ADDRESS,  S_PHONE, TOTAL_REVENUE
FROM SUPPLIER, REVENUE0,
     (SELECT MAX(TOTAL_REVENUE) AS MAXREV FROM REVENUE0) AS TEMP
WHERE S_SUPPKEY = SUPPLIER_NO AND
      TOTAL_REVENUE = TEMP.MAXREV
ORDER BY S_SUPPKEY;

--
--13.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT YYEAR, SUM(REVENUE) AS REV
FROM
    (SELECT SUBSTRING(CAST(O_ORDERDATE AS CHAR(10)) FROM 1 FOR 4) AS YYEAR,
            L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS REVENUE
    FROM LINEITEM, ORDERS
    WHERE O_ORDERKEY = L_ORDERKEY
        AND O_CLERK = 'Clerk#000000088'
        AND L_RETURNFLAG = 'R'
    ) AS PERFORMANCE
GROUP BY YYEAR
ORDER BY YYEAR;
--
--10.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
        C_CUSTKEY,
        C_NAME,
        SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS REVENUE,
        C_ACCTBAL,
        N_NAME,
        C_ADDRESS,
        C_PHONE,
        C_COMMENT
FROM
        CUSTOMER,
        ORDERS,
        LINEITEM,
        NATION
WHERE
        C_CUSTKEY = O_CUSTKEY AND
        L_ORDERKEY = O_ORDERKEY AND
        O_ORDERDATE >= date '1993-10-01' AND
        O_ORDERDATE < DATE '1994-01-01' AND 
        L_RETURNFLAG = 'R' AND
        C_NATIONKEY = N_NATIONKEY
GROUP BY
        C_CUSTKEY,
        C_NAME,
        C_ACCTBAL,
        C_PHONE,
        N_NAME,
        C_ADDRESS,
        C_COMMENT
ORDER BY REVENUE
;
--
--2.sql
--


SELECT S.s_acctbal, S.s_name, n_name, PS.ps_partkey, P.p_mfgr,
       S.s_address, S.s_phone, S.s_comment
FROM Part P, Supplier S, Partsupp PS, Nation, Region,
     (SELECT PS1.ps_partkey, min(PS1.ps_supplycost) as mincost
      FROM Partsupp PS1, Supplier S1, Nation N1, Region R1
      WHERE PS1.ps_suppkey = S1.s_suppkey AND
            S1.s_nationkey = N1.n_nationkey AND
            N1.n_regionkey = R1.r_regionkey AND
            R1.r_name = 'EUROPE'
      GROUP BY PS1.ps_partkey) AS Temp
WHERE P.p_partkey = PS.ps_partkey AND
      S.s_suppkey = PS.ps_suppkey AND
      P.p_size = 15 AND
      P.p_type LIKE '%BRASS' AND
      S.s_nationkey = n_nationkey AND
      n_regionkey = r_regionkey AND
      PS.ps_partkey = Temp.ps_partkey AND
      PS.ps_supplycost = Temp.mincost
ORDER BY S.s_acctbal, n_name, S.s_name, PS.ps_partkey;
--
--8.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions

-- COULD NOT CAST TO FLOAT



SELECT YYEAR, CAST(SUM(CASE WHEN NATION = 'BRAZIL'
                               THEN VOLUME
                               ELSE 0
                      END) AS DECIMAL(19,4))*1.0000 / 
             CAST(SUM(VOLUME) AS DECIMAL(19,4)) AS MKT_SHARE
FROM (SELECT
        SUBSTRING (CAST(O_ORDERDATE AS CHAR(10)) FROM 1 FOR 4) AS YYEAR,
        L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS VOLUME,
        N2.N_NAME AS NATION
    FROM PART, SUPPLIER, LINEITEM, ORDERS, CUSTOMER, NATION N1, NATION N2,
         REGION
    WHERE P_PARTKEY = L_PARTKEY
        AND S_SUPPKEY = L_SUPPKEY
        AND L_ORDERKEY = O_ORDERKEY
        AND O_CUSTKEY = C_CUSTKEY
        AND C_NATIONKEY = N1.N_NATIONKEY
        AND N1.N_REGIONKEY = R_REGIONKEY
        AND R_NAME = 'AMERICA'
        AND S_NATIONKEY = N2.N_NATIONKEY
        AND O_ORDERDATE BETWEEN DATE'1995-01-01' AND DATE'1996-12-31'
        AND P_TYPE = 'ECONOMY ANODIZED STEEL') AS ALL_NATIONS
GROUP BY YYEAR
ORDER BY YYEAR;
--
--14.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
    100.00 * SUM(CASE WHEN P_TYPE LIKE 'PROMO%'
                   THEN L_EXTENDEDPRICE * (1 - L_DISCOUNT)
                   ELSE 0
                END) / SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT))
                AS PROMO_REVENUE
FROM LINEITEM, PART
WHERE L_PARTKEY = P_PARTKEY
    AND L_SHIPDATE >= DATE'1995-09-01'
    AND L_SHIPDATE < DATE'1995-10-01';
--
--9.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions

 

SELECT NATION, YYEAR, SUM(AMOUNT) AS SUM_PROFIT
FROM (SELECT N_NAME AS NATION,  
      SUBSTRING(CAST(O_ORDERDATE AS VARCHAR(10)) FROM 1 FOR 4) AS YYEAR,
      L_EXTENDEDPRICE * (1 - L_DISCOUNT) - PS_SUPPLYCOST * L_QUANTITY AS AMOUNT
        FROM PART, SUPPLIER, LINEITEM, PARTSUPP, ORDERS, NATION
        WHERE S_SUPPKEY = L_SUPPKEY
               AND PS_SUPPKEY = L_SUPPKEY
               AND PS_PARTKEY = L_PARTKEY
               AND P_PARTKEY = L_PARTKEY
               AND O_ORDERKEY = L_ORDERKEY
               AND S_NATIONKEY = N_NATIONKEY
               AND P_NAME LIKE '%green%'
      ) AS PROFIT
GROUP BY NATION, YYEAR
ORDER BY NATION, YYEAR;
--ORDER BY NATION, YEAR DESC;
--
--1.sql
--


SELECT L_RETURNFLAG, L_LINESTATUS, SUM(L_QUANTITY) AS SUM_QTY,
 SUM(L_EXTENDEDPRICE) AS SUM_BASE_PRICE,
 SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS SUM_DISC_PRICE,
 SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT) * (1 + L_TAX)) AS SUM_CHARGE,
 AVG(L_QUANTITY) AS AVG_QTY, AVG(L_EXTENDEDPRICE) AS AVG_PRICE,
 AVG(L_DISCOUNT) AS AVG_DISC, COUNT(*) AS COUNT_ORDER
FROM LINEITEM
WHERE L_SHIPDATE <=  DATE '1998-9-02'
GROUP BY L_RETURNFLAG, L_LINESTATUS
ORDER BY L_RETURNFLAG, L_LINESTATUS;

--
--4.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT O_ORDERPRIORITY, COUNT(*) AS ORDER_COUNT
FROM ORDERS,
     (SELECT L_ORDERKEY
      FROM LINEITEM
      WHERE L_COMMITDATE < L_RECEIPTDATE
      GROUP BY L_ORDERKEY) AS TEMP
WHERE
    O_ORDERDATE >= DATE'1993-07-01' AND
    O_ORDERDATE < DATE'1993-10-01' AND
    O_ORDERKEY = TEMP.L_ORDERKEY
GROUP BY O_ORDERPRIORITY
ORDER BY O_ORDERPRIORITY;




  @sync

@end

-----------------------------------------------------------

@thread queries2

  set schema 'rwconcur';

  @sync

--
--6.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT SUM(L_EXTENDEDPRICE * L_DISCOUNT) AS REVENUE
FROM LINEITEM
WHERE
    L_SHIPDATE >= DATE '1994-01-01' AND
    L_SHIPDATE < date '1995-01-01' AND
    L_DISCOUNT BETWEEN .06 - 0.01 AND .06 + 0.01 AND
    L_QUANTITY <  24;

--
--17.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT SUM(L_EXTENDEDPRICE) / 7.0 AS AVG_YEARLY
FROM LINEITEM L, PART,
     (SELECT L1.L_PARTKEY, (0.2 * AVG(L_QUANTITY)) AS AVGQTY 
      FROM LINEITEM L1
      GROUP BY L1.L_PARTKEY) AS TEMP
WHERE
    P_PARTKEY = L.L_PARTKEY AND
    P_BRAND = 'Brand#23' AND
    P_CONTAINER = 'MED BOX' AND
    P_PARTKEY = TEMP.L_PARTKEY AND
    L.L_QUANTITY < TEMP.AVGQTY;
--
--14.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
    100.00 * SUM(CASE WHEN P_TYPE LIKE 'PROMO%'
                   THEN L_EXTENDEDPRICE * (1 - L_DISCOUNT)
                   ELSE 0
                END) / SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT))
                AS PROMO_REVENUE
FROM LINEITEM, PART
WHERE L_PARTKEY = P_PARTKEY
    AND L_SHIPDATE >= DATE'1995-09-01'
    AND L_SHIPDATE < DATE'1995-10-01';
--
--16.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT P_BRAND, P_TYPE, P_SIZE, COUNT(DISTINCT PS_SUPPKEY) AS SUPPLIER_CNT
FROM PARTSUPP, PART, SUPPLIER
WHERE
        P_PARTKEY = PS_PARTKEY AND
        P_BRAND <> 'Brand#45' AND
        P_TYPE NOT LIKE 'MEDIUM POLISHED%' AND
        P_SIZE IN (49, 14, 23, 45, 19, 3, 36, 9) AND
        PS_SUPPKEY = S_SUPPKEY AND
        S_COMMENT NOT LIKE  '%Better Business Bureau%Complaints%'
GROUP BY P_BRAND, P_TYPE, P_SIZE
ORDER BY SUPPLIER_CNT, P_BRAND, P_TYPE, P_SIZE;
--ORDER BY SUPPLIER_CNT DESC, P_BRAND, P_TYPE, P_SIZE;
--
--10.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
        C_CUSTKEY,
        C_NAME,
        SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS REVENUE,
        C_ACCTBAL,
        N_NAME,
        C_ADDRESS,
        C_PHONE,
        C_COMMENT
FROM
        CUSTOMER,
        ORDERS,
        LINEITEM,
        NATION
WHERE
        C_CUSTKEY = O_CUSTKEY AND
        L_ORDERKEY = O_ORDERKEY AND
        O_ORDERDATE >= date '1993-10-01' AND
        O_ORDERDATE < DATE '1994-01-01' AND 
        L_RETURNFLAG = 'R' AND
        C_NATIONKEY = N_NATIONKEY
GROUP BY
        C_CUSTKEY,
        C_NAME,
        C_ACCTBAL,
        C_PHONE,
        N_NAME,
        C_ADDRESS,
        C_COMMENT
ORDER BY REVENUE
;
--
--9.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions

 

SELECT NATION, YYEAR, SUM(AMOUNT) AS SUM_PROFIT
FROM (SELECT N_NAME AS NATION,  
      SUBSTRING(CAST(O_ORDERDATE AS VARCHAR(10)) FROM 1 FOR 4) AS YYEAR,
      L_EXTENDEDPRICE * (1 - L_DISCOUNT) - PS_SUPPLYCOST * L_QUANTITY AS AMOUNT
        FROM PART, SUPPLIER, LINEITEM, PARTSUPP, ORDERS, NATION
        WHERE S_SUPPKEY = L_SUPPKEY
               AND PS_SUPPKEY = L_SUPPKEY
               AND PS_PARTKEY = L_PARTKEY
               AND P_PARTKEY = L_PARTKEY
               AND O_ORDERKEY = L_ORDERKEY
               AND S_NATIONKEY = N_NATIONKEY
               AND P_NAME LIKE '%green%'
      ) AS PROFIT
GROUP BY NATION, YYEAR
ORDER BY NATION, YYEAR;
--ORDER BY NATION, YEAR DESC;
--
--2.sql
--


SELECT S.s_acctbal, S.s_name, n_name, PS.ps_partkey, P.p_mfgr,
       S.s_address, S.s_phone, S.s_comment
FROM Part P, Supplier S, Partsupp PS, Nation, Region,
     (SELECT PS1.ps_partkey, min(PS1.ps_supplycost) as mincost
      FROM Partsupp PS1, Supplier S1, Nation N1, Region R1
      WHERE PS1.ps_suppkey = S1.s_suppkey AND
            S1.s_nationkey = N1.n_nationkey AND
            N1.n_regionkey = R1.r_regionkey AND
            R1.r_name = 'EUROPE'
      GROUP BY PS1.ps_partkey) AS Temp
WHERE P.p_partkey = PS.ps_partkey AND
      S.s_suppkey = PS.ps_suppkey AND
      P.p_size = 15 AND
      P.p_type LIKE '%BRASS' AND
      S.s_nationkey = n_nationkey AND
      n_regionkey = r_regionkey AND
      PS.ps_partkey = Temp.ps_partkey AND
      PS.ps_supplycost = Temp.mincost
ORDER BY S.s_acctbal, n_name, S.s_name, PS.ps_partkey;
--
--15.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions


SELECT S_SUPPKEY, S_NAME, S_ADDRESS,  S_PHONE, TOTAL_REVENUE
FROM SUPPLIER, REVENUE0,
     (SELECT MAX(TOTAL_REVENUE) AS MAXREV FROM REVENUE0) AS TEMP
WHERE S_SUPPKEY = SUPPLIER_NO AND
      TOTAL_REVENUE = TEMP.MAXREV
ORDER BY S_SUPPKEY;

--
--8.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions

-- COULD NOT CAST TO FLOAT



SELECT YYEAR, CAST(SUM(CASE WHEN NATION = 'BRAZIL'
                               THEN VOLUME
                               ELSE 0
                      END) AS DECIMAL(19,4))*1.0000 / 
             CAST(SUM(VOLUME) AS DECIMAL(19,4)) AS MKT_SHARE
FROM (SELECT
        SUBSTRING (CAST(O_ORDERDATE AS CHAR(10)) FROM 1 FOR 4) AS YYEAR,
        L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS VOLUME,
        N2.N_NAME AS NATION
    FROM PART, SUPPLIER, LINEITEM, ORDERS, CUSTOMER, NATION N1, NATION N2,
         REGION
    WHERE P_PARTKEY = L_PARTKEY
        AND S_SUPPKEY = L_SUPPKEY
        AND L_ORDERKEY = O_ORDERKEY
        AND O_CUSTKEY = C_CUSTKEY
        AND C_NATIONKEY = N1.N_NATIONKEY
        AND N1.N_REGIONKEY = R_REGIONKEY
        AND R_NAME = 'AMERICA'
        AND S_NATIONKEY = N2.N_NATIONKEY
        AND O_ORDERDATE BETWEEN DATE'1995-01-01' AND DATE'1996-12-31'
        AND P_TYPE = 'ECONOMY ANODIZED STEEL') AS ALL_NATIONS
GROUP BY YYEAR
ORDER BY YYEAR;
--
--5.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT N_NAME, SUM(L_EXTENDEDPRICE * ( 1 - L_DISCOUNT)) AS REVENUE
FROM CUSTOMER, ORDERS, LINEITEM, SUPPLIER, NATION, REGION
WHERE
    C_CUSTKEY = O_CUSTKEY AND
    L_ORDERKEY = O_ORDERKEY AND
    L_SUPPKEY = S_SUPPKEY AND
    C_NATIONKEY = S_NATIONKEY AND
    S_NATIONKEY = N_NATIONKEY AND
    N_REGIONKEY = R_REGIONKEY AND
    R_NAME = 'ASIA' AND
    O_ORDERDATE >=  date '1994-01-01' AND
    O_ORDERDATE < DATE '1995-01-01'
        GROUP BY N_NAME
ORDER BY REVENUE ;

--
--12.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
    L_SHIPMODE,
    SUM(CASE WHEN O_ORDERPRIORITY = '1-URGENT'
               OR O_ORDERPRIORITY = '2-HIGH'
                    THEN 1
                    ELSE 0
                END) AS HIGH_LINE_COUNT,
    SUM(CASE WHEN O_ORDERPRIORITY <> '1-URGENT'
               AND O_ORDERPRIORITY <> '2-HIGH'
                    THEN 1
                    ELSE 0
                END) AS LOW_LINE_COUNT
FROM ORDERS, LINEITEM
WHERE
       O_ORDERKEY = L_ORDERKEY
AND L_SHIPMODE IN ('MAIL', 'SHIP')
AND L_COMMITDATE < L_RECEIPTDATE
AND L_SHIPDATE < L_COMMITDATE
AND L_RECEIPTDATE >= DATE'1994-01-01'
AND L_RECEIPTDATE < DATE'1995-01-01'
GROUP BY L_SHIPMODE
ORDER BY L_SHIPMODE;
--
--7.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT SUPP_NATION, CUST_NATION, YYEAR, SUM(VOLUME) AS REVENUE
FROM
    (SELECT 
        N1.N_NAME AS SUPP_NATION,
        N2.N_NAME AS CUST_NATION,
        SUBSTRING (CAST(L_SHIPDATE AS CHAR(10)) FROM 1 FOR 4) AS YYEAR,
        L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS VOLUME
    FROM SUPPLIER, LINEITEM, ORDERS, CUSTOMER, NATION N1, NATION N2
    WHERE
        S_SUPPKEY = L_SUPPKEY
        AND O_ORDERKEY = L_ORDERKEY
        AND C_CUSTKEY = O_CUSTKEY
        AND S_NATIONKEY = N1.N_NATIONKEY
        AND C_NATIONKEY = N2.N_NATIONKEY
        AND ((N1.N_NAME = 'FRANCE' AND N2.N_NAME = 'GERMANY')
                OR (N1.N_NAME = 'GERMANY' AND N2.N_NAME = 'FRANCE'))
        AND L_SHIPDATE BETWEEN DATE'1995-01-01' AND DATE'1996-12-31'
        ) AS SHIPPING
GROUP BY SUPP_NATION, CUST_NATION, YYEAR
ORDER BY SUPP_NATION, CUST_NATION, YYEAR;
--
--13.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT YYEAR, SUM(REVENUE) AS REV
FROM
    (SELECT SUBSTRING(CAST(O_ORDERDATE AS CHAR(10)) FROM 1 FOR 4) AS YYEAR,
            L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS REVENUE
    FROM LINEITEM, ORDERS
    WHERE O_ORDERKEY = L_ORDERKEY
        AND O_CLERK = 'Clerk#000000088'
        AND L_RETURNFLAG = 'R'
    ) AS PERFORMANCE
GROUP BY YYEAR
ORDER BY YYEAR;
--
--18.sql
--


select
  c_name,
  c_custkey,
  o_orderkey,
  o_orderdate,
  o_totalprice,
  sum(l_quantity)
from
  customer,
  orders,
  lineitem
where
  o_orderkey in (
    select
      l_orderkey
    from
      lineitem
    group by
      l_orderkey 
    having
      sum(l_quantity) > 300
  )
  and c_custkey = o_custkey
  and o_orderkey = l_orderkey
group by
  c_name,
  c_custkey,
  o_orderkey,
  o_orderdate,
  o_totalprice
order by
  o_totalprice desc,
  o_orderdate;
--
--1.sql
--


SELECT L_RETURNFLAG, L_LINESTATUS, SUM(L_QUANTITY) AS SUM_QTY,
 SUM(L_EXTENDEDPRICE) AS SUM_BASE_PRICE,
 SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS SUM_DISC_PRICE,
 SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT) * (1 + L_TAX)) AS SUM_CHARGE,
 AVG(L_QUANTITY) AS AVG_QTY, AVG(L_EXTENDEDPRICE) AS AVG_PRICE,
 AVG(L_DISCOUNT) AS AVG_DISC, COUNT(*) AS COUNT_ORDER
FROM LINEITEM
WHERE L_SHIPDATE <=  DATE '1998-9-02'
GROUP BY L_RETURNFLAG, L_LINESTATUS
ORDER BY L_RETURNFLAG, L_LINESTATUS;

--
--4.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT O_ORDERPRIORITY, COUNT(*) AS ORDER_COUNT
FROM ORDERS,
     (SELECT L_ORDERKEY
      FROM LINEITEM
      WHERE L_COMMITDATE < L_RECEIPTDATE
      GROUP BY L_ORDERKEY) AS TEMP
WHERE
    O_ORDERDATE >= DATE'1993-07-01' AND
    O_ORDERDATE < DATE'1993-10-01' AND
    O_ORDERKEY = TEMP.L_ORDERKEY
GROUP BY O_ORDERPRIORITY
ORDER BY O_ORDERPRIORITY;


--
--20.sql
--


select
  s_name,
  s_address
from
  supplier, nation
where
  s_suppkey in (
    select
      ps_suppkey
    from
      partsupp
    where
      ps_partkey in (
        select
          p_partkey
        from
          part
        where
          p_name like 'forest%'
      )
    and ps_availqty > (
      select
        0.5 * sum(l_quantity)
      from
        lineitem
      where
        l_partkey = ps_partkey
        and l_suppkey = ps_suppkey
        and l_shipdate >= date '1994-01-01'
        and l_shipdate < date '1995-01-01'
      )
    )
    and s_nationkey = n_nationkey
    and n_name = 'CANADA'
order by
  s_name;
--
--3.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions

--set rowcount=10


SELECT L_ORDERKEY, SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS REVENUE,
        O_ORDERDATE, O_SHIPPRIORITY
FROM CUSTOMER, ORDERS, LINEITEM
WHERE
    C_MKTSEGMENT = 'BUILDING' AND
    C_CUSTKEY = O_CUSTKEY AND
    L_ORDERKEY = O_ORDERKEY AND
    O_ORDERDATE < DATE '1995-03-15' AND
    L_SHIPDATE > DATE '1995-03-15'
GROUP BY L_ORDERKEY, O_ORDERDATE, O_SHIPPRIORITY
ORDER BY REVENUE, O_ORDERDATE;


--
--11.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
    PS_PARTKEY, SUM(PS_SUPPLYCOST * PS_AVAILQTY) AS VAL
FROM
    PARTSUPP, SUPPLIER, NATION,
    (SELECT SUM(PS_SUPPLYCOST * PS_AVAILQTY) * 0.001000000 AS TMP
     FROM PARTSUPP, SUPPLIER, NATION
     WHERE PS_SUPPKEY = S_SUPPKEY AND
           S_NATIONKEY = N_NATIONKEY AND
           N_NAME = 'GERMANY') AS TEMPS
WHERE 
    PS_SUPPKEY = S_SUPPKEY AND 
    S_NATIONKEY = N_NATIONKEY AND
    N_NAME = 'GERMANY'
GROUP BY PS_PARTKEY
HAVING SUM(PS_SUPPLYCOST*PS_AVAILQTY) > SUM(TEMPS.TMP)/COUNT(*)
ORDER BY VAL;
-- ORDER BY VAL DESC;


  @sync

@end

-----------------------------------------------------------

@thread queries3

  set schema 'rwconcur';

  @sync

--
--8.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions

-- COULD NOT CAST TO FLOAT



SELECT YYEAR, CAST(SUM(CASE WHEN NATION = 'BRAZIL'
                               THEN VOLUME
                               ELSE 0
                      END) AS DECIMAL(19,4))*1.0000 / 
             CAST(SUM(VOLUME) AS DECIMAL(19,4)) AS MKT_SHARE
FROM (SELECT
        SUBSTRING (CAST(O_ORDERDATE AS CHAR(10)) FROM 1 FOR 4) AS YYEAR,
        L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS VOLUME,
        N2.N_NAME AS NATION
    FROM PART, SUPPLIER, LINEITEM, ORDERS, CUSTOMER, NATION N1, NATION N2,
         REGION
    WHERE P_PARTKEY = L_PARTKEY
        AND S_SUPPKEY = L_SUPPKEY
        AND L_ORDERKEY = O_ORDERKEY
        AND O_CUSTKEY = C_CUSTKEY
        AND C_NATIONKEY = N1.N_NATIONKEY
        AND N1.N_REGIONKEY = R_REGIONKEY
        AND R_NAME = 'AMERICA'
        AND S_NATIONKEY = N2.N_NATIONKEY
        AND O_ORDERDATE BETWEEN DATE'1995-01-01' AND DATE'1996-12-31'
        AND P_TYPE = 'ECONOMY ANODIZED STEEL') AS ALL_NATIONS
GROUP BY YYEAR
ORDER BY YYEAR;
--
--5.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT N_NAME, SUM(L_EXTENDEDPRICE * ( 1 - L_DISCOUNT)) AS REVENUE
FROM CUSTOMER, ORDERS, LINEITEM, SUPPLIER, NATION, REGION
WHERE
    C_CUSTKEY = O_CUSTKEY AND
    L_ORDERKEY = O_ORDERKEY AND
    L_SUPPKEY = S_SUPPKEY AND
    C_NATIONKEY = S_NATIONKEY AND
    S_NATIONKEY = N_NATIONKEY AND
    N_REGIONKEY = R_REGIONKEY AND
    R_NAME = 'ASIA' AND
    O_ORDERDATE >=  date '1994-01-01' AND
    O_ORDERDATE < DATE '1995-01-01'
        GROUP BY N_NAME
ORDER BY REVENUE ;

--
--4.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT O_ORDERPRIORITY, COUNT(*) AS ORDER_COUNT
FROM ORDERS,
     (SELECT L_ORDERKEY
      FROM LINEITEM
      WHERE L_COMMITDATE < L_RECEIPTDATE
      GROUP BY L_ORDERKEY) AS TEMP
WHERE
    O_ORDERDATE >= DATE'1993-07-01' AND
    O_ORDERDATE < DATE'1993-10-01' AND
    O_ORDERKEY = TEMP.L_ORDERKEY
GROUP BY O_ORDERPRIORITY
ORDER BY O_ORDERPRIORITY;


--
--6.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT SUM(L_EXTENDEDPRICE * L_DISCOUNT) AS REVENUE
FROM LINEITEM
WHERE
    L_SHIPDATE >= DATE '1994-01-01' AND
    L_SHIPDATE < date '1995-01-01' AND
    L_DISCOUNT BETWEEN .06 - 0.01 AND .06 + 0.01 AND
    L_QUANTITY <  24;

--
--17.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT SUM(L_EXTENDEDPRICE) / 7.0 AS AVG_YEARLY
FROM LINEITEM L, PART,
     (SELECT L1.L_PARTKEY, (0.2 * AVG(L_QUANTITY)) AS AVGQTY 
      FROM LINEITEM L1
      GROUP BY L1.L_PARTKEY) AS TEMP
WHERE
    P_PARTKEY = L.L_PARTKEY AND
    P_BRAND = 'Brand#23' AND
    P_CONTAINER = 'MED BOX' AND
    P_PARTKEY = TEMP.L_PARTKEY AND
    L.L_QUANTITY < TEMP.AVGQTY;
--
--7.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT SUPP_NATION, CUST_NATION, YYEAR, SUM(VOLUME) AS REVENUE
FROM
    (SELECT 
        N1.N_NAME AS SUPP_NATION,
        N2.N_NAME AS CUST_NATION,
        SUBSTRING (CAST(L_SHIPDATE AS CHAR(10)) FROM 1 FOR 4) AS YYEAR,
        L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS VOLUME
    FROM SUPPLIER, LINEITEM, ORDERS, CUSTOMER, NATION N1, NATION N2
    WHERE
        S_SUPPKEY = L_SUPPKEY
        AND O_ORDERKEY = L_ORDERKEY
        AND C_CUSTKEY = O_CUSTKEY
        AND S_NATIONKEY = N1.N_NATIONKEY
        AND C_NATIONKEY = N2.N_NATIONKEY
        AND ((N1.N_NAME = 'FRANCE' AND N2.N_NAME = 'GERMANY')
                OR (N1.N_NAME = 'GERMANY' AND N2.N_NAME = 'FRANCE'))
        AND L_SHIPDATE BETWEEN DATE'1995-01-01' AND DATE'1996-12-31'
        ) AS SHIPPING
GROUP BY SUPP_NATION, CUST_NATION, YYEAR
ORDER BY SUPP_NATION, CUST_NATION, YYEAR;
--
--1.sql
--


SELECT L_RETURNFLAG, L_LINESTATUS, SUM(L_QUANTITY) AS SUM_QTY,
 SUM(L_EXTENDEDPRICE) AS SUM_BASE_PRICE,
 SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS SUM_DISC_PRICE,
 SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT) * (1 + L_TAX)) AS SUM_CHARGE,
 AVG(L_QUANTITY) AS AVG_QTY, AVG(L_EXTENDEDPRICE) AS AVG_PRICE,
 AVG(L_DISCOUNT) AS AVG_DISC, COUNT(*) AS COUNT_ORDER
FROM LINEITEM
WHERE L_SHIPDATE <=  DATE '1998-9-02'
GROUP BY L_RETURNFLAG, L_LINESTATUS
ORDER BY L_RETURNFLAG, L_LINESTATUS;

--
--18.sql
--


select
  c_name,
  c_custkey,
  o_orderkey,
  o_orderdate,
  o_totalprice,
  sum(l_quantity)
from
  customer,
  orders,
  lineitem
where
  o_orderkey in (
    select
      l_orderkey
    from
      lineitem
    group by
      l_orderkey 
    having
      sum(l_quantity) > 300
  )
  and c_custkey = o_custkey
  and o_orderkey = l_orderkey
group by
  c_name,
  c_custkey,
  o_orderkey,
  o_orderdate,
  o_totalprice
order by
  o_totalprice desc,
  o_orderdate;
--
--14.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
    100.00 * SUM(CASE WHEN P_TYPE LIKE 'PROMO%'
                   THEN L_EXTENDEDPRICE * (1 - L_DISCOUNT)
                   ELSE 0
                END) / SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT))
                AS PROMO_REVENUE
FROM LINEITEM, PART
WHERE L_PARTKEY = P_PARTKEY
    AND L_SHIPDATE >= DATE'1995-09-01'
    AND L_SHIPDATE < DATE'1995-10-01';
--
--9.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions

 

SELECT NATION, YYEAR, SUM(AMOUNT) AS SUM_PROFIT
FROM (SELECT N_NAME AS NATION,  
      SUBSTRING(CAST(O_ORDERDATE AS VARCHAR(10)) FROM 1 FOR 4) AS YYEAR,
      L_EXTENDEDPRICE * (1 - L_DISCOUNT) - PS_SUPPLYCOST * L_QUANTITY AS AMOUNT
        FROM PART, SUPPLIER, LINEITEM, PARTSUPP, ORDERS, NATION
        WHERE S_SUPPKEY = L_SUPPKEY
               AND PS_SUPPKEY = L_SUPPKEY
               AND PS_PARTKEY = L_PARTKEY
               AND P_PARTKEY = L_PARTKEY
               AND O_ORDERKEY = L_ORDERKEY
               AND S_NATIONKEY = N_NATIONKEY
               AND P_NAME LIKE '%green%'
      ) AS PROFIT
GROUP BY NATION, YYEAR
ORDER BY NATION, YYEAR;
--ORDER BY NATION, YEAR DESC;
--
--10.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
        C_CUSTKEY,
        C_NAME,
        SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS REVENUE,
        C_ACCTBAL,
        N_NAME,
        C_ADDRESS,
        C_PHONE,
        C_COMMENT
FROM
        CUSTOMER,
        ORDERS,
        LINEITEM,
        NATION
WHERE
        C_CUSTKEY = O_CUSTKEY AND
        L_ORDERKEY = O_ORDERKEY AND
        O_ORDERDATE >= date '1993-10-01' AND
        O_ORDERDATE < DATE '1994-01-01' AND 
        L_RETURNFLAG = 'R' AND
        C_NATIONKEY = N_NATIONKEY
GROUP BY
        C_CUSTKEY,
        C_NAME,
        C_ACCTBAL,
        C_PHONE,
        N_NAME,
        C_ADDRESS,
        C_COMMENT
ORDER BY REVENUE
;
--
--15.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT S_SUPPKEY, S_NAME, S_ADDRESS,  S_PHONE, TOTAL_REVENUE
FROM SUPPLIER, REVENUE0,
     (SELECT MAX(TOTAL_REVENUE) AS MAXREV FROM REVENUE0) AS TEMP
WHERE S_SUPPKEY = SUPPLIER_NO AND
      TOTAL_REVENUE = TEMP.MAXREV
ORDER BY S_SUPPKEY;

--
--11.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
    PS_PARTKEY, SUM(PS_SUPPLYCOST * PS_AVAILQTY) AS VAL
FROM
    PARTSUPP, SUPPLIER, NATION,
    (SELECT SUM(PS_SUPPLYCOST * PS_AVAILQTY) * 0.001000000 AS TMP
     FROM PARTSUPP, SUPPLIER, NATION
     WHERE PS_SUPPKEY = S_SUPPKEY AND
           S_NATIONKEY = N_NATIONKEY AND
           N_NAME = 'GERMANY') AS TEMPS
WHERE 
    PS_SUPPKEY = S_SUPPKEY AND 
    S_NATIONKEY = N_NATIONKEY AND
    N_NAME = 'GERMANY'
GROUP BY PS_PARTKEY
HAVING SUM(PS_SUPPLYCOST*PS_AVAILQTY) > SUM(TEMPS.TMP)/COUNT(*)
ORDER BY VAL;
-- ORDER BY VAL DESC;
--
--20.sql
--


select
  s_name,
  s_address
from
  supplier, nation
where
  s_suppkey in (
    select
      ps_suppkey
    from
      partsupp
    where
      ps_partkey in (
        select
          p_partkey
        from
          part
        where
          p_name like 'forest%'
      )
    and ps_availqty > (
      select
        0.5 * sum(l_quantity)
      from
        lineitem
      where
        l_partkey = ps_partkey
        and l_suppkey = ps_suppkey
        and l_shipdate >= date '1994-01-01'
        and l_shipdate < date '1995-01-01'
      )
    )
    and s_nationkey = n_nationkey
    and n_name = 'CANADA'
order by
  s_name;
--
--2.sql
--


SELECT S.s_acctbal, S.s_name, n_name, PS.ps_partkey, P.p_mfgr,
       S.s_address, S.s_phone, S.s_comment
FROM Part P, Supplier S, Partsupp PS, Nation, Region,
     (SELECT PS1.ps_partkey, min(PS1.ps_supplycost) as mincost
      FROM Partsupp PS1, Supplier S1, Nation N1, Region R1
      WHERE PS1.ps_suppkey = S1.s_suppkey AND
            S1.s_nationkey = N1.n_nationkey AND
            N1.n_regionkey = R1.r_regionkey AND
            R1.r_name = 'EUROPE'
      GROUP BY PS1.ps_partkey) AS Temp
WHERE P.p_partkey = PS.ps_partkey AND
      S.s_suppkey = PS.ps_suppkey AND
      P.p_size = 15 AND
      P.p_type LIKE '%BRASS' AND
      S.s_nationkey = n_nationkey AND
      n_regionkey = r_regionkey AND
      PS.ps_partkey = Temp.ps_partkey AND
      PS.ps_supplycost = Temp.mincost
ORDER BY S.s_acctbal, n_name, S.s_name, PS.ps_partkey;
--
--13.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT YYEAR, SUM(REVENUE) AS REV
FROM
    (SELECT SUBSTRING(CAST(O_ORDERDATE AS CHAR(10)) FROM 1 FOR 4) AS YYEAR,
            L_EXTENDEDPRICE * (1 - L_DISCOUNT) AS REVENUE
    FROM LINEITEM, ORDERS
    WHERE O_ORDERKEY = L_ORDERKEY
        AND O_CLERK = 'Clerk#000000088'
        AND L_RETURNFLAG = 'R'
    ) AS PERFORMANCE
GROUP BY YYEAR
ORDER BY YYEAR;
--
--16.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT P_BRAND, P_TYPE, P_SIZE, COUNT(DISTINCT PS_SUPPKEY) AS SUPPLIER_CNT
FROM PARTSUPP, PART, SUPPLIER
WHERE
        P_PARTKEY = PS_PARTKEY AND
        P_BRAND <> 'Brand#45' AND
        P_TYPE NOT LIKE 'MEDIUM POLISHED%' AND
        P_SIZE IN (49, 14, 23, 45, 19, 3, 36, 9) AND
        PS_SUPPKEY = S_SUPPKEY AND
        S_COMMENT NOT LIKE  '%Better Business Bureau%Complaints%'
GROUP BY P_BRAND, P_TYPE, P_SIZE
ORDER BY SUPPLIER_CNT, P_BRAND, P_TYPE, P_SIZE;
--ORDER BY SUPPLIER_CNT DESC, P_BRAND, P_TYPE, P_SIZE;
--
--12.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions



SELECT
    L_SHIPMODE,
    SUM(CASE WHEN O_ORDERPRIORITY = '1-URGENT'
               OR O_ORDERPRIORITY = '2-HIGH'
                    THEN 1
                    ELSE 0
                END) AS HIGH_LINE_COUNT,
    SUM(CASE WHEN O_ORDERPRIORITY <> '1-URGENT'
               AND O_ORDERPRIORITY <> '2-HIGH'
                    THEN 1
                    ELSE 0
                END) AS LOW_LINE_COUNT
FROM ORDERS, LINEITEM
WHERE
       O_ORDERKEY = L_ORDERKEY
AND L_SHIPMODE IN ('MAIL', 'SHIP')
AND L_COMMITDATE < L_RECEIPTDATE
AND L_SHIPDATE < L_COMMITDATE
AND L_RECEIPTDATE >= DATE'1994-01-01'
AND L_RECEIPTDATE < DATE'1995-01-01'
GROUP BY L_SHIPMODE
ORDER BY L_SHIPMODE;
--
--3.sql
--
-- TPC-D Parameter Substitution (Version 1.1.0D)
-- using default substitutions

--set rowcount=10


SELECT L_ORDERKEY, SUM(L_EXTENDEDPRICE * (1 - L_DISCOUNT)) AS REVENUE,
        O_ORDERDATE, O_SHIPPRIORITY
FROM CUSTOMER, ORDERS, LINEITEM
WHERE
    C_MKTSEGMENT = 'BUILDING' AND
    C_CUSTKEY = O_CUSTKEY AND
    L_ORDERKEY = O_ORDERKEY AND
    O_ORDERDATE < DATE '1995-03-15' AND
    L_SHIPDATE > DATE '1995-03-15'
GROUP BY L_ORDERKEY, O_ORDERDATE, O_SHIPPRIORITY
ORDER BY REVENUE, O_ORDERDATE;




  @sync

@end

-----------------------------------------------------------

