0: jdbc:luciddb:> -- function execution can be used to save the user from having to
0: jdbc:luciddb:> -- modify an existing program to call itself.
0: jdbc:luciddb:> 
0: jdbc:luciddb:> values(applib.execute_function('js', 'function execute() {'
. . . . . . . . > '    return "I love cookies.";'
. . . . . . . . > '  }'));
+------------------+
|      EXPR$0      |
+------------------+
| I love cookies.  |
+------------------+
0: jdbc:luciddb:> values(applib.execute_function('js', 'function foo() {'
. . . . . . . . > '    var fn = function() {'
. . . . . . . . > '      return "I really love cookies with functions inside.";'
. . . . . . . . > '    };'
. . . . . . . . > '    return fn();'
. . . . . . . . > '  }', 'foo'));
+-----------------------------------------------+
|                    EXPR$0                     |
+-----------------------------------------------+
| I really love cookies with functions inside.  |
+-----------------------------------------------+
0: jdbc:luciddb:> values(applib.execute_method('js', 'var myObj = {'
. . . . . . . . > '    "C" : "o",'
. . . . . . . . > '    "o" : "k",'
. . . . . . . . > '    "i" : "e",'
. . . . . . . . > '    "s" : "!",'
. . . . . . . . > '    "love" : function() {'
. . . . . . . . > '      return this.s;'
. . . . . . . . > '    }'
. . . . . . . . > '  }', 'myObj', 'love'));
+---------+
| EXPR$0  |
+---------+
| !       |
+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test one-arg func
0: jdbc:luciddb:> values(applib.execute_function('js', 'function echo(arg) { return arg; }',
. . . . . . . . >     'echo', 'Hello World'));
+--------------+
|    EXPR$0    |
+--------------+
| Hello World  |
+--------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- test two-arg func
0: jdbc:luciddb:> create schema regex;
0: jdbc:luciddb:> create table regex.countries(name varchar(128));
0: jdbc:luciddb:> insert into regex.countries
. . . . . . . . > values
. . . . . . . . > ('Uruguay'),
. . . . . . . . > ('Paraguay'),
. . . . . . . . > ('Chile'),
. . . . . . . . > ('Argentina'),
. . . . . . . . > ('Venezuela');
0: jdbc:luciddb:> 
0: jdbc:luciddb:> select * from regex.countries where cast(
. . . . . . . . >   applib.execute_function('js',
. . . . . . . . >     'function execute(input, pattern) {
. . . . . . . . >       return new RegExp(pattern).test(input)
. . . . . . . . >     }',
. . . . . . . . >     'execute',
. . . . . . . . >     name,
. . . . . . . . >     '(A|U).*')
. . . . . . . . >   AS boolean);
+------------+
|    NAME    |
+------------+
| Uruguay    |
| Argentina  |
+------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> drop schema regex cascade;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> !quit
