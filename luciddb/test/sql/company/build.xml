<?xml version="1.0" encoding="UTF-8"?>
<!--
// $Id$
// LucidDB is a DBMS optimized for business intelligence.
// Copyright (C) 2005-2005 LucidEra, Inc.
// Copyright (C) 2005-2005 The Eigenbase Project
//
// This program is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version approved by The Eigenbase Project.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-->

<project name="company" basedir="." default="test">
  <dirname property="company.dir" file="${ant.file.company}" />

  <property name="open.dir" location="${company.dir}/../../../.."/>
  <fail unless="open.dir" />

  <property environment="env" />
  <property file="run.properties"/>

  <!-- override Farrago -->
  <property name="project.catalog.dir" location="${open.dir}/luciddb/catalog" />
  <property name="project.trace.propfile" location="${open.dir}/luciddb/trace/LucidDbTrace.properties" />
  <property name="project.testlog.dir" location="${open.dir}/luciddb/testlog" />
  <import file="${open.dir}/farrago/buildMacros.xml" />

  <taskdef name="foreach" classname="net.sf.antcontrib.logic.ForEach" classpath="${ant.classpath}"/>
  <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask" classpath="${ant.classpath}"/>

  <!-- directory where sql is generated -->
  <property name="gensql.dir" value="${company.dir}/gen" />
  <!-- directory where blackhawk output should go -->
  <property name="bh.log.basedir" value="${company.dir}/testlog" />

  <!-- directory of csv files -->
  <property name="csv.copy.dir" value="${company.dir}/csv-copy" />
  <property name="data.dir" value="${open.dir}/luciddb/test/data" />

  <!-- classpath for running tests via ant -->
  <path id="test.classpath">
    <pathelement path="${open.dir}/luciddb/classes"/>
    <pathelement path="${farrago.sqlline.classpath}"/>
    <pathelement path="${ant.classpath}"/>
    <pathelement path="${blackhawk.run.classpath}"/>
  </path>
  <property name="test.classpath" refid="test.classpath"/>

  <!-- classpath for running tests on oracle db via ant -->
  <path id="test.orcl.classpath">
    <pathelement path="${test.classpath}"/>
    <pathelement path="${open.dir}/luciddb/plugin/FarragoMedJdbc3p.jar"/>
  </path>
  <property name="test.orcl.classpath" refid="test.orcl.classpath"/>

  <target name="gen-all-sql">
    <!-- generate run.properties -->
    <available file="run.properties" type="file"
      property="run.properties.exists"/>
    <if>
      <isset property="run.properties.exists"/>
      <then/>
      <else>
        <copy file="run.properties.tmpl" tofile="run.properties"/>
        <property file="run.properties"/>
      </else>
    </if>

    <!-- generate sql -->
    <available file="${gensql.dir}" type="dir" property="sql.generated"/>
    <if>
      <isset property="sql.generated"/>
      <then/>
      <else>
        <copy todir="${gensql.dir}/noidx" overwrite="true">
          <fileset dir="${company.dir}" includes="*.tmpl"/>
          <filterset id="dir.filter">
            <filter token="DIR" value="${csv.copy.dir}"/>
          </filterset>
          <globmapper from="*.tmpl" to="*"/>
        </copy>

        <copy todir="${gensql.dir}/idx" overwrite="true">
          <fileset dir="${company.dir}" includes="*.tmpl"/>
          <filterset refid="dir.filter"/>
          <globmapper from="*.tmpl" to="*"/>
        </copy>

        <!-- copy over  non-index version of tests -->
        <copy todir="${gensql.dir}/noidx" overwrite="true">
          <fileset dir="${company.dir}">
            <include name="*.ref"/>
            <include name="*.sql"/>
            <exclude name="index.*"/>
            <exclude name="stats.*"/>
            <exclude name="aggJoinFilt.*"/>
            <exclude name="joinFilt.*"/>
            <exclude name="negJoinFilt.*"/>
            <exclude name="negJoinFiltExp.*"/>
            <exclude name="compIdx.*"/>
          </fileset>
        </copy>

        <!-- copy over indexed version of tests -->
        <copy todir="${gensql.dir}/idx" overwrite="true">
          <fileset dir="${company.dir}">
            <include name="*.sql"/>
            <include name="*.ref"/>
            <exclude name="create.*"/>
          </fileset>
        </copy>
      </else>
    </if>
  </target>

  <target name="test" depends="gen-all-sql">
    <blackhawk.fork
      basedir="${company.dir}"
      testscript="${testfile}"
      classpathref="test.classpath"/>
  </target>

  <target name="copy-csv">
    <sync todir="${csv.copy.dir}"
      overwrite="true"
      verbose="true"
      failonerror="true">
      <fileset dir="${data.dir}">
        <include name="DEPT.csv"/>
        <include name="EMP.csv"/>
        <include name="PRODUCTS.csv"/>
        <include name="SALES.csv"/>
        <include name="LOCATION.csv"/>
        <include name="CUSTOMERS.csv"/>
        <include name="SALES.bcp"/>
        <include name="PRODUCTS.bcp"/>
      </fileset>
    </sync>
  </target>

  <target name="clean">
    <delete dir="${gensql.dir}"/>
    <delete dir="${bh.log.basedir}"/>
    <delete dir="${csv.copy.dir}"/>
    <delete file="run.properties"/>
  </target>

  <!-- Experimental -->
    <target name="test-orcl" depends="gen-all-sql">
    <blackhawk.fork
      basedir="${company.dir}"
      testscript="test-orcl.xml"
      classpathref="test.orcl.classpath"/>
  </target>

  <target name="format-orcl-files">
    <copy todir="${company.dir}/orcl" overwrite="true">
      <fileset dir="${gensql.dir}/idx">
        <include name="*.log"/>
      </fileset>
      <filterchain>
        <tokenfilter>
          <replacestring
            from="0: jdbc:oracle:thin:@akela.lucidera.com:1521:"
            to="0: jdbc:oracle:"/>
          <replacestring
            from="Error: READ_COMMITTED and SERIALIZABLE are the only valid transaction levels (state=,code=17030)"
            to=""/>
          <replacestring
            from=". . . . . . . . . . . . . . . . . . . . . . ."
            to=". . . . . . . . "/>
        </tokenfilter>
      </filterchain>
      <globmapper from="*.log" to="*.orcl"/>
    </copy>
  </target>

</project>
