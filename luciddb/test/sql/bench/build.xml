<?xml version="1.0" encoding="UTF-8"?>
<!--
// $Id$
// LucidDB is a DBMS optimized for business intelligence.
// Copyright (C) 2005-2007 LucidEra, Inc.
// Copyright (C) 2005-2007 The Eigenbase Project
//
// This program is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version approved by The Eigenbase Project.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-->

<project name="benchmark" basedir="." default="test">
  <dirname property="bench.dir" file="${ant.file.bench}" />

  <property name="open.dir" location="${bench.dir}/../../../.."/>
  <fail unless="open.dir" />

  <property environment="env" />
  <property file="run.properties"/>

  <!-- override Farrago -->
  <property name="project.catalog.dir" location="${open.dir}/luciddb/catalog" />
  <property name="project.trace.propfile" location="${open.dir}/luciddb/trace/LucidDbTrace.properties" />
  <property name="project.testlog.dir" location="${open.dir}/luciddb/testlog" />
  <import file="${open.dir}/farrago/buildMacros.xml" />

  <taskdef name="foreach" classname="net.sf.antcontrib.logic.ForEach" classpath="${ant.classpath}"/>
  <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask" classpath="${ant.classpath}"/>

  <!-- directory where sql is generated -->
  <property name="gensql.dir" value="${bench.dir}/gen" />

  <!-- directory where blackhawk output should go -->
  <property name="bh.log.basedir" value="${bench.dir}/testlog" />

  <!-- directory of csv files -->
  <property name="csvsource.dir" value="/mnt/raksha/engineering/testdata/csv_BENCH"/>
  <property name="csv.dir" value="${bench.dir}/csv" />
  <property name="csv.copy.dir" value="${bench.dir}/csv-copy" />

  <!-- classpath for running tests via ant -->
  <path id="test.classpath">
    <pathelement path="${open.dir}/luciddb/classes"/>
    <pathelement path="${farrago.sqlline.classpath}"/>
    <pathelement path="${ant.classpath}"/>
    <pathelement path="${blackhawk.run.classpath}"/>
    <pathelement path="${test.emma.classpath}" />
  </path>
  <property name="test.classpath" refid="test.classpath"/>

  <target name="gen-sql">
    <filter token="open.dir" value="${open.dir}"/>
    <filter token="csv.dir" value="${csv.copy.dir}"/>

    <!-- generate config.properties file -->
    <copy file="prop.${prop.source}" tofile="config.properties"
      overwrite="true" filtering="true">
      <filterset>
        <filtersfile file="prop.${prop.source}"/>
      </filterset>
    </copy>

    <!-- generate all sql files -->
    <copy todir="${gensql.dir}tmp" overwrite="true"
      filtering="true">
      <fileset dir="${bench.dir}">
        <include name="**/*.tmpl"/>
      </fileset>
      <mapper type="glob" from="*.tmpl" to="*"/>
      <filterset>
        <filtersfile file="config.properties"/>
      </filterset>
    </copy>
    <copy todir="${gensql.dir}/${prop.source}" overwrite="true"
      filtering="true">
      <fileset dir="${gensql.dir}tmp"/>
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="^.*. . >.*@.*@.*" replace=". . . . . . . . > " flags="s"/>
          <replaceregex pattern="^.*@.*@.*" replace="" flags="s"/>
        </tokenfilter>
      </filterchain>
    </copy>
    <delete dir="${gensql.dir}tmp" quiet="true"/>

    <!-- copy over all other .sql and .ref files -->
    <copy todir="${gensql.dir}/${prop.source}">
      <fileset dir="${bench.dir}">
        <include name="**/*.sql"/>
        <include name="**/*.ref"/>
        <exclude name="gen/**"/>
      </fileset>
    </copy>
  </target>

  <target name="gen-all-sql">
    <!-- generate run.properties -->
    <available file="run.properties" type="file"
      property="run.properties.exists"/>
    <if>
      <isset property="run.properties.exists"/>
      <then/>
      <else>
        <copy file="run.properties.tmpl" tofile="run.properties"/>
        <property file="run.properties"/>
      </else>
    </if>
    <!-- generate sql -->
    <available file="${gensql.dir}" type="dir"
      property="sql.generated"/>
    <if>
      <isset property="sql.generated"/>
      <then/>
      <else>
        <foreach list="oracle,sqlserver,flatfile,csvjdbc"
          param="prop.source"
          target="gen-sql"/>
      </else>
    </if>
  </target>

  <target name="test" depends="gen-all-sql">
    <blackhawk.fork
      basedir="${bench.dir}"
      testscript="${testfile}"
      classpathref="test.classpath"/>
  </target>

  <target name="copy-csv">
    <available file="${csvsource.dir}" type="dir"
      property="raksha.available"/>
    <if>
      <isset property="raksha.available"/>
      <then>
        <!-- sync raksha <-> csv.dir -->
        <sync todir="${csv.dir}"
          overwrite="false"
          failonerror="false"
          verbose="true">
          <fileset dir="${csvsource.dir}"/>
        </sync>
      </then>
    </if>
    <available file="${csv.dir}" type="dir"
      property="csv.available"/>
    <if>
      <isset property="csv.available"/>
      <then>
        <!-- sync csv.dir <-> csv-copy.dir -->
        <sync todir="${csv.copy.dir}"
          overwrite="true"
          verbose="true"
          failonerror="true">
          <fileset dir="${csv.dir}"/>
        </sync>
        <!-- copy bcp -->
        <copy todir="${csv.copy.dir}" overwrite="true">
           <fileset dir="${bench.dir}">
            <include name="**/*.bcp"/>
          </fileset>
        </copy>
      </then>
      <else>
        <echo message="!! NO CSV FILES !!"/>
      </else>
    </if>
  </target>

  <target name="clean">
    <delete dir="${gensql.dir}"/>
    <delete dir="${bh.log.basedir}"/>
    <delete dir="${csv.copy.dir}"/>
    <delete file="run.properties"/>
    <delete file="config.properties"/>
  </target>

  <target name="clean-csv">
    <antcall target="clean"/>
    <delete dir="${csv.dir}"/>
  </target>

</project>
