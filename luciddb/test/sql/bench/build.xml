<?xml version="1.0" encoding="UTF-8"?>
<!--
// $Id$
// LucidDB is a DBMS optimized for business intelligence.
// Copyright (C) 2005-2005 LucidEra, Inc.
// Copyright (C) 2005-2005 The Eigenbase Project
//
// This program is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2 of the License, or (at your option)
// any later version approved by The Eigenbase Project.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-->

<project name="benchmark" basedir="." default="test">
  <dirname property="bench.dir" file="${ant.file.bench}" />

  <property name="open.dir" location="../../../.."/>
  <fail unless="open.dir" />

  <property environment="env" />
  <property file="run.properties"/>

  <taskdef name="foreach" classname="net.sf.antcontrib.logic.ForEach" classpath="${ant.classpath}"/>
  <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask" classpath="${ant.classpath}"/>
  
  <!-- directory where sql is generated -->
  <property name="gensql.dir" value="${bench.dir}/gen" />

  <!-- directory where blackhawk output should go -->
  <property name="bhlogs.dir" value="${bench.dir}/testlog" />
  <property name="bh.log.basedir" value="${bhlogs.dir}" />

  <!-- directory of csv files -->
  <property name="csvsource.dir" value="/mnt/raksha/engineering/testdata/csv_BENCH"/>
  <property name="csv.dir" value="${bench.dir}/csv" />
  <property name="csv.copy.dir" value="${bench.dir}/csv-copy" />

  <target name="gen-sql">
    <filter token="open.dir" value="${open.dir}"/>
    <filter token="csv.dir" value="${csv.copy.dir}"/>

    <!-- generate config.properties file -->
    <copy file="${prop.source}" tofile="config.properties"
      overwrite="true" filtering="true">
      <filterset>
        <filtersfile file="${prop.source}"/>
      </filterset>
    </copy>

    <!-- generate all sql files -->
    <copy todir="${gensql.dir}tmp" overwrite="true"
      filtering="true">
      <fileset dir="${bench.dir}">
        <include name="**/*.tmpl"/>
      </fileset>
      <mapper type="glob" from="*.tmpl" to="*"/>
      <filterset>
        <filtersfile file="config.properties"/>
      </filterset>
    </copy>
    <copy todir="${gensql.dir}/${prop.source}" overwrite="true"
      filtering="true">
      <fileset dir="${gensql.dir}tmp"/>
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="^.*. . >.*@.*@.*" replace=". . . . . . . . > " flags="s"/>
          <replaceregex pattern="^.*@.*@.*" replace="" flags="s"/>
        </tokenfilter>
      </filterchain>
    </copy>
    <delete dir="${gensql.dir}tmp" quiet="true"/>

    <!-- copy over all other .sql and .ref files -->
    <copy todir="${gensql.dir}/${prop.source}">
      <fileset dir="${bench.dir}">
        <include name="**/*.sql"/>
        <include name="**/*.ref"/>
        <exclude name="gen/**"/>
      </fileset>
    </copy>
  </target>
  
  <target name="gen-all-sql">
    <available file="${gensql.dir}" type="dir"
      property="sql.generated"/>
    <if>
      <isset property="sql.generated"/>
      <then/>
      <else>
        <foreach list="prop.oracle,prop.sqlserver,prop.flatfile,prop.csvjdbc" 
          param="prop.source"
          target="gen-sql"/>
      </else>
    </if>
  </target>
  
  <target name="test" depends="gen-all-sql">
    <ant dir="${open.dir}/luciddb" target="run_blackhawk"/>
  </target>
  
  <!-- restore from local copy of csv files -->
  <target name="copy-csv">
    <available file="${csv.dir}" type="dir"
      property="csv.available"/>
    <if>
      <isset property="csv.available"/>
      <then>
        <delete dir="${csv.copy.dir}"/>
        <copy todir="${csv.copy.dir}" overwrite="true">
          <fileset dir="${csv.dir}"/>
        </copy>
        <!-- copy bcp -->
        <copy todir="${csv.copy.dir}" overwrite="true">
          <fileset dir="${bench.dir}">
            <include name="**/*.bcp"/>
          </fileset>
        </copy>
      </then>
      <else>
        <antcall target="copy-remote-csv"/>
      </else>
    </if>
  </target>
  
  <!-- refresh from //raksha -->
  <target name="copy-remote-csv">
    <!-- refresh raksha -->
    <delete dir="${csv.dir}"/>
    <copy todir="${csv.dir}" overwrite="true">
      <fileset dir="${csvsource.dir}"/>
    </copy>
    <!-- refresh copy -->
    <antcall target="copy-csv"/>
  </target>

  <target name="clean">
    <delete dir="${gensql.dir}"/>
    <delete dir="${bhlogs.dir}"/>
    <delete dir="${csv.copy.dir}"/>
  </target>

  <target name="clean-csv">
    <antcall target="clean"/>
    <delete dir="${csv.dir}"/>
  </target>

  <target name="restoreCatalog">
    <ant dir="${open.dir}/luciddb" target="restoreCatalog"/>
  </target>

</project>
