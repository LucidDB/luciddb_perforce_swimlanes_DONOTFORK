0: jdbc:luciddb:> ------------------------------------------------------------------------------
0: jdbc:luciddb:> -----
0: jdbc:luciddb:> --  General tests for DELETE
0: jdbc:luciddb:> -----
0: jdbc:luciddb:> ------------------------------------------------------------------------------
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --{{{ DELETE with bind variables in the WHERE clause
0: jdbc:luciddb:> 
0: jdbc:luciddb:> CREATE TABLE DT.DB1 ( x int, s varchar(20))
. . . . . . . . > ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- populate the table
0: jdbc:luciddb:> -- EXECUTE SCRIPT as
0: jdbc:luciddb:> -- int i = 0;
0: jdbc:luciddb:> -- for ( i = 0 ; i <= 9 ; i++ )
0: jdbc:luciddb:> -- {
0: jdbc:luciddb:> --      INSERT INTO DT.DB1 VALUES (?i, 'hello world');
0: jdbc:luciddb:> -- }
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> INSERT INTO DT.DB1 VALUES (0, 'hello world');
0: jdbc:luciddb:> INSERT INTO DT.DB1 VALUES (1, 'hello world');
0: jdbc:luciddb:> INSERT INTO DT.DB1 VALUES (2, 'hello world');
0: jdbc:luciddb:> INSERT INTO DT.DB1 VALUES (3, 'hello world');
0: jdbc:luciddb:> INSERT INTO DT.DB1 VALUES (4, 'hello world');
0: jdbc:luciddb:> INSERT INTO DT.DB1 VALUES (5, 'hello world');
0: jdbc:luciddb:> INSERT INTO DT.DB1 VALUES (6, 'hello world');
0: jdbc:luciddb:> INSERT INTO DT.DB1 VALUES (7, 'hello world');
0: jdbc:luciddb:> INSERT INTO DT.DB1 VALUES (8, 'hello world');
0: jdbc:luciddb:> INSERT INTO DT.DB1 VALUES (9, 'hello world');
0: jdbc:luciddb:> 
0: jdbc:luciddb:> SELECT * FROM DT.DB1
. . . . . . . . > ORDER by 1;
+----+--------------+
| X  |      S       |
+----+--------------+
| 0  | hello world  |
| 1  | hello world  |
| 2  | hello world  |
| 3  | hello world  |
| 4  | hello world  |
| 5  | hello world  |
| 6  | hello world  |
| 7  | hello world  |
| 8  | hello world  |
| 9  | hello world  |
+----+--------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- DELETE all even numbers from the table
0: jdbc:luciddb:> -- EXECUTE SCRIPT as
0: jdbc:luciddb:> -- int i = 0;
0: jdbc:luciddb:> -- for ( i = 0 ; i <= 9 ; i += 2 )
0: jdbc:luciddb:> -- {
0: jdbc:luciddb:> --      DELETE FROM DT.DB1 WHERE x = ?i;
0: jdbc:luciddb:> -- }
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> DELETE FROM DT.DB1 WHERE x = 0;
0: jdbc:luciddb:> DELETE FROM DT.DB1 WHERE x = 2;
0: jdbc:luciddb:> DELETE FROM DT.DB1 WHERE x = 4;
0: jdbc:luciddb:> DELETE FROM DT.DB1 WHERE x = 6;
0: jdbc:luciddb:> DELETE FROM DT.DB1 WHERE x = 8;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> SELECT * FROM DT.DB1
. . . . . . . . > ORDER by 1;
+----+--------------+
| X  |      S       |
+----+--------------+
| 1  | hello world  |
| 3  | hello world  |
| 5  | hello world  |
| 7  | hello world  |
| 9  | hello world  |
+----+--------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- DELETE all ood numbers from the table using a more complex WHERE expression
0: jdbc:luciddb:> -- EXECUTE SCRIPT as
0: jdbc:luciddb:> -- int i = 0;
0: jdbc:luciddb:> -- int j = 3;
0: jdbc:luciddb:> -- for ( i = 1 ; i <= 9 ; i += 2 )
0: jdbc:luciddb:> -- {
0: jdbc:luciddb:> --      DELETE FROM DT.DB1 WHERE x + 2 * ?i + ?j + 1 - ?j - 3 * ?i = 1;
0: jdbc:luciddb:> -- }
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> DELETE FROM DT.DB1 WHERE x + 2 * 1 + 3 + 1 - 3 - 3 * 1 = 1;
0: jdbc:luciddb:> DELETE FROM DT.DB1 WHERE x + 2 * 3 + 3 + 1 - 3 - 3 * 3 = 1;
0: jdbc:luciddb:> DELETE FROM DT.DB1 WHERE x + 2 * 5 + 3 + 1 - 3 - 3 * 5 = 1;
0: jdbc:luciddb:> DELETE FROM DT.DB1 WHERE x + 2 * 7 + 3 + 1 - 3 - 3 * 7 = 1;
0: jdbc:luciddb:> DELETE FROM DT.DB1 WHERE x + 2 * 9 + 3 + 1 - 3 - 3 * 9 = 1;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> SELECT * FROM DT.DB1
. . . . . . . . > ORDER by 1;
+----+----+
| X  | S  |
+----+----+
+----+----+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --}}}
0: jdbc:luciddb:> --{{{ DELETE from a tables that are involved in FK relationship
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- CREATE TABLE DT.DIMENSION1 (x integer, y computed ( x + 1), f float,
0: jdbc:luciddb:> --                                                      pk1 integer, pk2 integer, un integer unique,
0: jdbc:luciddb:> --                                                      primary key (pk1, pk2))
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- CREATE TABLE DT.FACT1 (x integer, y integer, 
0: jdbc:luciddb:> --                                        foreign key (x, y) references DT.DIMENSION1(pk1, pk2))
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- CREATE TABLE DT.FACT2 (x integer references DT.DIMENSION1(un))
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- -- DELETE from FACT table (requires NO special validation)
0: jdbc:luciddb:> -- DELETE FROM DT.FACT1
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- DELETE FROM DT.FACT2
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- -- DELETE from DIMENSION table (requires special validation)
0: jdbc:luciddb:> -- DELETE FROM DT.DIMENSION1
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --}}}
0: jdbc:luciddb:> --{{{ DELETE with bind variables and FK relationships
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- we will reuse tables from above
0: jdbc:luciddb:>  
0: jdbc:luciddb:> --{{{ populate the tables
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- EXECUTE SCRIPT as
0: jdbc:luciddb:> -- int i = 0;
0: jdbc:luciddb:> -- int j = 0;
0: jdbc:luciddb:> -- for ( i = 0 ; i <= 9 ; i++ )
0: jdbc:luciddb:> -- {
0: jdbc:luciddb:> --      for ( j = 0 ; j <= 1 ; j++ )
0: jdbc:luciddb:> --      {
0: jdbc:luciddb:> --              INSERT INTO DT.DIMENSION1 VALUES (0, 0, ?i, ?j, ?i * 2 + ?j);
0: jdbc:luciddb:> --      }
0: jdbc:luciddb:> -- }
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- -- x, y pairs where x is even
0: jdbc:luciddb:> -- EXECUTE SCRIPT as
0: jdbc:luciddb:> -- int i = 0;
0: jdbc:luciddb:> -- int j = 0;
0: jdbc:luciddb:> -- for ( i = 0 ; i <= 9 ; i += 2 )
0: jdbc:luciddb:> -- {
0: jdbc:luciddb:> --      for ( j = 0 ; j <= 1 ; j++ )
0: jdbc:luciddb:> --      {
0: jdbc:luciddb:> --              INSERT INTO DT.FACT1 VALUES (?i, ?j);
0: jdbc:luciddb:> --      }
0: jdbc:luciddb:> -- }
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- -- 5 to 14
0: jdbc:luciddb:> -- EXECUTE SCRIPT as
0: jdbc:luciddb:> -- int i = 0;
0: jdbc:luciddb:> -- for ( i = 5 ; i <= 14 ; i++ )
0: jdbc:luciddb:> -- {
0: jdbc:luciddb:> --              INSERT INTO DT.FACT2 VALUES (?i);
0: jdbc:luciddb:> -- }
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- SELECT * FROM DT.DIMENSION1
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- SELECT * FROM DT.FACT1
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- SELECT * FROM DT.FACT2
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- --}}}
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- -- DELETE from FACT table (requires NO special validation)
0: jdbc:luciddb:> -- DELETE FROM DT.FACT2 WHERE x > 9
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- SELECT * FROM DT.FACT2
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- -- DELETE from DIMENSION table (requires special validation)
0: jdbc:luciddb:> -- -- this one should succeed
0: jdbc:luciddb:> -- DELETE  FROM DT.DIMENSION1 WHERE  un > 9
0: jdbc:luciddb:> --              AND pk1 - CAST (pk1 ; 2 as integer) * 2  != 0
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- SELECT * FROM DT.DIMENSION1
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- -- this one should fail
0: jdbc:luciddb:> -- DELETE FROM DT.DIMENSION1 WHERE un > 4
0: jdbc:luciddb:> --              AND pk1 - CAST (pk1 / 2 as integer) * 2  != 0           
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- SELECT * FROM DT.DIMENSION1
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- -- all of these should succeed
0: jdbc:luciddb:> -- EXECUTE SCRIPT as
0: jdbc:luciddb:> -- int i = 0;
0: jdbc:luciddb:> -- for ( i = 1 ; i <= 9 ; i += 2 )
0: jdbc:luciddb:> -- {
0: jdbc:luciddb:> --     int j = 0;
0: jdbc:luciddb:> -- //   SELECT * FROM DT.DIMENSION1 WHERE un < 5 AND pk1 = ?i AND ?j = 0;
0: jdbc:luciddb:> --      DELETE FROM DT.DIMENSION1 WHERE un < 5 AND pk1 = ?i AND ?j = 0;
0: jdbc:luciddb:> -- }
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- SELECT * FROM DT.DIMENSION1
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- -- this should have nothing to delete (so it should succeed)
0: jdbc:luciddb:> -- DELETE FROM DT.DIMENSION1 WHERE un < 5 AND pk1 = 1
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- SELECT * FROM DT.DIMENSION1
0: jdbc:luciddb:> -- ;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- --}}}
0: jdbc:luciddb:> 
0: jdbc:luciddb:> !quit
