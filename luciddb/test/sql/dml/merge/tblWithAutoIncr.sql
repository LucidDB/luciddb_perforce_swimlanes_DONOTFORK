set schema 'mergetest';

-- Create and populate tables with auto increment columns

create table EMPSEQ (
  INCCOL bigint generated by default as identity
    (maxvalue 209 start with 100) not null,
  EMPNO integer not null,
  FNAME varchar(15),
  LNAME varchar(15),
  SEX char(1),
  DEPTNO integer,
  MANAGER integer,
  LOCID char(2),
  CITY varchar(8),
  SAL decimal(10, 2),
  COMMISION decimal(10, 2),
  HOBBY varchar(25)
);

create table EMPSEQ2 (
  INCCOL bigint generated by default as identity
    (maxvalue 209 start with 100) not null,
  EMPNO integer not null,
  FNAME varchar(15),
  LNAME varchar(15),
  SEX char(1),
  DEPTNO integer,
  MANAGER integer,
  LOCID char(2),
  CITY varchar(8),
  SAL decimal(10, 2),
  COMMISION decimal(10, 2),
  HOBBY varchar(25)
);


create table LOCATIONSEQ (
  INCCOL integer generated always as identity
    (start with 0 maxvalue 150 increment by 10 ),
  LOCID char(2) not null,
  STREET varchar(30),
  CITY varchar(20),
  STATE char(2),
  ZIP decimal(5,0)
);


insert into EMPSEQ(EMPNO, FNAME, LNAME, SEX, DEPTNO, MANAGER, LOCID, SAL, 
  COMMISION, HOBBY) 
select * from EMP;

insert into LOCATIONSEQ(LOCID, STREET, CITY, STATE, ZIP)
select * from LOCATION;

insert into LOCATIONSEQ(LOCID, STREET, CITY, STATE, ZIP)
values ('PP', '100 Sesame Street', 'Portside', 'PA', 24912),
  ('IL', '111 Technology Way', null, 'IL', 60563);


select * from EMPSEQ order by INCCOL;
select * from LOCATIONSEQ order by INCCOL;


-- basic merge into table with auto increment column
merge into empseq e
  using locationseq l on e.locid = l.locid
  when matched then
    update set sal = case when l.city = 'San Francisco' then e.sal + 25000
                     when l.city = 'Los Angeles' then e.sal + 111 
                     else e.sal end,
               city = l.city,
               hobby = 'Hanging out on ' || substring(l.street, 5)
  when not matched then
    insert (empno, fname, lname)
    values (l.zip, 'empA' || substring(l.street, 4, 8), cast (l.zip as varchar(15)));

select * from empseq order by inccol;


-- merge into table with auto inc column (forcing values to auto inc)
delete from empseq;
insert into EMPSEQ(EMPNO, FNAME, LNAME, SEX, DEPTNO, MANAGER, LOCID, SAL, 
  COMMISION, HOBBY) 
select * from EMP;
merge into empseq e
  using locationseq l on e.locid = l.locid
  when matched then
    update set sal = case when l.city = 'San Francisco' then e.sal + 25000
                     when l.city = 'Los Angeles' then e.sal + 111 
                     else e.sal end,
               city = l.city,
               hobby = 'Hanging out on ' || substring(l.street, 5)
  when not matched then
    insert (inccol, empno, fname, lname)
    values (999, l.zip, 'empA' || substring(l.street, 4, 8), cast (l.zip as varchar(15)));

select * from empseq order by inccol;


-- basic merge from table with auto increment column
delete from empseq;
insert into EMPSEQ(EMPNO, FNAME, LNAME, SEX, DEPTNO, MANAGER, LOCID, SAL, 
  COMMISION, HOBBY) 
select * from EMP;
merge into empseq2 as e2 
  using empseq as e
    on e.empno = e2.empno
  when matched then
    update set inccol = 0
  when not matched then
    insert (empno, fname, lname)
    values (e.empno, e.fname, e.lname);

select * from empseq2 order by inccol;
delete from empseq2;


--
-- test of merge out of range
--
-- merge out of range -> error
create table t1(n1 integer);
insert into t1 values (1),(2),(3);
create table t2 (m1 integer generated by default as identity
                    (maxvalue 2 start with 1),
                 m2 integer);
merge into t2 
using t1 on n1=m2
when matched then
  update set m2=0
when not matched then
  insert (m2) values (n1);

drop table t1;
drop table t2; 


-- merge out of range -> force, no error
create table t1(n1 integer);
insert into t1 values (1),(2),(3);
create table t2 (m1 integer generated by default as identity
                    (maxvalue 2 start with 1),
                 m2 integer);
merge into t2 
using t1 on n1=m2
when matched then
  update set m2=0
when not matched then
  insert (m1,m2) values (999,n1);

select * from t2;

-- still no error
insert into t1 values (4),(5);
merge into t2
using t1 on n1=m2
when matched then
  update set m2=0
when not matched then
  insert (m2) values (n1);

select * from t2;

-- error, out of range
insert into t1 values (6);
merge into t2
using t1 on n1=m2
when matched then
  update set m2=-1
when not matched then
  insert (m2) values (n1);


drop table t1;
drop table t2; 


-- change the default current value for empseq.inccol
insert into EMPSEQ(INCCOL, EMPNO, FNAME, LNAME, SEX, DEPTNO, MANAGER, LOCID, 
  SAL)
values (150, 150, 'Lola', null, 'F', null, 100, null, 0),
  (160, 160, 'Pete', 'McIntyre', 'M', null, null, 'PP', null);

select * from empseq order by inccol;



-- clean up
drop table empseq;
drop table empseq2;
drop table locationseq;
