0: jdbc:luciddb:> set schema 's';
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- merge entails a cartesian join
0: jdbc:luciddb:> merge into bench1 tr
. . . . . . . . > using bench1M as rf
. . . . . . . . > on tr."k2" = 0
. . . . . . . . > when matched then
. . . . . . . . >   update set "k2" = 3
. . . . . . . . > when not matched then
. . . . . . . . >   insert ("kseq","k4") values (rf."kseq",5);
0: jdbc:luciddb:> -- should be 1M + 1
0: jdbc:luciddb:> select count(*) from bench1;
+----------+
|  EXPR$0  |
+----------+
| 1000001  |
+----------+
0: jdbc:luciddb:> truncate table bench1;
0: jdbc:luciddb:> insert into bench1 select * from bench10k where "kseq" = 1;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- 100K updates, no insert
0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- should be 1M
0: jdbc:luciddb:> select count(*) from bench1M;
+----------+
|  EXPR$0  |
+----------+
| 1000000  |
+----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> merge into bench1M tr
. . . . . . . . > using bench100K as rf
. . . . . . . . > on tr."kseq" = rf."kseq"
. . . . . . . . > when matched then
. . . . . . . . >   update set "k2" = 3
. . . . . . . . > when not matched then
. . . . . . . . >   insert ("kseq","k4") values (rf."kseq",5);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should be 100K
0: jdbc:luciddb:> select count(*) from bench1M where "k2" = 3;
+---------+
| EXPR$0  |
+---------+
| 100000  |
+---------+
0: jdbc:luciddb:> select count(*) from bench1M
. . . . . . . . > where ("kseq">0 and "kseq"<100001);
+---------+
| EXPR$0  |
+---------+
| 100000  |
+---------+
0: jdbc:luciddb:> -- should be 0
0: jdbc:luciddb:> select count(*) from bench1M where "k4" = 5;
+---------+
| EXPR$0  |
+---------+
| 0       |
+---------+
0: jdbc:luciddb:> -- should be 1M
0: jdbc:luciddb:> select count(*) from bench1M;
+----------+
|  EXPR$0  |
+----------+
| 1000000  |
+----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:>   
0: jdbc:luciddb:> -- restore
0: jdbc:luciddb:> truncate table bench1M;
0: jdbc:luciddb:> insert into bench1M
. . . . . . . . > select "kseq","k2","k4","k5","k10","k25","k100","k1k","k10k","k40k","k100k","k250k","k500k"
. . . . . . . . > from ff_server."BCP"."bench1M";
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- 10K updates and 990K inserts
0: jdbc:luciddb:> --
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should be 10K
0: jdbc:luciddb:> select count(*) from bench10K;
+---------+
| EXPR$0  |
+---------+
| 10000   |
+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> merge into bench10K as tr
. . . . . . . . > using bench1M as rf
. . . . . . . . > on tr."kseq" = rf."kseq"
. . . . . . . . > when matched then
. . . . . . . . >   update set "k2" = 3
. . . . . . . . > when not matched then
. . . . . . . . >   insert ("kseq","k4") values (rf."kseq",5);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- should be 10K
0: jdbc:luciddb:> select count(*) from bench10K where "k2" = 3;
+---------+
| EXPR$0  |
+---------+
| 10000   |
+---------+
0: jdbc:luciddb:> -- should be 990K
0: jdbc:luciddb:> select count(*) from bench10K where "k4" = 5;
+---------+
| EXPR$0  |
+---------+
| 990000  |
+---------+
0: jdbc:luciddb:> -- should be 1M
0: jdbc:luciddb:> select count(*) from bench10K;
+----------+
|  EXPR$0  |
+----------+
| 1000000  |
+----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- restore
0: jdbc:luciddb:> truncate table bench10K;
0: jdbc:luciddb:> insert into bench10K
. . . . . . . . > select "kseq","k2","k4","k5","k10","k25","k100","k1k","k10k","k40k","k100k","k250k","k500k"
. . . . . . . . > from ff_server."BCP"."bench10K";
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- update only on bench1M, where k2 = 1
0: jdbc:luciddb:> --
0: jdbc:luciddb:> 
0: jdbc:luciddb:> merge into bench1M as tr
. . . . . . . . > using (select * from bench1M where "k2" = 1) as rf
. . . . . . . . > on tr."kseq" = rf."kseq"
. . . . . . . . > when matched then
. . . . . . . . >   update set "k4" = 5
. . . . . . . . > when not matched then
. . . . . . . . >   insert ("kseq","k4") values (rf."kseq",6);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> select count(*) from bench1M where "k2" = 1;
+---------+
| EXPR$0  |
+---------+
| 499598  |
+---------+
0: jdbc:luciddb:> -- should be the above
0: jdbc:luciddb:> select count(*) from bench1M where "k4" = 5;
+---------+
| EXPR$0  |
+---------+
| 499598  |
+---------+
0: jdbc:luciddb:> -- should be 0
0: jdbc:luciddb:> select count(*) from bench1M where "k4" = 6;
+---------+
| EXPR$0  |
+---------+
| 0       |
+---------+
0: jdbc:luciddb:> -- should be 1M - count-of-k4=5
0: jdbc:luciddb:> select count(*) from bench1M where "k4" < 5;
+---------+
| EXPR$0  |
+---------+
| 500402  |
+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- restore
0: jdbc:luciddb:> truncate table bench1M;
0: jdbc:luciddb:> insert into bench1M
. . . . . . . . > select "kseq","k2","k4","k5","k10","k25","k100","k1k","k10k","k40k","k100k","k250k","k500k"
. . . . . . . . > from ff_server."BCP"."bench1M";
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- update only on bench1M, where k1k = 1
0: jdbc:luciddb:> --
0: jdbc:luciddb:> 
0: jdbc:luciddb:> merge into bench1M as tr
. . . . . . . . > using (select * from bench1M where "k1k" = 1) as rf
. . . . . . . . > on tr."kseq" = rf."kseq"
. . . . . . . . > when matched then
. . . . . . . . >   update set "k4" = 5
. . . . . . . . > when not matched then
. . . . . . . . >   insert ("kseq","k4") values (rf."kseq",6);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> select count(*) from bench1M where "k1k" = 1;
+---------+
| EXPR$0  |
+---------+
| 1019    |
+---------+
0: jdbc:luciddb:> -- should be the above
0: jdbc:luciddb:> select count(*) from bench1M where "k4" = 5;
+---------+
| EXPR$0  |
+---------+
| 1019    |
+---------+
0: jdbc:luciddb:> -- should be 0
0: jdbc:luciddb:> select count(*) from bench1M where "k4" = 6;
+---------+
| EXPR$0  |
+---------+
| 0       |
+---------+
0: jdbc:luciddb:> -- should be 1M - count-of-k4=5
0: jdbc:luciddb:> select count(*) from bench1M where "k4" < 5;
+---------+
| EXPR$0  |
+---------+
| 998981  |
+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- restore
0: jdbc:luciddb:> truncate table bench1M;
0: jdbc:luciddb:> insert into bench1M
. . . . . . . . > select "kseq","k2","k4","k5","k10","k25","k100","k1k","k10k","k40k","k100k","k250k","k500k"
. . . . . . . . > from ff_server."BCP"."bench1M";
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- update only on bench1M, where k100k = 1
0: jdbc:luciddb:> --
0: jdbc:luciddb:> 
0: jdbc:luciddb:> merge into bench1M as tr
. . . . . . . . > using (select * from bench1M where "k100k" = 1) as rf
. . . . . . . . > on tr."kseq" = rf."kseq"
. . . . . . . . > when matched then
. . . . . . . . >   update set "k4" = 5
. . . . . . . . > when not matched then
. . . . . . . . >   insert ("kseq","k4") values (rf."kseq",6);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> select count(*) from bench1M where "k100k" = 1;
+---------+
| EXPR$0  |
+---------+
| 6       |
+---------+
0: jdbc:luciddb:> -- should be the above
0: jdbc:luciddb:> select count(*) from bench1M where "k4" = 5;
+---------+
| EXPR$0  |
+---------+
| 6       |
+---------+
0: jdbc:luciddb:> -- should be 0
0: jdbc:luciddb:> select count(*) from bench1M where "k4" = 6;
+---------+
| EXPR$0  |
+---------+
| 0       |
+---------+
0: jdbc:luciddb:> -- should be 1M - count-of-k4=5
0: jdbc:luciddb:> select count(*) from bench1M where "k4" < 5;
+---------+
| EXPR$0  |
+---------+
| 999994  |
+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- restore
0: jdbc:luciddb:> truncate table bench1M;
0: jdbc:luciddb:> insert into bench1M
. . . . . . . . > select "kseq","k2","k4","k5","k10","k25","k100","k1k","k10k","k40k","k100k","k250k","k500k"
. . . . . . . . > from ff_server."BCP"."bench1M";
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- few updates & few inserts on bench100K
0: jdbc:luciddb:> --
0: jdbc:luciddb:> 
0: jdbc:luciddb:> merge into bench100K as tr
. . . . . . . . > using (select * from bench1M where "k10k" = 1) as rf
. . . . . . . . > on tr."kseq" = rf."kseq"
. . . . . . . . > when matched then
. . . . . . . . >   update set "k500k" = 500001
. . . . . . . . > when not matched then
. . . . . . . . >   insert ("kseq","k500k") values (rf."kseq",500002);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> select count(*) from bench1M where "k10k" = 1;
+---------+
| EXPR$0  |
+---------+
| 96      |
+---------+
0: jdbc:luciddb:> select count(*) from bench1M where "k10k" = 1 and "kseq"<=100000;
+---------+
| EXPR$0  |
+---------+
| 5       |
+---------+
0: jdbc:luciddb:> -- the following 2 counts should add up to the top count
0: jdbc:luciddb:> select count(*) from bench100K where "k500k" = 500001;
+---------+
| EXPR$0  |
+---------+
| 5       |
+---------+
0: jdbc:luciddb:> select count(*) from bench100K where "k500k" = 500002;
+---------+
| EXPR$0  |
+---------+
| 91      |
+---------+
0: jdbc:luciddb:> -- should be 100K + above
0: jdbc:luciddb:> select count(*) from bench100K;
+---------+
| EXPR$0  |
+---------+
| 100091  |
+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- restore
0: jdbc:luciddb:> truncate table bench100K;
0: jdbc:luciddb:> insert into bench100K
. . . . . . . . > select "kseq","k2","k4","k5","k10","k25","k100","k1k","k10k","k40k","k100k","k250k","k500k"
. . . . . . . . > from ff_server."BCP"."bench100K";
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- few updates & many inserts on bench100K
0: jdbc:luciddb:> --
0: jdbc:luciddb:> 
0: jdbc:luciddb:> merge into bench100K as tr
. . . . . . . . > using (select * from bench1M 
. . . . . . . . >        where ("kseq"<100000 and "k100k"=1) or 
. . . . . . . . >              ("kseq">=100000 and "k2"=1)) as rf
. . . . . . . . > on tr."kseq" = rf."kseq"
. . . . . . . . > when matched then
. . . . . . . . >   update set "k500k" = 500001
. . . . . . . . > when not matched then
. . . . . . . . >   insert ("kseq","k500k") values (rf."kseq",500002);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> select count(*) from bench1M 
. . . . . . . . >                 where ("kseq"<100000 and "k100k"=1) or 
. . . . . . . . >                       ("kseq">=100000 and "k2"=1);
+---------+
| EXPR$0  |
+---------+
| 449784  |
+---------+
0: jdbc:luciddb:> -- the following 2 counts should add up to the above
0: jdbc:luciddb:> select count(*) from bench100K where "k500k" = 500001;
+---------+
| EXPR$0  |
+---------+
| 2       |
+---------+
0: jdbc:luciddb:> select count(*) from bench100K where "k500k" = 500002;
+---------+
| EXPR$0  |
+---------+
| 449782  |
+---------+
0: jdbc:luciddb:> -- should be 100K + above
0: jdbc:luciddb:> select count(*) from bench100K;
+---------+
| EXPR$0  |
+---------+
| 549782  |
+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- restore
0: jdbc:luciddb:> truncate table bench100K;
0: jdbc:luciddb:> insert into bench100K
. . . . . . . . > select "kseq","k2","k4","k5","k10","k25","k100","k1k","k10k","k40k","k100k","k250k","k500k"
. . . . . . . . > from ff_server."BCP"."bench100K";
0: jdbc:luciddb:> 
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- many updates and few inserts on bench100K
0: jdbc:luciddb:> --
0: jdbc:luciddb:> 
0: jdbc:luciddb:> merge into bench100K as tr
. . . . . . . . > using (select * from bench1M 
. . . . . . . . >        where ("kseq"<100000 and "k2"=1) or 
. . . . . . . . >              ("kseq">=100000 and "k100k"=1)) as rf
. . . . . . . . > on tr."kseq" = rf."kseq"
. . . . . . . . > when matched then
. . . . . . . . >   update set "k500k" = 500001
. . . . . . . . > when not matched then
. . . . . . . . >   insert ("kseq","k500k") values (rf."kseq",500002);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> select count(*) from bench1M 
. . . . . . . . >                 where ("kseq"<100000 and "k2"=1) or 
. . . . . . . . >                       ("kseq">=100000 and "k100k"=1);
+---------+
| EXPR$0  |
+---------+
| 49820   |
+---------+
0: jdbc:luciddb:> -- the following 2 counts should add up to the above
0: jdbc:luciddb:> select count(*) from bench100K where "k500k" = 500001;
+---------+
| EXPR$0  |
+---------+
| 49816   |
+---------+
0: jdbc:luciddb:> select count(*) from bench100K where "k500k" = 500002;
+---------+
| EXPR$0  |
+---------+
| 4       |
+---------+
0: jdbc:luciddb:> -- should be 100K + above
0: jdbc:luciddb:> select count(*) from bench100K;
+---------+
| EXPR$0  |
+---------+
| 100004  |
+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- restore
0: jdbc:luciddb:> truncate table bench100K;
0: jdbc:luciddb:> insert into bench100K
. . . . . . . . > select "kseq","k2","k4","k5","k10","k25","k100","k1k","k10k","k40k","k100k","k250k","k500k"
. . . . . . . . > from ff_server."BCP"."bench100K";
0: jdbc:luciddb:> 
0: jdbc:luciddb:>            
0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- update on self
0: jdbc:luciddb:> --
0: jdbc:luciddb:> 
0: jdbc:luciddb:> merge into bench1M as tr
. . . . . . . . > using bench1M as rf
. . . . . . . . > on tr."kseq" = rf."kseq"
. . . . . . . . > when matched then
. . . . . . . . >   update set "kseq" = rf."kseq" + 1
. . . . . . . . > when not matched then
. . . . . . . . >   insert ("kseq") values (rf."kseq");
0: jdbc:luciddb:> 
0: jdbc:luciddb:> select count(*) from bench1M;
+----------+
|  EXPR$0  |
+----------+
| 1000000  |
+----------+
0: jdbc:luciddb:> select count(*) from bench1M where "kseq">1 and "kseq"<1000002;
+----------+
|  EXPR$0  |
+----------+
| 1000000  |
+----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> --
0: jdbc:luciddb:> -- update on self
0: jdbc:luciddb:> --
0: jdbc:luciddb:> 
0: jdbc:luciddb:> merge into bench1M as tr
. . . . . . . . > using bench1M as rf
. . . . . . . . > on tr."kseq" = rf."kseq"
. . . . . . . . > when matched then
. . . . . . . . >   update set "kseq" = rf."kseq" - 1 
. . . . . . . . > when not matched then
. . . . . . . . >   insert ("kseq") values rf."kseq";
0: jdbc:luciddb:> 
0: jdbc:luciddb:> select count(*) from bench1M;
+----------+
|  EXPR$0  |
+----------+
| 1000000  |
+----------+
0: jdbc:luciddb:> select count(*) from bench1M where "kseq">0 and "kseq"<1000001;
+----------+
|  EXPR$0  |
+----------+
| 1000000  |
+----------+
0: jdbc:luciddb:> -- do an analyze table, which implicitly verifies the btree pages
0: jdbc:luciddb:> analyze table bench1M compute statistics for all columns;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> !quit
