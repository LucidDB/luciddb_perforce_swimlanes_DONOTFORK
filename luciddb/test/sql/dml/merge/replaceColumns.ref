0: jdbc:luciddb:> -- Test MERGE statements that are executed by replacing only the columns
0: jdbc:luciddb:> -- being updated as opposed to updating entire rows.
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create schema rc;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> set schema 'rc';
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- use the personality that will allow index-only scans to be used, so tests
0: jdbc:luciddb:> -- that verify if indexes are rebuilt properly will return data read from
0: jdbc:luciddb:> -- the index instead of the column store
0: jdbc:luciddb:> alter session implementation set jar
. . . . . . . . >     sys_boot.sys_boot.luciddb_index_only_plugin;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create table emps(
. . . . . . . . >     empno int not null unique, name varchar(20) not null, deptno int,
. . . . . . . . >     gender char(1), city char(30), age smallint, salary numeric(10,2));
0: jdbc:luciddb:> create index ideptno on emps(deptno);
0: jdbc:luciddb:> create index icity on emps(city, age);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> insert into emps values(100, 'Fred', 10, null, null, 25, 22500);
0: jdbc:luciddb:> insert into emps values(110, 'Eric', 20, 'M', 'San Francisco', 80, 72000);
0: jdbc:luciddb:> insert into emps values(120, 'Wilma', 20, 'F', null, 50, 45000);
0: jdbc:luciddb:> insert into emps values(130, 'John', 40, 'M', 'Vancouver', null, null);
0: jdbc:luciddb:> insert into emps values(140, 'Barney', 10, 'M', 'San Mateo', 41, 50000);
0: jdbc:luciddb:> insert into emps values(150, 'Betty', 20, 'F', 'San Francisco', 40, 90000);
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 0       | 100    | Fred    | 10      |         |                                 | 25   | 22500.00  |
| 1       | 110    | Eric    | 20      | M       | San Francisco                   | 80   | 72000.00  |
| 2       | 120    | Wilma   | 20      | F       |                                 | 50   | 45000.00  |
| 3       | 130    | John    | 40      | M       | Vancouver                       |      |           |
| 4       | 140    | Barney  | 10      | M       | San Mateo                       | 41   | 50000.00  |
| 5       | 150    | Betty   | 20      | F       | San Francisco                   | 40   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create table tempemps(
. . . . . . . . >     t_empno int unique not null, t_name varchar(25), t_deptno int,
. . . . . . . . >     t_gender char(1), t_city char(35), t_age int);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> insert into tempemps
. . . . . . . . >     select empno, name, deptno + 1, gender, coalesce(city, 'San Mateo'), age
. . . . . . . . >         from emps;
0: jdbc:luciddb:> select * from tempemps order by t_empno;
+----------+---------+-----------+-----------+--------------------------------------+--------+
| T_EMPNO  | T_NAME  | T_DEPTNO  | T_GENDER  |                T_CITY                | T_AGE  |
+----------+---------+-----------+-----------+--------------------------------------+--------+
| 100      | Fred    | 11        |           | San Mateo                            | 25     |
| 110      | Eric    | 21        | M         | San Francisco                        | 80     |
| 120      | Wilma   | 21        | F         | San Mateo                            | 50     |
| 130      | John    | 41        | M         | Vancouver                            |        |
| 140      | Barney  | 11        | M         | San Mateo                            | 41     |
| 150      | Betty   | 21        | F         | San Francisco                        | 40     |
+----------+---------+-----------+-----------+--------------------------------------+--------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create table nullableTempEmps(
. . . . . . . . >     t_empno int unique, t_name varchar(25), t_deptno int,
. . . . . . . . >     t_gender char(1), t_city char(35), t_age int);
0: jdbc:luciddb:> insert into nullableTempEmps select * from tempemps;
0: jdbc:luciddb:> insert into nullableTempEmps values
. . . . . . . . >     (null, 'Unknown', null, null, 'Unknown', null);
0: jdbc:luciddb:> select lcs_rid(t_empno), * from nullableTempEmps order by t_empno;
+---------+----------+----------+-----------+-----------+--------------------------------------+--------+
| EXPR$0  | T_EMPNO  |  T_NAME  | T_DEPTNO  | T_GENDER  |                T_CITY                | T_AGE  |
+---------+----------+----------+-----------+-----------+--------------------------------------+--------+
| 6       |          | Unknown  |           |           | Unknown                              |        |
| 0       | 100      | Fred     | 11        |           | San Mateo                            | 25     |
| 1       | 110      | Eric     | 21        | M         | San Francisco                        | 80     |
| 2       | 120      | Wilma    | 21        | F         | San Mateo                            | 50     |
| 3       | 130      | John     | 41        | M         | Vancouver                            |        |
| 4       | 140      | Barney   | 11        | M         | San Mateo                            | 41     |
| 5       | 150      | Betty    | 21        | F         | San Francisco                        | 40     |
+---------+----------+----------+-----------+-----------+--------------------------------------+--------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Set fake stats so index-only scans will be used in cases where filtering is
0: jdbc:luciddb:> -- done on indexed columns.
0: jdbc:luciddb:> call sys_boot.mgmt.stat_set_row_count('LOCALDB', 'RC', 'EMPS', 1000);
0: jdbc:luciddb:> call sys_boot.mgmt.stat_set_row_count('LOCALDB', 'RC', 'TEMPEMPS', 1000);
0: jdbc:luciddb:> call sys_boot.mgmt.stat_set_row_count
. . . . . . . . >     ('LOCALDB', 'RC', 'NULLABLETEMPEMPS', 1000);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> ------------------------------------------------------------------------------
0: jdbc:luciddb:> -- Cases where the optimization can be used.  Note that we can verify that it
0: jdbc:luciddb:> -- was used by checking that the rows still have their original rid values.
0: jdbc:luciddb:> ------------------------------------------------------------------------------
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Simplest case -- update a single column that's not indexed.  All rows are
0: jdbc:luciddb:> -- updated.
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set salary = salary * .25;
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 0       | 100    | Fred    | 10      |         |                                 | 25   | 5625.00   |
| 1       | 110    | Eric    | 20      | M       | San Francisco                   | 80   | 18000.00  |
| 2       | 120    | Wilma   | 20      | F       |                                 | 50   | 11250.00  |
| 3       | 130    | John    | 40      | M       | Vancouver                       |      |           |
| 4       | 140    | Barney  | 10      | M       | San Mateo                       | 41   | 12500.00  |
| 5       | 150    | Betty   | 20      | F       | San Francisco                   | 40   | 22500.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> -- make sure the affected row count is 5, not 6 since one of the rows has
0: jdbc:luciddb:> -- a null salary value, which is unaffected by the update
0: jdbc:luciddb:> select * from sys_boot.mgmt.session_parameters_view
. . . . . . . . >     where param_name = 'lastUpsertRowsInserted';
+-------------------------+--------------+
|       PARAM_NAME        | PARAM_VALUE  |
+-------------------------+--------------+
| lastUpsertRowsInserted  | 5            |
+-------------------------+--------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set gender = lower(t.t_gender);
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 0       | 100    | Fred    | 10      |         |                                 | 25   | 5625.00   |
| 1       | 110    | Eric    | 20      | m       | San Francisco                   | 80   | 18000.00  |
| 2       | 120    | Wilma   | 20      | f       |                                 | 50   | 11250.00  |
| 3       | 130    | John    | 40      | m       | Vancouver                       |      |           |
| 4       | 140    | Barney  | 10      | m       | San Mateo                       | 41   | 12500.00  |
| 5       | 150    | Betty   | 20      | f       | San Francisco                   | 40   | 22500.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Update multiple columns, both of which aren't indexed.
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set salary = salary * 4, gender = upper(t.t_gender);
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 0       | 100    | Fred    | 10      |         |                                 | 25   | 22500.00  |
| 1       | 110    | Eric    | 20      | M       | San Francisco                   | 80   | 72000.00  |
| 2       | 120    | Wilma   | 20      | F       |                                 | 50   | 45000.00  |
| 3       | 130    | John    | 40      | M       | Vancouver                       |      |           |
| 4       | 140    | Barney  | 10      | M       | San Mateo                       | 41   | 50000.00  |
| 5       | 150    | Betty   | 20      | F       | San Francisco                   | 40   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Update a subset of rows.
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t
. . . . . . . . >     on t.t_empno = e.empno and e.city is not null
. . . . . . . . >     when matched then
. . . . . . . . >         update set gender = lower(t.t_gender), name = lower(t.t_name);
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 0       | 100    | Fred    | 10      |         |                                 | 25   | 22500.00  |
| 1       | 110    | eric    | 20      | m       | San Francisco                   | 80   | 72000.00  |
| 2       | 120    | Wilma   | 20      | F       |                                 | 50   | 45000.00  |
| 3       | 130    | john    | 40      | m       | Vancouver                       |      |           |
| 4       | 140    | barney  | 10      | m       | San Mateo                       | 41   | 50000.00  |
| 5       | 150    | betty   | 20      | f       | San Francisco                   | 40   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Executes the updates using actual update statements
0: jdbc:luciddb:> update emps set gender = upper(gender) where gender = lower(gender);
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 0       | 100    | Fred    | 10      |         |                                 | 25   | 22500.00  |
| 1       | 110    | eric    | 20      | M       | San Francisco                   | 80   | 72000.00  |
| 2       | 120    | Wilma   | 20      | F       |                                 | 50   | 45000.00  |
| 3       | 130    | john    | 40      | M       | Vancouver                       |      |           |
| 4       | 140    | barney  | 10      | M       | San Mateo                       | 41   | 50000.00  |
| 5       | 150    | betty   | 20      | F       | San Francisco                   | 40   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> update emps set gender = lower(gender) where gender = 'M';
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 0       | 100    | Fred    | 10      |         |                                 | 25   | 22500.00  |
| 1       | 110    | eric    | 20      | m       | San Francisco                   | 80   | 72000.00  |
| 2       | 120    | Wilma   | 20      | F       |                                 | 50   | 45000.00  |
| 3       | 130    | john    | 40      | m       | Vancouver                       |      |           |
| 4       | 140    | barney  | 10      | m       | San Mateo                       | 41   | 50000.00  |
| 5       | 150    | betty   | 20      | F       | San Francisco                   | 40   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Update columns that are indexed.  Verify that the indexes are still usable.
0: jdbc:luciddb:> -- (Double check via explain plan that the indexes are in fact being used.)
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- this only affects a single index
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t
. . . . . . . . >     on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set age = age * 2;
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 0       | 100    | Fred    | 10      |         |                                 | 50   | 22500.00  |
| 1       | 110    | eric    | 20      | m       | San Francisco                   | 160  | 72000.00  |
| 2       | 120    | Wilma   | 20      | F       |                                 | 100  | 45000.00  |
| 3       | 130    | john    | 40      | m       | Vancouver                       |      |           |
| 4       | 140    | barney  | 10      | m       | San Mateo                       | 82   | 50000.00  |
| 5       | 150    | betty   | 20      | F       | San Francisco                   | 80   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> !set outputformat csv
0: jdbc:luciddb:> explain plan for
. . . . . . . . >     select city, age from emps where city >= 'A' union
. . . . . . . . >     select city, age from emps where city is null
. . . . . . . . >     order by city, age;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0, 1]], discardDuplicates=[false])'
'    LhxAggRel(groupCount=[2])'
'      FennelMergeRel'
'        LcsNormalizerRel'
'          LcsIndexOnlyScanRel(table=[[LOCALDB, RC, EMPS]], index=[ICITY], projection=[[0, 1, 2, 3, 4]], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]])'
'            FennelValuesRel(tuples=[[{ '[', 'A                             ', '+', null }]])'
'        LcsNormalizerRel'
'          LcsIndexOnlyScanRel(table=[[LOCALDB, RC, EMPS]], index=[ICITY], projection=[[0, 1, 2, 3, 4]], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]])'
'            FennelValuesRel(tuples=[[{ '[', null, ']', null }]])'
0: jdbc:luciddb:> !set outputformat table
0: jdbc:luciddb:> select city, age from emps where city >= 'A' union
. . . . . . . . >     select city, age from emps where city is null
. . . . . . . . >     order by city, age;
+---------------------------------+------+
|              CITY               | AGE  |
+---------------------------------+------+
|                                 | 50   |
|                                 | 100  |
| San Francisco                   | 80   |
| San Francisco                   | 160  |
| San Mateo                       | 82   |
| Vancouver                       |      |
+---------------------------------+------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- repeat the above MERGE to ensure that a previously prepared statement
0: jdbc:luciddb:> -- executes properly
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t
. . . . . . . . >     on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set age = age * 2;
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 0       | 100    | Fred    | 10      |         |                                 | 100  | 22500.00  |
| 1       | 110    | eric    | 20      | m       | San Francisco                   | 320  | 72000.00  |
| 2       | 120    | Wilma   | 20      | F       |                                 | 200  | 45000.00  |
| 3       | 130    | john    | 40      | m       | Vancouver                       |      |           |
| 4       | 140    | barney  | 10      | m       | San Mateo                       | 164  | 50000.00  |
| 5       | 150    | betty   | 20      | F       | San Francisco                   | 160  | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> select city, age from emps where city >= 'A' union
. . . . . . . . >     select city, age from emps where city is null
. . . . . . . . >     order by city, age;
+---------------------------------+------+
|              CITY               | AGE  |
+---------------------------------+------+
|                                 | 100  |
|                                 | 200  |
| San Francisco                   | 160  |
| San Francisco                   | 320  |
| San Mateo                       | 164  |
| Vancouver                       |      |
+---------------------------------+------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- this affects two indexes
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t
. . . . . . . . >     on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set deptno = t.t_deptno, age = t.t_age * 2;
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 0       | 100    | Fred    | 11      |         |                                 | 50   | 22500.00  |
| 1       | 110    | eric    | 21      | m       | San Francisco                   | 160  | 72000.00  |
| 2       | 120    | Wilma   | 21      | F       |                                 | 100  | 45000.00  |
| 3       | 130    | john    | 41      | m       | Vancouver                       |      |           |
| 4       | 140    | barney  | 11      | m       | San Mateo                       | 82   | 50000.00  |
| 5       | 150    | betty   | 21      | F       | San Francisco                   | 80   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> !set outputformat csv
0: jdbc:luciddb:> explain plan for select deptno from emps where deptno > 0 order by deptno;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    LcsNormalizerRel'
'      LcsIndexOnlyScanRel(table=[[LOCALDB, RC, EMPS]], index=[IDEPTNO], projection=[[0, 1, 2, 3]], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]])'
'        FennelValuesRel(tuples=[[{ '(', 0, '+', null }]])'
0: jdbc:luciddb:> !set outputformat table
0: jdbc:luciddb:> select deptno from emps where deptno > 0 order by deptno;
+---------+
| DEPTNO  |
+---------+
| 11      |
| 11      |
| 21      |
| 21      |
| 21      |
| 41      |
+---------+
0: jdbc:luciddb:> select city, age from emps where city >= 'A' union
. . . . . . . . >     select city, age from emps where city is null
. . . . . . . . >     order by city, age;
+---------------------------------+------+
|              CITY               | AGE  |
+---------------------------------+------+
|                                 | 50   |
|                                 | 100  |
| San Francisco                   | 80   |
| San Francisco                   | 160  |
| San Mateo                       | 82   |
| Vancouver                       |      |
+---------------------------------+------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Update results in calc errors.  Make sure the rows that result in errors
0: jdbc:luciddb:> -- retain their original values.
0: jdbc:luciddb:> alter session set "errorMax" = 5;
0: jdbc:luciddb:> alter session set "logDir" = 'testlog';
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t
. . . . . . . . >     on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set age = age + 32668;
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               |  AGE   |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| 0       | 100    | Fred    | 11      |         |                                 | 32718  | 22500.00  |
| 1       | 110    | eric    | 21      | m       | San Francisco                   | 160    | 72000.00  |
| 2       | 120    | Wilma   | 21      | F       |                                 | 100    | 45000.00  |
| 3       | 130    | john    | 41      | m       | Vancouver                       |        |           |
| 4       | 140    | barney  | 11      | m       | San Mateo                       | 32750  | 50000.00  |
| 5       | 150    | betty   | 21      | F       | San Francisco                   | 32748  | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
0: jdbc:luciddb:> alter session set "errorMax" = 0;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Update results in constraint violations.
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t
. . . . . . . . >     on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set empno = 0;
Error: Unique constraint violation (state=,code=0)
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               |  AGE   |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| 0       | 100    | Fred    | 11      |         |                                 | 32718  | 22500.00  |
| 1       | 110    | eric    | 21      | m       | San Francisco                   | 160    | 72000.00  |
| 2       | 120    | Wilma   | 21      | F       |                                 | 100    | 45000.00  |
| 3       | 130    | john    | 41      | m       | Vancouver                       |        |           |
| 4       | 140    | barney  | 11      | m       | San Mateo                       | 32750  | 50000.00  |
| 5       | 150    | betty   | 21      | F       | San Francisco                   | 32748  | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Update that is a "real" update, i.e., doesn't need to join with the source.
0: jdbc:luciddb:> !set outputformat csv
0: jdbc:luciddb:> explain plan for
. . . . . . . . > merge into emps e
. . . . . . . . >     using emps e2
. . . . . . . . >     on e.empno = e2.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set deptno = e2.deptno - 1, gender = upper(e2.gender),
. . . . . . . . >             age = 
. . . . . . . . >                 (case when e2.age > 32000 then (e2.age - 32668)/2
. . . . . . . . >                     else e2.age/2 end);
'column0'
'FennelToIteratorConverter'
'  LcsTableMergeRel(table=[[LOCALDB, RC, EMPS]])'
'    IteratorToFennelConverter'
'      IterCalcRel(expr#0..3=[{inputs}], expr#4=[ROW($t0, $t1, $t2)], expr#5=[1], expr#6=[-($t0, $t5)], expr#7=[UPPER($t1)], expr#8=[32000], expr#9=[>($t2, $t8)], expr#10=[32668], expr#11=[-($t2, $t10)], expr#12=[2], expr#13=[CAST($t11):DOUBLE], expr#14=[CAST($t12):DOUBLE NOT NULL], expr#15=[/($t13, $t14)], expr#16=[1E6], expr#17=[*($t15, $t16)], expr#18=[CAST($t17):BIGINT], expr#19=[Reinterpret($t18)], expr#20=[CAST($t2):DOUBLE], expr#21=[/($t20, $t14)], expr#22=[*($t21, $t16)], expr#23=[CAST($t22):BIGINT], expr#24=[Reinterpret($t23)], expr#25=[Reinterpret($t19)], expr#26=[Reinterpret($t24)], expr#27=[CASE($t9, $t25, $t26)], expr#28=[Reinterpret($t27)], expr#29=[Reinterpret($t28)], expr#30=[0], expr#31=[>($t29, $t30)], expr#32=[500000], expr#33=[+($t29, $t32)], expr#34=[-($t29, $t32)], expr#35=[CASE($t31, $t33, $t34)], expr#36=[1000000], expr#37=[/INT($t35, $t36)], expr#38=[CAST($t37):SMALLINT], expr#39=[ROW($t6, $t7, $t38)], expr#40=[$IS_DIFFERENT_FROM($t4, $t39)], expr#41=[CAST($t3):BIGINT NOT NULL], rid=[$t41], DEPTNO=[$t6], GENDER=[$t7], AGE=[$t38], $condition=[$t40])'
'        FennelToIteratorConverter'
'          LcsRowScanRel(table=[[LOCALDB, RC, EMPS]], projection=[[2, 3, 5, LCS_RID]], clustered indexes=[[SYS$CLUSTERED_INDEX$EMPS$AGE, SYS$CLUSTERED_INDEX$EMPS$DEPTNO, SYS$CLUSTERED_INDEX$EMPS$GENDER]])'
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using emps e2
. . . . . . . . >     on e.empno = e2.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set deptno = e2.deptno - 1, gender = upper(e2.gender),
. . . . . . . . >             age = 
. . . . . . . . >                 (case when e2.age > 32000 then (e2.age - 32668)/2
. . . . . . . . >                     else e2.age/2 end);
0: jdbc:luciddb:> !set outputformat table
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 0       | 100    | Fred    | 10      |         |                                 | 25   | 22500.00  |
| 1       | 110    | eric    | 20      | M       | San Francisco                   | 80   | 72000.00  |
| 2       | 120    | Wilma   | 20      | F       |                                 | 50   | 45000.00  |
| 3       | 130    | john    | 40      | M       | Vancouver                       |      |           |
| 4       | 140    | barney  | 10      | M       | San Mateo                       | 41   | 50000.00  |
| 5       | 150    | betty   | 20      | F       | San Francisco                   | 40   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Create a label before we delete some rows; we'll use it later to verify
0: jdbc:luciddb:> -- that we still have access to the state of the data before a bunch of
0: jdbc:luciddb:> -- mods.
0: jdbc:luciddb:> create label l;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Delete some rows and then update all rows.
0: jdbc:luciddb:> delete from emps where name <> lower(name);
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 1       | 110    | eric    | 20      | M       | San Francisco                   | 80   | 72000.00  |
| 3       | 130    | john    | 40      | M       | Vancouver                       |      |           |
| 4       | 140    | barney  | 10      | M       | San Mateo                       | 41   | 50000.00  |
| 5       | 150    | betty   | 20      | F       | San Francisco                   | 40   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t
. . . . . . . . >     on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set name = upper(t.t_name);
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 1       | 110    | ERIC    | 20      | M       | San Francisco                   | 80   | 72000.00  |
| 3       | 130    | JOHN    | 40      | M       | Vancouver                       |      |           |
| 4       | 140    | BARNEY  | 10      | M       | San Mateo                       | 41   | 50000.00  |
| 5       | 150    | BETTY   | 20      | F       | San Francisco                   | 40   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- update the unique index
0: jdbc:luciddb:> merge into emps e using emps e2 on e.empno = e2.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set empno = e.empno - 100;
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 1       | 10     | ERIC    | 20      | M       | San Francisco                   | 80   | 72000.00  |
| 3       | 30     | JOHN    | 40      | M       | Vancouver                       |      |           |
| 4       | 40     | BARNEY  | 10      | M       | San Mateo                       | 41   | 50000.00  |
| 5       | 50     | BETTY   | 20      | F       | San Francisco                   | 40   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> !set outputformat csv
0: jdbc:luciddb:> explain plan for select empno from emps where empno >= 0 order by empno;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    LcsNormalizerRel'
'      LcsIndexOnlyScanRel(table=[[LOCALDB, RC, EMPS]], index=[SYS$CONSTRAINT_INDEX$SYS$UNIQUE_KEY$EMPS$EMPNO], projection=[[0, 1, 2, 3]], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]])'
'        FennelValuesRel(tuples=[[{ '[', 0, '+', null }]])'
0: jdbc:luciddb:> !set outputformat table
0: jdbc:luciddb:> select empno from emps where empno >= 0 order by empno;
+--------+
| EMPNO  |
+--------+
| 10     |
| 30     |
| 40     |
| 50     |
+--------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- put the unique column back to its original value
0: jdbc:luciddb:> merge into emps e using emps e2 on e.empno = e2.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set empno = e.empno + 100;
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 1       | 110    | ERIC    | 20      | M       | San Francisco                   | 80   | 72000.00  |
| 3       | 130    | JOHN    | 40      | M       | Vancouver                       |      |           |
| 4       | 140    | BARNEY  | 10      | M       | San Mateo                       | 41   | 50000.00  |
| 5       | 150    | BETTY   | 20      | F       | San Francisco                   | 40   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> select empno from emps where empno >= 0 order by empno;
+--------+
| EMPNO  |
+--------+
| 110    |
| 130    |
| 140    |
| 150    |
+--------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Combo test that exercises a combination of most of the previous conditions:
0: jdbc:luciddb:> -- multiple columns, filters rows, calc errors, deleted rows, real update,
0: jdbc:luciddb:> -- multiple indexes
0: jdbc:luciddb:> alter session set "errorMax" = 5;
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using emps e2
. . . . . . . . >     on e2.empno = e.empno and e.age is not null
. . . . . . . . >     when matched then
. . . . . . . . >         update set
. . . . . . . . >             name = lower(e2.name),
. . . . . . . . >             deptno = e2.deptno - 1,           
. . . . . . . . >             age = e.age + 32688;
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               |  AGE   |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| 1       | 110    | ERIC    | 20      | M       | San Francisco                   | 80     | 72000.00  |
| 3       | 130    | JOHN    | 40      | M       | Vancouver                       |        |           |
| 4       | 140    | barney  | 9       | M       | San Mateo                       | 32729  | 50000.00  |
| 5       | 150    | betty   | 19      | F       | San Francisco                   | 32728  | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
0: jdbc:luciddb:> select deptno from emps where deptno > 0 order by deptno;
+---------+
| DEPTNO  |
+---------+
| 9       |
| 19      |
| 20      |
| 40      |
+---------+
0: jdbc:luciddb:> select city, age from emps where city >= 'A' union
. . . . . . . . >     select city, age from emps where city is null
. . . . . . . . >     order by city, age;
+---------------------------------+--------+
|              CITY               |  AGE   |
+---------------------------------+--------+
| San Francisco                   | 80     |
| San Francisco                   | 32728  |
| San Mateo                       | 32729  |
| Vancouver                       |        |
+---------------------------------+--------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Set session label and verify we get back the old data.  Also verify the
0: jdbc:luciddb:> -- indexes.
0: jdbc:luciddb:> alter session set "label" = 'L';
0: jdbc:luciddb:> select * from emps order by empno;
+--------+---------+---------+---------+---------------------------------+------+-----------+
| EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+--------+---------+---------+---------+---------------------------------+------+-----------+
| 100    | Fred    | 10      |         |                                 | 25   | 22500.00  |
| 110    | eric    | 20      | M       | San Francisco                   | 80   | 72000.00  |
| 120    | Wilma   | 20      | F       |                                 | 50   | 45000.00  |
| 130    | john    | 40      | M       | Vancouver                       |      |           |
| 140    | barney  | 10      | M       | San Mateo                       | 41   | 50000.00  |
| 150    | betty   | 20      | F       | San Francisco                   | 40   | 90000.00  |
+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> select deptno from emps where deptno > 0 order by deptno;
+---------+
| DEPTNO  |
+---------+
| 10      |
| 10      |
| 20      |
| 20      |
| 20      |
| 40      |
+---------+
0: jdbc:luciddb:> select city, age from emps where city >= 'A' union
. . . . . . . . >     select city, age from emps where city is null
. . . . . . . . >     order by city, age;
+---------------------------------+------+
|              CITY               | AGE  |
+---------------------------------+------+
|                                 | 25   |
|                                 | 50   |
| San Francisco                   | 40   |
| San Francisco                   | 80   |
| San Mateo                       | 41   |
| Vancouver                       |      |
+---------------------------------+------+
0: jdbc:luciddb:> alter session set "label" = null;
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Verify that the optimization can be used even when the join key from the
0: jdbc:luciddb:> -- target table is non-unique
0: jdbc:luciddb:> create table nonUniqueEmps(
. . . . . . . . >     empno int not null, name varchar(20) not null, deptno int,
. . . . . . . . >     gender char(1), city char(30), age smallint, salary numeric(10,2));
0: jdbc:luciddb:> insert into nonUniqueEmps select * from emps;
0: jdbc:luciddb:> insert into nonUniqueEmps values(
. . . . . . . . >     110, 'EricJr', 20, 'M', 'San Francisco', 40, 36000);
0: jdbc:luciddb:> insert into nonUniqueEmps values(130, 'JohnJr', 40, 'M', 'Vancouver', 10, null);
0: jdbc:luciddb:> call sys_boot.mgmt.stat_set_row_count('LOCALDB', 'RC', 'NONUNIQUEEMPS', 1000);
0: jdbc:luciddb:> select lcs_rid(empno), * from nonUniqueEmps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               |  AGE   |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| 0       | 110    | ERIC    | 20      | M       | San Francisco                   | 80     | 72000.00  |
| 4       | 110    | EricJr  | 20      | M       | San Francisco                   | 40     | 36000.00  |
| 1       | 130    | JOHN    | 40      | M       | Vancouver                       |        |           |
| 5       | 130    | JohnJr  | 40      | M       | Vancouver                       | 10     |           |
| 2       | 140    | barney  | 9       | M       | San Mateo                       | 32729  | 50000.00  |
| 3       | 150    | betty   | 19      | F       | San Francisco                   | 32728  | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
0: jdbc:luciddb:> merge into nonUniqueEmps e
. . . . . . . . >     using tempemps t on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set city = upper(t.t_city);
0: jdbc:luciddb:> select lcs_rid(empno), * from nonUniqueEmps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               |  AGE   |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| 0       | 110    | ERIC    | 20      | M       | SAN FRANCISCO                   | 80     | 72000.00  |
| 4       | 110    | EricJr  | 20      | M       | SAN FRANCISCO                   | 40     | 36000.00  |
| 1       | 130    | JOHN    | 40      | M       | VANCOUVER                       |        |           |
| 5       | 130    | JohnJr  | 40      | M       | VANCOUVER                       | 10     |           |
| 2       | 140    | barney  | 9       | M       | SAN MATEO                       | 32729  | 50000.00  |
| 3       | 150    | betty   | 19      | F       | SAN FRANCISCO                   | 32728  | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
0: jdbc:luciddb:> -- And also if the join key from the source is nullable
0: jdbc:luciddb:> merge into nonUniqueEmps e
. . . . . . . . >     using nullableTempEmps t on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set city = lower(t.t_city);
0: jdbc:luciddb:> select lcs_rid(empno), * from nonUniqueEmps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               |  AGE   |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
| 0       | 110    | ERIC    | 20      | M       | san francisco                   | 80     | 72000.00  |
| 4       | 110    | EricJr  | 20      | M       | san francisco                   | 40     | 36000.00  |
| 1       | 130    | JOHN    | 40      | M       | vancouver                       |        |           |
| 5       | 130    | JohnJr  | 40      | M       | vancouver                       | 10     |           |
| 2       | 140    | barney  | 9       | M       | san mateo                       | 32729  | 50000.00  |
| 3       | 150    | betty   | 19      | F       | san francisco                   | 32728  | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+--------+-----------+
0: jdbc:luciddb:> -- Source has a non-nullable key while target has a nullable one.  The row
0: jdbc:luciddb:> -- with the null key should not be updated.
0: jdbc:luciddb:> select * from emps order by empno;
+--------+---------+---------+---------+---------------------------------+--------+-----------+
| EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               |  AGE   |  SALARY   |
+--------+---------+---------+---------+---------------------------------+--------+-----------+
| 110    | ERIC    | 20      | M       | San Francisco                   | 80     | 72000.00  |
| 130    | JOHN    | 40      | M       | Vancouver                       |        |           |
| 140    | barney  | 9       | M       | San Mateo                       | 32729  | 50000.00  |
| 150    | betty   | 19      | F       | San Francisco                   | 32728  | 90000.00  |
+--------+---------+---------+---------+---------------------------------+--------+-----------+
0: jdbc:luciddb:> merge into nullableTempEmps t
. . . . . . . . >     using emps e on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set t_city = upper(e.city);
0: jdbc:luciddb:> select lcs_rid(t_empno), * from nullableTempEmps order by t_empno;
+---------+----------+----------+-----------+-----------+--------------------------------------+--------+
| EXPR$0  | T_EMPNO  |  T_NAME  | T_DEPTNO  | T_GENDER  |                T_CITY                | T_AGE  |
+---------+----------+----------+-----------+-----------+--------------------------------------+--------+
| 6       |          | Unknown  |           |           | Unknown                              |        |
| 0       | 100      | Fred     | 11        |           | San Mateo                            | 25     |
| 1       | 110      | Eric     | 21        | M         | SAN FRANCISCO                        | 80     |
| 2       | 120      | Wilma    | 21        | F         | San Mateo                            | 50     |
| 3       | 130      | John     | 41        | M         | VANCOUVER                            |        |
| 4       | 140      | Barney   | 11        | M         | SAN MATEO                            | 41     |
| 5       | 150      | Betty    | 21        | F         | SAN FRANCISCO                        | 40     |
+---------+----------+----------+-----------+-----------+--------------------------------------+--------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> ---------------------------------------------------------------------------
0: jdbc:luciddb:> -- Exercise cases where the optimization cannot be used.  In this case, the
0: jdbc:luciddb:> -- rid values after executing the MERGEs should be different.
0: jdbc:luciddb:> ---------------------------------------------------------------------------
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- not update-only
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set deptno = t.t_deptno, age = t.t_age
. . . . . . . . >     when not matched then
. . . . . . . . >         insert (empno, name, age, gender, salary, city)
. . . . . . . . >         values(t.t_empno, t.t_name, t.t_age, t.t_gender, t.t_age, t.t_city);
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 10      | 100    | Fred    |         |         | San Mateo                       | 25   | 25.00     |
| 6       | 110    | ERIC    | 21      | M       | San Francisco                   | 80   | 72000.00  |
| 11      | 120    | Wilma   |         | F       | San Mateo                       | 50   | 50.00     |
| 7       | 130    | JOHN    | 41      | M       | Vancouver                       |      |           |
| 8       | 140    | barney  | 11      | M       | San Mateo                       | 41   | 50000.00  |
| 9       | 150    | betty   | 21      | F       | San Francisco                   | 40   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- too many columns being updated
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set deptno = e.deptno - 1, age = e.age + 10,
. . . . . . . . >             salary = e.salary * 2, name = lower(e.name), city = upper(e.city);
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+------------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |   SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+------------+
| 12      | 100    | fred    |         |         | SAN MATEO                       | 35   | 50.00      |
| 13      | 110    | eric    | 20      | M       | SAN FRANCISCO                   | 90   | 144000.00  |
| 14      | 120    | wilma   |         | F       | SAN MATEO                       | 60   | 100.00     |
| 15      | 130    | john    | 40      | M       | VANCOUVER                       |      |            |
| 16      | 140    | barney  | 10      | M       | SAN MATEO                       | 51   | 100000.00  |
| 17      | 150    | betty   | 20      | F       | SAN FRANCISCO                   | 50   | 180000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- too few rows being updated
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using (select * from tempemps where t_name = 'Eric') t
. . . . . . . . >     on t.t_empno = e.empno
. . . . . . . . >     when matched then
. . . . . . . . >         update set salary = e.salary/2, city = lower(e.city);
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+------------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |   SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+------------+
| 12      | 100    | fred    |         |         | SAN MATEO                       | 35   | 50.00      |
| 18      | 110    | eric    | 20      | M       | san francisco                   | 90   | 72000.00   |
| 14      | 120    | wilma   |         | F       | SAN MATEO                       | 60   | 100.00     |
| 15      | 130    | john    | 40      | M       | VANCOUVER                       |      |            |
| 16      | 140    | barney  | 10      | M       | SAN MATEO                       | 51   | 100000.00  |
| 17      | 150    | betty   | 20      | F       | SAN FRANCISCO                   | 50   | 180000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+------------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- non-unique join keys
0: jdbc:luciddb:> merge into emps e
. . . . . . . . >     using tempemps t on e.name = lower(t.t_name)
. . . . . . . . >     when matched then
. . . . . . . . >         update set salary = e.salary/2;
0: jdbc:luciddb:> select lcs_rid(empno), * from emps order by empno;
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| EXPR$0  | EMPNO  |  NAME   | DEPTNO  | GENDER  |              CITY               | AGE  |  SALARY   |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
| 19      | 100    | fred    |         |         | SAN MATEO                       | 35   | 25.00     |
| 20      | 110    | eric    | 20      | M       | san francisco                   | 90   | 36000.00  |
| 21      | 120    | wilma   |         | F       | SAN MATEO                       | 60   | 50.00     |
| 15      | 130    | john    | 40      | M       | VANCOUVER                       |      |           |
| 22      | 140    | barney  | 10      | M       | SAN MATEO                       | 51   | 50000.00  |
| 23      | 150    | betty   | 20      | F       | SAN FRANCISCO                   | 50   | 90000.00  |
+---------+--------+---------+---------+---------+---------------------------------+------+-----------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> ------------------------------------------------------------------------
0: jdbc:luciddb:> -- Do another combo test with a slightly larger dataset and more indexes
0: jdbc:luciddb:> ------------------------------------------------------------------------
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create table t(
. . . . . . . . >         a int generated always as identity primary key, b smallint, c smallint,
. . . . . . . . >         d int, e int, f int, g int)
. . . . . . . . >     create clustered index t_a on t(a)
. . . . . . . . >     create clustered index t_b on t(b)
. . . . . . . . >     create clustered index t_c on t(c)
. . . . . . . . >     create clustered index t_defg on t(d, e, f, g);
0: jdbc:luciddb:> create index it1 on t(b);
0: jdbc:luciddb:> create index it2 on t(c);
0: jdbc:luciddb:> create index it3 on t(a, b);
0: jdbc:luciddb:> create index it4 on t(a, c);
0: jdbc:luciddb:> create index it5 on t(g);
0: jdbc:luciddb:> create index it6 on t(a, e);
0: jdbc:luciddb:> insert into t(b, c, d, e, f, g) values(10, 100, 1, 1, 1, 1);
0: jdbc:luciddb:> insert into t(b, c, d, e, f, g) values(20, 200, 2, 2, 2, 2);
0: jdbc:luciddb:> insert into t(b, c, d, e, f, g) values(30, 300, 3, 3, 3, 3);
0: jdbc:luciddb:> insert into t(b, c, d, e, f, g) values(40, 400, 4, 4, 4, 4);
0: jdbc:luciddb:> insert into t(b, c, d, e, f, g) values(50, 500, 5, 5, 5, 5);
0: jdbc:luciddb:> insert into t(b, c, d, e, f, g) values(60, 600, 6, 6, 6, 6);
0: jdbc:luciddb:> insert into t(b, c, d, e, f, g) values(70, 700, 7, 7, 7, 7);
0: jdbc:luciddb:> insert into t(b, c, d, e, f, g) values(80, 800, 8, 8, 8, 8);
0: jdbc:luciddb:> insert into t(b, c, d, e, f, g) values(90, 900, 9, 9, 9, 9);
0: jdbc:luciddb:> insert into t(b, c, d, e, f, g) values(100, 1000, 10, 10, 10, 10);
0: jdbc:luciddb:> insert into t(b, c, d, e, f, g)
. . . . . . . . >     select b + 100, c + 1000, d + 10, e + 10, f + 10, g + 10 from t;
0: jdbc:luciddb:> delete from t where a in (0, 1, 3, 11, 12, 19);
0: jdbc:luciddb:> select lcs_rid(a), * from t order by a;
+---------+-----+------+-------+-----+-----+-----+-----+
| EXPR$0  |  A  |  B   |   C   |  D  |  E  |  F  |  G  |
+---------+-----+------+-------+-----+-----+-----+-----+
| 2       | 2   | 30   | 300   | 3   | 3   | 3   | 3   |
| 4       | 4   | 50   | 500   | 5   | 5   | 5   | 5   |
| 5       | 5   | 60   | 600   | 6   | 6   | 6   | 6   |
| 6       | 6   | 70   | 700   | 7   | 7   | 7   | 7   |
| 7       | 7   | 80   | 800   | 8   | 8   | 8   | 8   |
| 8       | 8   | 90   | 900   | 9   | 9   | 9   | 9   |
| 9       | 9   | 100  | 1000  | 10  | 10  | 10  | 10  |
| 10      | 10  | 110  | 1100  | 11  | 11  | 11  | 11  |
| 13      | 13  | 140  | 1400  | 14  | 14  | 14  | 14  |
| 14      | 14  | 150  | 1500  | 15  | 15  | 15  | 15  |
| 15      | 15  | 160  | 1600  | 16  | 16  | 16  | 16  |
| 16      | 16  | 170  | 1700  | 17  | 17  | 17  | 17  |
| 17      | 17  | 180  | 1800  | 18  | 18  | 18  | 18  |
| 18      | 18  | 190  | 1900  | 19  | 19  | 19  | 19  |
+---------+-----+------+-------+-----+-----+-----+-----+
0: jdbc:luciddb:> call sys_boot.mgmt.stat_set_row_count('LOCALDB', 'RC', 'T', 1000);
0: jdbc:luciddb:> 
0: jdbc:luciddb:> alter session set "errorMax" = 10;
0: jdbc:luciddb:> merge into t
. . . . . . . . >     using t t2
. . . . . . . . >     on t.a = t2.a
. . . . . . . . >     when matched then update set 
. . . . . . . . >         b = (case when mod(t.b, 3) = 0 then t.b*275 else t2.b/10 end),
. . . . . . . . >         c = (case when mod(t.c, 8) = 0 then t.c*22 else t2.c/100 end);
0: jdbc:luciddb:> alter session set "errorMax" = 0;
0: jdbc:luciddb:> select lcs_rid(a), * from t order by a;
+---------+-----+--------+--------+-----+-----+-----+-----+
| EXPR$0  |  A  |   B    |   C    |  D  |  E  |  F  |  G  |
+---------+-----+--------+--------+-----+-----+-----+-----+
| 2       | 2   | 8250   | 3      | 3   | 3   | 3   | 3   |
| 4       | 4   | 5      | 5      | 5   | 5   | 5   | 5   |
| 5       | 5   | 16500  | 13200  | 6   | 6   | 6   | 6   |
| 6       | 6   | 7      | 7      | 7   | 7   | 7   | 7   |
| 7       | 7   | 8      | 17600  | 8   | 8   | 8   | 8   |
| 8       | 8   | 24750  | 9      | 9   | 9   | 9   | 9   |
| 9       | 9   | 10     | 22000  | 10  | 10  | 10  | 10  |
| 10      | 10  | 11     | 11     | 11  | 11  | 11  | 11  |
| 13      | 13  | 14     | 30800  | 14  | 14  | 14  | 14  |
| 14      | 14  | 150    | 1500   | 15  | 15  | 15  | 15  |
| 15      | 15  | 160    | 1600   | 16  | 16  | 16  | 16  |
| 16      | 16  | 17     | 17     | 17  | 17  | 17  | 17  |
| 17      | 17  | 180    | 1800   | 18  | 18  | 18  | 18  |
| 18      | 18  | 19     | 19     | 19  | 19  | 19  | 19  |
+---------+-----+--------+--------+-----+-----+-----+-----+
0: jdbc:luciddb:> !set outputformat csv
0: jdbc:luciddb:> explain plan for select a from t where a > 0 order by a;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    LcsNormalizerRel'
'      LcsIndexOnlyScanRel(table=[[LOCALDB, RC, T]], index=[SYS$CONSTRAINT_INDEX$SYS$PRIMARY_KEY$T], projection=[[0, 1, 2, 3]], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]])'
'        FennelValuesRel(tuples=[[{ '(', 0, '+', null }]])'
0: jdbc:luciddb:> explain plan for select b from t where b > 0 order by b;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    LcsNormalizerRel'
'      LcsIndexOnlyScanRel(table=[[LOCALDB, RC, T]], index=[IT1], projection=[[0, 1, 2, 3]], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]])'
'        FennelValuesRel(tuples=[[{ '(', 0, '+', null }]])'
0: jdbc:luciddb:> explain plan for select c from t where c > 0 order by c;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    LcsNormalizerRel'
'      LcsIndexOnlyScanRel(table=[[LOCALDB, RC, T]], index=[IT2], projection=[[0, 1, 2, 3]], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]])'
'        FennelValuesRel(tuples=[[{ '(', 0, '+', null }]])'
0: jdbc:luciddb:> explain plan for select a, b from t where a > 0 order by a;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    LcsNormalizerRel'
'      LcsIndexOnlyScanRel(table=[[LOCALDB, RC, T]], index=[IT3], projection=[[0, 1, 2, 3, 4]], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]])'
'        FennelValuesRel(tuples=[[{ '(', 0, '+', null }]])'
0: jdbc:luciddb:> explain plan for select a, c from t where a > 0 order by a;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    LcsNormalizerRel'
'      LcsIndexOnlyScanRel(table=[[LOCALDB, RC, T]], index=[IT4], projection=[[0, 1, 2, 3, 4]], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]])'
'        FennelValuesRel(tuples=[[{ '(', 0, '+', null }]])'
0: jdbc:luciddb:> explain plan for select g from t where g > 0 order by g;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    LcsNormalizerRel'
'      LcsIndexOnlyScanRel(table=[[LOCALDB, RC, T]], index=[IT5], projection=[[0, 1, 2, 3]], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]])'
'        FennelValuesRel(tuples=[[{ '(', 0, '+', null }]])'
0: jdbc:luciddb:> explain plan for select a, e from t where a > 0 order by a;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    LcsNormalizerRel'
'      LcsIndexOnlyScanRel(table=[[LOCALDB, RC, T]], index=[IT6], projection=[[0, 1, 2, 3, 4]], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]])'
'        FennelValuesRel(tuples=[[{ '(', 0, '+', null }]])'
0: jdbc:luciddb:> !set outputformat table
0: jdbc:luciddb:> select a from t where a > 0 order by a;
+-----+
|  A  |
+-----+
| 2   |
| 4   |
| 5   |
| 6   |
| 7   |
| 8   |
| 9   |
| 10  |
| 13  |
| 14  |
| 15  |
| 16  |
| 17  |
| 18  |
+-----+
0: jdbc:luciddb:> select b from t where b > 0 order by b;
+--------+
|   B    |
+--------+
| 5      |
| 7      |
| 8      |
| 10     |
| 11     |
| 14     |
| 17     |
| 19     |
| 150    |
| 160    |
| 180    |
| 8250   |
| 16500  |
| 24750  |
+--------+
0: jdbc:luciddb:> select c from t where c > 0 order by c;
+--------+
|   C    |
+--------+
| 3      |
| 5      |
| 7      |
| 9      |
| 11     |
| 17     |
| 19     |
| 1500   |
| 1600   |
| 1800   |
| 13200  |
| 17600  |
| 22000  |
| 30800  |
+--------+
0: jdbc:luciddb:> select a, b from t where a > 0 order by a;
+-----+--------+
|  A  |   B    |
+-----+--------+
| 2   | 8250   |
| 4   | 5      |
| 5   | 16500  |
| 6   | 7      |
| 7   | 8      |
| 8   | 24750  |
| 9   | 10     |
| 10  | 11     |
| 13  | 14     |
| 14  | 150    |
| 15  | 160    |
| 16  | 17     |
| 17  | 180    |
| 18  | 19     |
+-----+--------+
0: jdbc:luciddb:> select a, c from t where a > 0 order by a;
+-----+--------+
|  A  |   C    |
+-----+--------+
| 2   | 3      |
| 4   | 5      |
| 5   | 13200  |
| 6   | 7      |
| 7   | 17600  |
| 8   | 9      |
| 9   | 22000  |
| 10  | 11     |
| 13  | 30800  |
| 14  | 1500   |
| 15  | 1600   |
| 16  | 17     |
| 17  | 1800   |
| 18  | 19     |
+-----+--------+
0: jdbc:luciddb:> select g from t where g > 0 order by g;
+-----+
|  G  |
+-----+
| 3   |
| 5   |
| 6   |
| 7   |
| 8   |
| 9   |
| 10  |
| 11  |
| 14  |
| 15  |
| 16  |
| 17  |
| 18  |
| 19  |
+-----+
0: jdbc:luciddb:> select a, e from t where a > 0 order by a;
+-----+-----+
|  A  |  E  |
+-----+-----+
| 2   | 3   |
| 4   | 5   |
| 5   | 6   |
| 6   | 7   |
| 7   | 8   |
| 8   | 9   |
| 9   | 10  |
| 10  | 11  |
| 13  | 14  |
| 14  | 15  |
| 15  | 16  |
| 16  | 17  |
| 17  | 18  |
| 18  | 19  |
+-----+-----+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- update the unique index along with other columns
0: jdbc:luciddb:> merge into t
. . . . . . . . >     using t t2
. . . . . . . . >     on t.a = t2.a
. . . . . . . . >     when matched then update set 
. . . . . . . . >         a = t.a*10,
. . . . . . . . >         b = (case when t.b > 1000 then t.b/275 
. . . . . . . . >                 when t.b < 20 then t.b*10
. . . . . . . . >                 else t.b end),
. . . . . . . . >         c = (case when t.c > 10000 then t.c/22
. . . . . . . . >                 when t.c > 1000 then t.c
. . . . . . . . >                 else t.c*100 end);
0: jdbc:luciddb:> select lcs_rid(a), * from t order by a;
+---------+------+------+-------+-----+-----+-----+-----+
| EXPR$0  |  A   |  B   |   C   |  D  |  E  |  F  |  G  |
+---------+------+------+-------+-----+-----+-----+-----+
| 2       | 20   | 30   | 300   | 3   | 3   | 3   | 3   |
| 4       | 40   | 50   | 500   | 5   | 5   | 5   | 5   |
| 5       | 50   | 60   | 600   | 6   | 6   | 6   | 6   |
| 6       | 60   | 70   | 700   | 7   | 7   | 7   | 7   |
| 7       | 70   | 80   | 800   | 8   | 8   | 8   | 8   |
| 8       | 80   | 90   | 900   | 9   | 9   | 9   | 9   |
| 9       | 90   | 100  | 1000  | 10  | 10  | 10  | 10  |
| 10      | 100  | 110  | 1100  | 11  | 11  | 11  | 11  |
| 13      | 130  | 140  | 1400  | 14  | 14  | 14  | 14  |
| 14      | 140  | 150  | 1500  | 15  | 15  | 15  | 15  |
| 15      | 150  | 160  | 1600  | 16  | 16  | 16  | 16  |
| 16      | 160  | 170  | 1700  | 17  | 17  | 17  | 17  |
| 17      | 170  | 180  | 1800  | 18  | 18  | 18  | 18  |
| 18      | 180  | 190  | 1900  | 19  | 19  | 19  | 19  |
+---------+------+------+-------+-----+-----+-----+-----+
0: jdbc:luciddb:> select a from t where a > 0 order by a;
+------+
|  A   |
+------+
| 20   |
| 40   |
| 50   |
| 60   |
| 70   |
| 80   |
| 90   |
| 100  |
| 130  |
| 140  |
| 150  |
| 160  |
| 170  |
| 180  |
+------+
0: jdbc:luciddb:> select b from t where b > 0 order by b;
+------+
|  B   |
+------+
| 30   |
| 50   |
| 60   |
| 70   |
| 80   |
| 90   |
| 100  |
| 110  |
| 140  |
| 150  |
| 160  |
| 170  |
| 180  |
| 190  |
+------+
0: jdbc:luciddb:> select c from t where c > 0 order by c;
+-------+
|   C   |
+-------+
| 300   |
| 500   |
| 600   |
| 700   |
| 800   |
| 900   |
| 1000  |
| 1100  |
| 1400  |
| 1500  |
| 1600  |
| 1700  |
| 1800  |
| 1900  |
+-------+
0: jdbc:luciddb:> select a, b from t where a > 0 order by a;
+------+------+
|  A   |  B   |
+------+------+
| 20   | 30   |
| 40   | 50   |
| 50   | 60   |
| 60   | 70   |
| 70   | 80   |
| 80   | 90   |
| 90   | 100  |
| 100  | 110  |
| 130  | 140  |
| 140  | 150  |
| 150  | 160  |
| 160  | 170  |
| 170  | 180  |
| 180  | 190  |
+------+------+
0: jdbc:luciddb:> select a, c from t where a > 0 order by a;
+------+-------+
|  A   |   C   |
+------+-------+
| 20   | 300   |
| 40   | 500   |
| 50   | 600   |
| 60   | 700   |
| 70   | 800   |
| 80   | 900   |
| 90   | 1000  |
| 100  | 1100  |
| 130  | 1400  |
| 140  | 1500  |
| 150  | 1600  |
| 160  | 1700  |
| 170  | 1800  |
| 180  | 1900  |
+------+-------+
0: jdbc:luciddb:> select g from t where g > 0 order by g;
+-----+
|  G  |
+-----+
| 3   |
| 5   |
| 6   |
| 7   |
| 8   |
| 9   |
| 10  |
| 11  |
| 14  |
| 15  |
| 16  |
| 17  |
| 18  |
| 19  |
+-----+
0: jdbc:luciddb:> select a, e from t where a > 0 order by a;
+------+-----+
|  A   |  E  |
+------+-----+
| 20   | 3   |
| 40   | 5   |
| 50   | 6   |
| 60   | 7   |
| 70   | 8   |
| 80   | 9   |
| 90   | 10  |
| 100  | 11  |
| 130  | 14  |
| 140  | 15  |
| 150  | 16  |
| 160  | 17  |
| 170  | 18  |
| 180  | 19  |
+------+-----+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- Verify that the optimization cannot be used when updating a column that's
0: jdbc:luciddb:> -- part of a multi-column cluster.
0: jdbc:luciddb:> merge into t
. . . . . . . . >     using t t2
. . . . . . . . >     on t.a = t2.a
. . . . . . . . >     when matched then update set g = t.g * 2;
0: jdbc:luciddb:> select lcs_rid(a), * from t order by a;
+---------+------+------+-------+-----+-----+-----+-----+
| EXPR$0  |  A   |  B   |   C   |  D  |  E  |  F  |  G  |
+---------+------+------+-------+-----+-----+-----+-----+
| 20      | 20   | 30   | 300   | 3   | 3   | 3   | 6   |
| 21      | 40   | 50   | 500   | 5   | 5   | 5   | 10  |
| 22      | 50   | 60   | 600   | 6   | 6   | 6   | 12  |
| 23      | 60   | 70   | 700   | 7   | 7   | 7   | 14  |
| 24      | 70   | 80   | 800   | 8   | 8   | 8   | 16  |
| 25      | 80   | 90   | 900   | 9   | 9   | 9   | 18  |
| 26      | 90   | 100  | 1000  | 10  | 10  | 10  | 20  |
| 27      | 100  | 110  | 1100  | 11  | 11  | 11  | 22  |
| 28      | 130  | 140  | 1400  | 14  | 14  | 14  | 28  |
| 29      | 140  | 150  | 1500  | 15  | 15  | 15  | 30  |
| 30      | 150  | 160  | 1600  | 16  | 16  | 16  | 32  |
| 31      | 160  | 170  | 1700  | 17  | 17  | 17  | 34  |
| 32      | 170  | 180  | 1800  | 18  | 18  | 18  | 36  |
| 33      | 180  | 190  | 1900  | 19  | 19  | 19  | 38  |
+---------+------+------+-------+-----+-----+-----+-----+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> -- LER-10611 -- Verify that duplicate keys that correspond to deleted rows
0: jdbc:luciddb:> -- are ignored when rebuilding the unique index; otherwise, the 4th merge
0: jdbc:luciddb:> -- statement below incorrectly results in a constraint violation.
0: jdbc:luciddb:> 
0: jdbc:luciddb:> create table u(a int primary key, b int);
0: jdbc:luciddb:> insert into u values(0,0);
0: jdbc:luciddb:> insert into u values(1,1);
0: jdbc:luciddb:> call sys_boot.mgmt.stat_set_row_count('LOCALDB', 'RC', 'U', 10000);
0: jdbc:luciddb:> select lcs_rid(a), * from u order by a;
+---------+----+----+
| EXPR$0  | A  | B  |
+---------+----+----+
| 0       | 0  | 0  |
| 1       | 1  | 1  |
+---------+----+----+
0: jdbc:luciddb:> -- for the next two merge statements, we do NOT want to enable the optimization;
0: jdbc:luciddb:> -- the filter on b should be selective enough so the optimization is disabled
0: jdbc:luciddb:> merge into u as tgt using (select * from u where b = 1) as src
. . . . . . . . >     on tgt.a = src.a
. . . . . . . . >     when matched then update set b = 2;
0: jdbc:luciddb:> select lcs_rid(a), * from u order by a;
+---------+----+----+
| EXPR$0  | A  | B  |
+---------+----+----+
| 0       | 0  | 0  |
| 2       | 1  | 2  |
+---------+----+----+
0: jdbc:luciddb:> merge into u as tgt using (select * from u where b = 2) as src 
. . . . . . . . >     on tgt.a = src.a
. . . . . . . . >     when matched then update set b = 3;
0: jdbc:luciddb:> select lcs_rid(a), * from u order by a;
+---------+----+----+
| EXPR$0  | A  | B  |
+---------+----+----+
| 0       | 0  | 0  |
| 3       | 1  | 3  |
+---------+----+----+
0: jdbc:luciddb:> -- this statement is just to show that the filter "b + 1 >= 4" will
0: jdbc:luciddb:> -- cause the optimization to be used; so the rid values returned should be
0: jdbc:luciddb:> -- identical to those returned previously -- 0 and 3
0: jdbc:luciddb:> merge into u as tgt using (select * from u where b + 1 >= 4) as src
. . . . . . . . >     on tgt.a = src.a
. . . . . . . . >     when matched then update set b = 4;
0: jdbc:luciddb:> select lcs_rid(a), * from u order by a;
+---------+----+----+
| EXPR$0  | A  | B  |
+---------+----+----+
| 0       | 0  | 0  |
| 3       | 1  | 4  |
+---------+----+----+
0: jdbc:luciddb:> -- so for this statement, the optimization should be used and the rid values
0: jdbc:luciddb:> -- returned should be the same as prior to the merge -- 0 and 3
0: jdbc:luciddb:> merge into u as tgt using (select * from u where b + 1 >= 5) as src
. . . . . . . . >     on tgt.a = src.a
. . . . . . . . >     when matched then update set a = 2;
0: jdbc:luciddb:> select lcs_rid(a), * from u order by a;
+---------+----+----+
| EXPR$0  | A  | B  |
+---------+----+----+
| 0       | 0  | 0  |
| 3       | 2  | 4  |
+---------+----+----+
0: jdbc:luciddb:> -- check that the data is properly stored in the index
0: jdbc:luciddb:> !set outputformat csv
0: jdbc:luciddb:> explain plan for select * from u where a >= 0 order by a;
'column0'
'FennelToIteratorConverter'
'  FennelSortRel(key=[[0]], discardDuplicates=[false])'
'    LcsRowScanRel(table=[[LOCALDB, RC, U]], projection=[*], clustered indexes=[[SYS$CLUSTERED_INDEX$U$A, SYS$CLUSTERED_INDEX$U$B]])'
'      LcsIndexMergeRel(consumerSridParamId=[0], segmentLimitParamId=[0], ridLimitParamId=[1])'
'        LcsIndexSearchRel(table=[[LOCALDB, RC, U]], index=[SYS$CONSTRAINT_INDEX$SYS$PRIMARY_KEY$U], projection=[*], inputKeyProj=[[1, 3]], inputDirectiveProj=[[0, 2]], startRidParamId=[0], rowLimitParamId=[0])'
'          FennelValuesRel(tuples=[[{ '[', 0, '+', null }]])'
0: jdbc:luciddb:> !set outputformat table
0: jdbc:luciddb:> select * from u where a >= 0 order by a;
+----+----+
| A  | B  |
+----+----+
| 0  | 0  |
| 2  | 4  |
+----+----+
0: jdbc:luciddb:> -- verify things work as well when the key value 1 is inserted, deleted, and
0: jdbc:luciddb:> -- then an existing entry is updated to the key value 1; the update should not
0: jdbc:luciddb:> -- result in a constraint violation
0: jdbc:luciddb:> insert into u values(1, 1);
0: jdbc:luciddb:> select lcs_rid(a), * from u order by a;
+---------+----+----+
| EXPR$0  | A  | B  |
+---------+----+----+
| 0       | 0  | 0  |
| 4       | 1  | 1  |
| 3       | 2  | 4  |
+---------+----+----+
0: jdbc:luciddb:> delete from u where a = 1;
0: jdbc:luciddb:> select lcs_rid(a), * from u order by a;
+---------+----+----+
| EXPR$0  | A  | B  |
+---------+----+----+
| 0       | 0  | 0  |
| 3       | 2  | 4  |
+---------+----+----+
0: jdbc:luciddb:> update u set a = a + 1;
0: jdbc:luciddb:> select lcs_rid(a), * from u order by a;
+---------+----+----+
| EXPR$0  | A  | B  |
+---------+----+----+
| 0       | 1  | 0  |
| 3       | 3  | 4  |
+---------+----+----+
0: jdbc:luciddb:> select * from u where a >= 0 order by a;
+----+----+
| A  | B  |
+----+----+
| 1  | 0  |
| 3  | 4  |
+----+----+
0: jdbc:luciddb:> -- make sure violations are returned when appropriate
0: jdbc:luciddb:> update u set a = 2;
Error: Unique constraint violation (state=,code=0)
0: jdbc:luciddb:> select lcs_rid(a), * from u order by a;
+---------+----+----+
| EXPR$0  | A  | B  |
+---------+----+----+
| 0       | 1  | 0  |
| 3       | 3  | 4  |
+---------+----+----+
0: jdbc:luciddb:> -- verify the case where the deleted keys appear as singletons
0: jdbc:luciddb:> truncate table u;
0: jdbc:luciddb:> insert into u values(0,0);
0: jdbc:luciddb:> insert into u values(1,1);
0: jdbc:luciddb:> call sys_boot.mgmt.stat_set_row_count('LOCALDB', 'RC', 'U', 10000);
0: jdbc:luciddb:> merge into u as tgt using (select * from u where a = 1) as src
. . . . . . . . >     on tgt.a = src.a when matched then update set b = 2;
0: jdbc:luciddb:> merge into u as tgt using (select * from u where a = 1) as src 
. . . . . . . . >     on tgt.a = src.a when matched then update set b = 3;
0: jdbc:luciddb:> insert into u values(3,3),(4,4),(5,5),(6,6),(7,7),(8,8);
0: jdbc:luciddb:> update u set a = a + 1 where a > 2;
0: jdbc:luciddb:> select lcs_rid(a), * from u order by a;
+---------+----+----+
| EXPR$0  | A  | B  |
+---------+----+----+
| 0       | 0  | 0  |
| 3       | 1  | 3  |
| 4       | 4  | 3  |
| 5       | 5  | 4  |
| 6       | 6  | 5  |
| 7       | 7  | 6  |
| 8       | 8  | 7  |
| 9       | 9  | 8  |
+---------+----+----+
0: jdbc:luciddb:> select * from u where a >= 0 order by a;
+----+----+
| A  | B  |
+----+----+
| 0  | 0  |
| 1  | 3  |
| 4  | 3  |
| 5  | 4  |
| 6  | 5  |
| 7  | 6  |
| 8  | 7  |
| 9  | 8  |
+----+----+
0: jdbc:luciddb:> -- do a no-op update; verify this by checking that no new pages are allocated
0: jdbc:luciddb:> -- after the update
0: jdbc:luciddb:> call applib.create_var('RC', null, 'test context');
0: jdbc:luciddb:> call applib.create_var(
. . . . . . . . >     'RC', 'pageCount', ' used to store current page allocation count');
0: jdbc:luciddb:> call applib.set_var(
. . . . . . . . >     'RC',
. . . . . . . . >     'pageCount',
. . . . . . . . >     (select counter_value from sys_root.dba_performance_counters
. . . . . . . . >         where counter_name = 'DatabasePagesAllocated'));
0: jdbc:luciddb:> update u set a = a;
0: jdbc:luciddb:> select lcs_rid(a), * from u order by a;
+---------+----+----+
| EXPR$0  | A  | B  |
+---------+----+----+
| 0       | 0  | 0  |
| 3       | 1  | 3  |
| 4       | 4  | 3  |
| 5       | 5  | 4  |
| 6       | 6  | 5  |
| 7       | 7  | 6  |
| 8       | 8  | 7  |
| 9       | 9  | 8  |
+---------+----+----+
0: jdbc:luciddb:> select * from u where a >= 0 order by a;
+----+----+
| A  | B  |
+----+----+
| 0  | 0  |
| 1  | 3  |
| 4  | 3  |
| 5  | 4  |
| 6  | 5  |
| 7  | 6  |
| 8  | 7  |
| 9  | 8  |
+----+----+
0: jdbc:luciddb:> -- sleep before retrieving the stats again
0: jdbc:luciddb:> select sys_boot.mgmt.sleep(1000) from u where a = 0;
+---------+
| EXPR$0  |
+---------+
| 0       |
+---------+
0: jdbc:luciddb:> select (counter_value = applib.get_var('RC', 'pageCount'))
. . . . . . . . >     from sys_root.dba_performance_counters
. . . . . . . . >         where counter_name = 'DatabasePagesAllocated';
+---------+
| EXPR$0  |
+---------+
| true    |
+---------+
0: jdbc:luciddb:> 
0: jdbc:luciddb:> drop label l;
0: jdbc:luciddb:> drop schema rc cascade;
0: jdbc:luciddb:> call applib.delete_var('RC', 'pageCount');
0: jdbc:luciddb:> 
0: jdbc:luciddb:> !quit
