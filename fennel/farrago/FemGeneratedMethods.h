// This code generated by ProxyGen -- do not edit

JniProxyVisitTable<FemVisitor> FemVisitor::visitTbl;

jmethodID ProxyAggInvocation::meth_getFunction = 0;
jmethodID ProxyAggInvocation::meth_getInputAttributeIndex = 0;
jmethodID ProxyAggInvocation::meth_getAggStreamDef = 0;
jmethodID ProxyAggStreamDef::meth_getGroupingPrefixSize = 0;
jmethodID ProxyAggStreamDef::meth_getAggInvocation = 0;
jmethodID ProxyBufferingTupleStreamDef::meth_isInMemory = 0;
jmethodID ProxyBufferingTupleStreamDef::meth_isMultipass = 0;
jmethodID ProxyCalcTupleStreamDef::meth_getProgram = 0;
jmethodID ProxyCalcTupleStreamDef::meth_isFilter = 0;
jmethodID ProxyCartesianProductStreamDef::meth_isLeftOuter = 0;
jmethodID ProxyCmdBeginTxn::meth_isReadOnly = 0;
jmethodID ProxyCmdBeginTxn::meth_getResultHandle = 0;
jmethodID ProxyCmdCheckpoint::meth_isFuzzy = 0;
jmethodID ProxyCmdCheckpoint::meth_isAsync = 0;
jmethodID ProxyCmdCreateExecutionStreamGraph::meth_getResultHandle = 0;
jmethodID ProxyCmdCreateStreamHandle::meth_getResultHandle = 0;
jmethodID ProxyCmdCreateStreamHandle::meth_getStreamName = 0;
jmethodID ProxyCmdCreateStreamHandle::meth_isInput = 0;
jmethodID ProxyCmdOpenDatabase::meth_getResultHandle = 0;
jmethodID ProxyCmdOpenDatabase::meth_isCreateDatabase = 0;
jmethodID ProxyCmdOpenDatabase::meth_getParams = 0;
jmethodID ProxyCmdPrepareExecutionStreamGraph::meth_getStreamDefs = 0;
jmethodID ProxyCmdSavepoint::meth_getResultHandle = 0;
jmethodID ProxyCorrelation::meth_getId = 0;
jmethodID ProxyCorrelation::meth_getOffset = 0;
jmethodID ProxyCorrelationJoinStreamDef::meth_getCorrelations = 0;
jmethodID ProxyDatabaseCmd::meth_getDbHandle = 0;
jmethodID ProxyDatabaseParam::meth_getName = 0;
jmethodID ProxyDatabaseParam::meth_getValue = 0;
jmethodID ProxyEndTxnCmd::meth_getSvptHandle = 0;
jmethodID ProxyExecStreamDataFlow::meth_getConsumer = 0;
jmethodID ProxyExecStreamDataFlow::meth_getProducer = 0;
jmethodID ProxyExecutionStreamDef::meth_getName = 0;
jmethodID ProxyExecutionStreamDef::meth_getOutputDesc = 0;
jmethodID ProxyExecutionStreamDef::meth_getInputFlow = 0;
jmethodID ProxyExecutionStreamDef::meth_getOutputFlow = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_getDataFilePath = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_getErrorFilePath = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_isHasHeader = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_getNumRowsScan = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_getFieldDelimiter = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_getRowDelimiter = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_getQuoteCharacter = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_getEscapeCharacter = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_getCalcProgram = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_getCodePage = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_isTranslationRecovery = 0;
jmethodID ProxyFlatFileTupleStreamDef::meth_getSubstituteCharacter = 0;
jmethodID ProxyGenericStreamDef::meth_getType = 0;
jmethodID ProxyGenericStreamDef::meth_getContent = 0;
jmethodID ProxyHandle::meth_getLongHandle = 0;
jmethodID ProxyIndexAccessCmd::meth_getRootPageId = 0;
jmethodID ProxyIndexAccessorDef::meth_getRootPageId = 0;
jmethodID ProxyIndexAccessorDef::meth_getSegmentId = 0;
jmethodID ProxyIndexAccessorDef::meth_getIndexId = 0;
jmethodID ProxyIndexAccessorDef::meth_getTupleDesc = 0;
jmethodID ProxyIndexCmd::meth_getSegmentId = 0;
jmethodID ProxyIndexCmd::meth_getIndexId = 0;
jmethodID ProxyIndexCmd::meth_getTupleDesc = 0;
jmethodID ProxyIndexCmd::meth_getKeyProj = 0;
jmethodID ProxyIndexCmd::meth_getLeafPageIdProj = 0;
jmethodID ProxyIndexLoaderDef::meth_getDistinctness = 0;
jmethodID ProxyIndexScanDef::meth_getOutputProj = 0;
jmethodID ProxyIndexSearchDef::meth_isOuterJoin = 0;
jmethodID ProxyIndexSearchDef::meth_isUniqueKey = 0;
jmethodID ProxyIndexSearchDef::meth_getInputKeyProj = 0;
jmethodID ProxyIndexSearchDef::meth_getInputJoinProj = 0;
jmethodID ProxyIndexSearchDef::meth_getInputDirectiveProj = 0;
jmethodID ProxyIndexWriterDef::meth_getInputProj = 0;
jmethodID ProxyIndexWriterDef::meth_getDistinctness = 0;
jmethodID ProxyIndexWriterDef::meth_isUpdateInPlace = 0;
jmethodID ProxyIndexWriterDef::meth_getTableWriter = 0;
jmethodID ProxyJavaSinkStreamDef::meth_getStreamId = 0;
jmethodID ProxyJavaTransformStreamDef::meth_getJavaClassName = 0;
jmethodID ProxyJavaTransformStreamDef::meth_getReserved = 0;
jmethodID ProxyJavaTransformStreamDef::meth_getStreamId = 0;
jmethodID ProxyKeyAccessorDef::meth_getKeyProj = 0;
jmethodID ProxyLbmChopperStreamDef::meth_getRidLimitParamId = 0;
jmethodID ProxyLbmGeneratorStreamDef::meth_getRowCountParamId = 0;
jmethodID ProxyLbmGeneratorStreamDef::meth_isCreateIndex = 0;
jmethodID ProxyLbmIndexScanStreamDef::meth_getRowLimitParamId = 0;
jmethodID ProxyLbmIndexScanStreamDef::meth_getStartRidParamId = 0;
jmethodID ProxyLbmIntersectStreamDef::meth_getRowLimitParamId = 0;
jmethodID ProxyLbmIntersectStreamDef::meth_getStartRidParamId = 0;
jmethodID ProxyLbmSplicerStreamDef::meth_getRowCountParamId = 0;
jmethodID ProxyLbmUnionStreamDef::meth_getRidLimitParamId = 0;
jmethodID ProxyLbmUnionStreamDef::meth_getConsumerSridParamId = 0;
jmethodID ProxyLbmUnionStreamDef::meth_getSegmentLimitParamId = 0;
jmethodID ProxyLcsClusterAppendStreamDef::meth_isOverwrite = 0;
jmethodID ProxyLcsClusterAppendStreamDef::meth_getClusterColProj = 0;
jmethodID ProxyLcsClusterScanDef::meth_getClusterTupleDesc = 0;
jmethodID ProxyLcsClusterScanDef::meth_getRowScan = 0;
jmethodID ProxyLcsRowScanStreamDef::meth_getOutputProj = 0;
jmethodID ProxyLcsRowScanStreamDef::meth_isFullScan = 0;
jmethodID ProxyLcsRowScanStreamDef::meth_isHasExtraFilter = 0;
jmethodID ProxyLcsRowScanStreamDef::meth_getClusterScan = 0;
jmethodID ProxyLhxJoinStreamDef::meth_getLeftKeyProj = 0;
jmethodID ProxyLhxJoinStreamDef::meth_getRightKeyProj = 0;
jmethodID ProxyLhxJoinStreamDef::meth_getNumBuildRows = 0;
jmethodID ProxyLhxJoinStreamDef::meth_getCndBuildKeys = 0;
jmethodID ProxyMergeStreamDef::meth_isSequential = 0;
jmethodID ProxyMockTupleStreamDef::meth_getRowCount = 0;
jmethodID ProxySortingStreamDef::meth_getDistinctness = 0;
jmethodID ProxyTableUpdaterDef::meth_getUpdateProj = 0;
jmethodID ProxyTableWriterDef::meth_getIndexWriter = 0;
jmethodID ProxyTupleAccessor::meth_getMinByteLength = 0;
jmethodID ProxyTupleAccessor::meth_getBitFieldOffset = 0;
jmethodID ProxyTupleAccessor::meth_getAttrAccessor = 0;
jmethodID ProxyTupleAttrAccessor::meth_getNullBitIndex = 0;
jmethodID ProxyTupleAttrAccessor::meth_getFixedOffset = 0;
jmethodID ProxyTupleAttrAccessor::meth_getEndIndirectOffset = 0;
jmethodID ProxyTupleAttrAccessor::meth_getBitValueIndex = 0;
jmethodID ProxyTupleAttrDescriptor::meth_isNullable = 0;
jmethodID ProxyTupleAttrDescriptor::meth_getTypeOrdinal = 0;
jmethodID ProxyTupleAttrDescriptor::meth_getByteLength = 0;
jmethodID ProxyTupleAttrProjection::meth_getAttributeIndex = 0;
jmethodID ProxyTupleDescriptor::meth_getAttrDescriptor = 0;
jmethodID ProxyTupleProjection::meth_getAttrProjection = 0;
jmethodID ProxyTupleStreamGraphCmd::meth_getStreamGraphHandle = 0;
jmethodID ProxyTxnCmd::meth_getTxnHandle = 0;
jmethodID ProxyValuesStreamDef::meth_getTupleBytesBase64 = 0;
jmethodID ProxyWindowDef::meth_getOffset = 0;
jmethodID ProxyWindowDef::meth_getOrderKeyList = 0;
jmethodID ProxyWindowDef::meth_isPhysical = 0;
jmethodID ProxyWindowDef::meth_getRange = 0;
jmethodID ProxyWindowDef::meth_getPartition = 0;
jmethodID ProxyWindowDef::meth_getWindowStream = 0;
jmethodID ProxyWindowPartitionDef::meth_getWindow = 0;
jmethodID ProxyWindowPartitionDef::meth_getPartitionKeyList = 0;
jmethodID ProxyWindowPartitionDef::meth_getInitializeProgram = 0;
jmethodID ProxyWindowPartitionDef::meth_getAddProgram = 0;
jmethodID ProxyWindowPartitionDef::meth_getDropProgram = 0;
jmethodID ProxyWindowPartitionDef::meth_getBucketDesc = 0;
jmethodID ProxyWindowStreamDef::meth_isFilter = 0;
jmethodID ProxyWindowStreamDef::meth_getOutputProgram = 0;
jmethodID ProxyWindowStreamDef::meth_getInputOrderKeyList = 0;
jmethodID ProxyWindowStreamDef::meth_getWindow = 0;
void staticInitFem(JniEnvRef pEnv,JniProxyVisitTableBase &visitTbl)
{
jclass jClass;
jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemAggInvocation");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyAggInvocation>));
ProxyAggInvocation::meth_getFunction = pEnv->GetMethodID(jClass,"getFunction","()Lnet/sf/farrago/fem/fennel/AggFunction;");
ProxyAggInvocation::meth_getInputAttributeIndex = pEnv->GetMethodID(jClass,"getInputAttributeIndex","()I");
ProxyAggInvocation::meth_getAggStreamDef = pEnv->GetMethodID(jClass,"getAggStreamDef","()Lnet/sf/farrago/fem/fennel/FemAggStreamDef;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemAggStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyAggStreamDef>));
ProxyAggStreamDef::meth_getGroupingPrefixSize = pEnv->GetMethodID(jClass,"getGroupingPrefixSize","()I");
ProxyAggStreamDef::meth_getAggInvocation = pEnv->GetMethodID(jClass,"getAggInvocation","()Ljava/util/Collection;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemBarrierStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyBarrierStreamDef>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemBufferingTupleStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyBufferingTupleStreamDef>));
ProxyBufferingTupleStreamDef::meth_isInMemory = pEnv->GetMethodID(jClass,"isInMemory","()Z");
ProxyBufferingTupleStreamDef::meth_isMultipass = pEnv->GetMethodID(jClass,"isMultipass","()Z");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCalcTupleStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCalcTupleStreamDef>));
ProxyCalcTupleStreamDef::meth_getProgram = pEnv->GetMethodID(jClass,"getProgram","()Ljava/lang/String;");
ProxyCalcTupleStreamDef::meth_isFilter = pEnv->GetMethodID(jClass,"isFilter","()Z");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCartesianProductStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCartesianProductStreamDef>));
ProxyCartesianProductStreamDef::meth_isLeftOuter = pEnv->GetMethodID(jClass,"isLeftOuter","()Z");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmd");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmd>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdBeginTxn");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdBeginTxn>));
ProxyCmdBeginTxn::meth_isReadOnly = pEnv->GetMethodID(jClass,"isReadOnly","()Z");
ProxyCmdBeginTxn::meth_getResultHandle = pEnv->GetMethodID(jClass,"getResultHandle","()Lnet/sf/farrago/fem/fennel/FemTxnHandle;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdCheckpoint");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdCheckpoint>));
ProxyCmdCheckpoint::meth_isFuzzy = pEnv->GetMethodID(jClass,"isFuzzy","()Z");
ProxyCmdCheckpoint::meth_isAsync = pEnv->GetMethodID(jClass,"isAsync","()Z");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdCloseDatabase");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdCloseDatabase>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdCommit");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdCommit>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdCreateExecutionStreamGraph");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdCreateExecutionStreamGraph>));
ProxyCmdCreateExecutionStreamGraph::meth_getResultHandle = pEnv->GetMethodID(jClass,"getResultHandle","()Lnet/sf/farrago/fem/fennel/FemStreamGraphHandle;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdCreateIndex");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdCreateIndex>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdCreateStreamHandle");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdCreateStreamHandle>));
ProxyCmdCreateStreamHandle::meth_getResultHandle = pEnv->GetMethodID(jClass,"getResultHandle","()Lnet/sf/farrago/fem/fennel/FemStreamHandle;");
ProxyCmdCreateStreamHandle::meth_getStreamName = pEnv->GetMethodID(jClass,"getStreamName","()Ljava/lang/String;");
ProxyCmdCreateStreamHandle::meth_isInput = pEnv->GetMethodID(jClass,"isInput","()Z");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdDropIndex");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdDropIndex>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdOpenDatabase");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdOpenDatabase>));
ProxyCmdOpenDatabase::meth_getResultHandle = pEnv->GetMethodID(jClass,"getResultHandle","()Lnet/sf/farrago/fem/fennel/FemDbHandle;");
ProxyCmdOpenDatabase::meth_isCreateDatabase = pEnv->GetMethodID(jClass,"isCreateDatabase","()Z");
ProxyCmdOpenDatabase::meth_getParams = pEnv->GetMethodID(jClass,"getParams","()Ljava/util/Collection;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdPrepareExecutionStreamGraph");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdPrepareExecutionStreamGraph>));
ProxyCmdPrepareExecutionStreamGraph::meth_getStreamDefs = pEnv->GetMethodID(jClass,"getStreamDefs","()Ljava/util/Collection;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdRollback");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdRollback>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdSavepoint");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdSavepoint>));
ProxyCmdSavepoint::meth_getResultHandle = pEnv->GetMethodID(jClass,"getResultHandle","()Lnet/sf/farrago/fem/fennel/FemSvptHandle;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdTruncateIndex");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdTruncateIndex>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCmdVerifyIndex");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCmdVerifyIndex>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCollectTupleStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCollectTupleStreamDef>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCorrelation");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCorrelation>));
ProxyCorrelation::meth_getId = pEnv->GetMethodID(jClass,"getId","()I");
ProxyCorrelation::meth_getOffset = pEnv->GetMethodID(jClass,"getOffset","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemCorrelationJoinStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyCorrelationJoinStreamDef>));
ProxyCorrelationJoinStreamDef::meth_getCorrelations = pEnv->GetMethodID(jClass,"getCorrelations","()Ljava/util/Collection;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemDatabaseCmd");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyDatabaseCmd>));
ProxyDatabaseCmd::meth_getDbHandle = pEnv->GetMethodID(jClass,"getDbHandle","()Lnet/sf/farrago/fem/fennel/FemDbHandle;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemDatabaseParam");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyDatabaseParam>));
ProxyDatabaseParam::meth_getName = pEnv->GetMethodID(jClass,"getName","()Ljava/lang/String;");
ProxyDatabaseParam::meth_getValue = pEnv->GetMethodID(jClass,"getValue","()Ljava/lang/String;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemDbHandle");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyDbHandle>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemEndTxnCmd");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyEndTxnCmd>));
ProxyEndTxnCmd::meth_getSvptHandle = pEnv->GetMethodID(jClass,"getSvptHandle","()Lnet/sf/farrago/fem/fennel/FemSvptHandle;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemExecStreamDataFlow");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyExecStreamDataFlow>));
ProxyExecStreamDataFlow::meth_getConsumer = pEnv->GetMethodID(jClass,"getConsumer","()Lnet/sf/farrago/fem/fennel/FemExecutionStreamDef;");
ProxyExecStreamDataFlow::meth_getProducer = pEnv->GetMethodID(jClass,"getProducer","()Lnet/sf/farrago/fem/fennel/FemExecutionStreamDef;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemExecutionStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyExecutionStreamDef>));
ProxyExecutionStreamDef::meth_getName = pEnv->GetMethodID(jClass,"getName","()Ljava/lang/String;");
ProxyExecutionStreamDef::meth_getOutputDesc = pEnv->GetMethodID(jClass,"getOutputDesc","()Lnet/sf/farrago/fem/fennel/FemTupleDescriptor;");
ProxyExecutionStreamDef::meth_getInputFlow = pEnv->GetMethodID(jClass,"getInputFlow","()Ljava/util/List;");
ProxyExecutionStreamDef::meth_getOutputFlow = pEnv->GetMethodID(jClass,"getOutputFlow","()Ljava/util/List;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemFlatFileTupleStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyFlatFileTupleStreamDef>));
ProxyFlatFileTupleStreamDef::meth_getDataFilePath = pEnv->GetMethodID(jClass,"getDataFilePath","()Ljava/lang/String;");
ProxyFlatFileTupleStreamDef::meth_getErrorFilePath = pEnv->GetMethodID(jClass,"getErrorFilePath","()Ljava/lang/String;");
ProxyFlatFileTupleStreamDef::meth_isHasHeader = pEnv->GetMethodID(jClass,"isHasHeader","()Z");
ProxyFlatFileTupleStreamDef::meth_getNumRowsScan = pEnv->GetMethodID(jClass,"getNumRowsScan","()I");
ProxyFlatFileTupleStreamDef::meth_getFieldDelimiter = pEnv->GetMethodID(jClass,"getFieldDelimiter","()Ljava/lang/String;");
ProxyFlatFileTupleStreamDef::meth_getRowDelimiter = pEnv->GetMethodID(jClass,"getRowDelimiter","()Ljava/lang/String;");
ProxyFlatFileTupleStreamDef::meth_getQuoteCharacter = pEnv->GetMethodID(jClass,"getQuoteCharacter","()Ljava/lang/String;");
ProxyFlatFileTupleStreamDef::meth_getEscapeCharacter = pEnv->GetMethodID(jClass,"getEscapeCharacter","()Ljava/lang/String;");
ProxyFlatFileTupleStreamDef::meth_getCalcProgram = pEnv->GetMethodID(jClass,"getCalcProgram","()Ljava/lang/String;");
ProxyFlatFileTupleStreamDef::meth_getCodePage = pEnv->GetMethodID(jClass,"getCodePage","()I");
ProxyFlatFileTupleStreamDef::meth_isTranslationRecovery = pEnv->GetMethodID(jClass,"isTranslationRecovery","()Z");
ProxyFlatFileTupleStreamDef::meth_getSubstituteCharacter = pEnv->GetMethodID(jClass,"getSubstituteCharacter","()Ljava/lang/String;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemGenericStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyGenericStreamDef>));
ProxyGenericStreamDef::meth_getType = pEnv->GetMethodID(jClass,"getType","()Ljava/lang/String;");
ProxyGenericStreamDef::meth_getContent = pEnv->GetMethodID(jClass,"getContent","()Ljava/lang/String;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemHandle");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyHandle>));
ProxyHandle::meth_getLongHandle = pEnv->GetMethodID(jClass,"getLongHandle","()J");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemIndexAccessCmd");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyIndexAccessCmd>));
ProxyIndexAccessCmd::meth_getRootPageId = pEnv->GetMethodID(jClass,"getRootPageId","()J");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemIndexAccessorDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyIndexAccessorDef>));
ProxyIndexAccessorDef::meth_getRootPageId = pEnv->GetMethodID(jClass,"getRootPageId","()J");
ProxyIndexAccessorDef::meth_getSegmentId = pEnv->GetMethodID(jClass,"getSegmentId","()J");
ProxyIndexAccessorDef::meth_getIndexId = pEnv->GetMethodID(jClass,"getIndexId","()J");
ProxyIndexAccessorDef::meth_getTupleDesc = pEnv->GetMethodID(jClass,"getTupleDesc","()Lnet/sf/farrago/fem/fennel/FemTupleDescriptor;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemIndexCmd");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyIndexCmd>));
ProxyIndexCmd::meth_getSegmentId = pEnv->GetMethodID(jClass,"getSegmentId","()J");
ProxyIndexCmd::meth_getIndexId = pEnv->GetMethodID(jClass,"getIndexId","()J");
ProxyIndexCmd::meth_getTupleDesc = pEnv->GetMethodID(jClass,"getTupleDesc","()Lnet/sf/farrago/fem/fennel/FemTupleDescriptor;");
ProxyIndexCmd::meth_getKeyProj = pEnv->GetMethodID(jClass,"getKeyProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");
ProxyIndexCmd::meth_getLeafPageIdProj = pEnv->GetMethodID(jClass,"getLeafPageIdProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemIndexLoaderDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyIndexLoaderDef>));
ProxyIndexLoaderDef::meth_getDistinctness = pEnv->GetMethodID(jClass,"getDistinctness","()Lnet/sf/farrago/fem/fennel/Distinctness;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemIndexScanDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyIndexScanDef>));
ProxyIndexScanDef::meth_getOutputProj = pEnv->GetMethodID(jClass,"getOutputProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemIndexSearchDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyIndexSearchDef>));
ProxyIndexSearchDef::meth_isOuterJoin = pEnv->GetMethodID(jClass,"isOuterJoin","()Z");
ProxyIndexSearchDef::meth_isUniqueKey = pEnv->GetMethodID(jClass,"isUniqueKey","()Z");
ProxyIndexSearchDef::meth_getInputKeyProj = pEnv->GetMethodID(jClass,"getInputKeyProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");
ProxyIndexSearchDef::meth_getInputJoinProj = pEnv->GetMethodID(jClass,"getInputJoinProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");
ProxyIndexSearchDef::meth_getInputDirectiveProj = pEnv->GetMethodID(jClass,"getInputDirectiveProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemIndexStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyIndexStreamDef>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemIndexWriterDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyIndexWriterDef>));
ProxyIndexWriterDef::meth_getInputProj = pEnv->GetMethodID(jClass,"getInputProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");
ProxyIndexWriterDef::meth_getDistinctness = pEnv->GetMethodID(jClass,"getDistinctness","()Lnet/sf/farrago/fem/fennel/Distinctness;");
ProxyIndexWriterDef::meth_isUpdateInPlace = pEnv->GetMethodID(jClass,"isUpdateInPlace","()Z");
ProxyIndexWriterDef::meth_getTableWriter = pEnv->GetMethodID(jClass,"getTableWriter","()Lnet/sf/farrago/fem/fennel/FemTableWriterDef;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemJavaSinkStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyJavaSinkStreamDef>));
ProxyJavaSinkStreamDef::meth_getStreamId = pEnv->GetMethodID(jClass,"getStreamId","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemJavaTransformStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyJavaTransformStreamDef>));
ProxyJavaTransformStreamDef::meth_getJavaClassName = pEnv->GetMethodID(jClass,"getJavaClassName","()Ljava/lang/String;");
ProxyJavaTransformStreamDef::meth_getReserved = pEnv->GetMethodID(jClass,"getReserved","()Ljava/lang/String;");
ProxyJavaTransformStreamDef::meth_getStreamId = pEnv->GetMethodID(jClass,"getStreamId","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemKeyAccessorDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyKeyAccessorDef>));
ProxyKeyAccessorDef::meth_getKeyProj = pEnv->GetMethodID(jClass,"getKeyProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemLbmChopperStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyLbmChopperStreamDef>));
ProxyLbmChopperStreamDef::meth_getRidLimitParamId = pEnv->GetMethodID(jClass,"getRidLimitParamId","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemLbmGeneratorStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyLbmGeneratorStreamDef>));
ProxyLbmGeneratorStreamDef::meth_getRowCountParamId = pEnv->GetMethodID(jClass,"getRowCountParamId","()I");
ProxyLbmGeneratorStreamDef::meth_isCreateIndex = pEnv->GetMethodID(jClass,"isCreateIndex","()Z");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemLbmIndexScanStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyLbmIndexScanStreamDef>));
ProxyLbmIndexScanStreamDef::meth_getRowLimitParamId = pEnv->GetMethodID(jClass,"getRowLimitParamId","()I");
ProxyLbmIndexScanStreamDef::meth_getStartRidParamId = pEnv->GetMethodID(jClass,"getStartRidParamId","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemLbmIntersectStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyLbmIntersectStreamDef>));
ProxyLbmIntersectStreamDef::meth_getRowLimitParamId = pEnv->GetMethodID(jClass,"getRowLimitParamId","()I");
ProxyLbmIntersectStreamDef::meth_getStartRidParamId = pEnv->GetMethodID(jClass,"getStartRidParamId","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemLbmSplicerStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyLbmSplicerStreamDef>));
ProxyLbmSplicerStreamDef::meth_getRowCountParamId = pEnv->GetMethodID(jClass,"getRowCountParamId","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemLbmUnionStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyLbmUnionStreamDef>));
ProxyLbmUnionStreamDef::meth_getRidLimitParamId = pEnv->GetMethodID(jClass,"getRidLimitParamId","()I");
ProxyLbmUnionStreamDef::meth_getConsumerSridParamId = pEnv->GetMethodID(jClass,"getConsumerSridParamId","()I");
ProxyLbmUnionStreamDef::meth_getSegmentLimitParamId = pEnv->GetMethodID(jClass,"getSegmentLimitParamId","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemLcsClusterAppendStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyLcsClusterAppendStreamDef>));
ProxyLcsClusterAppendStreamDef::meth_isOverwrite = pEnv->GetMethodID(jClass,"isOverwrite","()Z");
ProxyLcsClusterAppendStreamDef::meth_getClusterColProj = pEnv->GetMethodID(jClass,"getClusterColProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemLcsClusterScanDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyLcsClusterScanDef>));
ProxyLcsClusterScanDef::meth_getClusterTupleDesc = pEnv->GetMethodID(jClass,"getClusterTupleDesc","()Lnet/sf/farrago/fem/fennel/FemTupleDescriptor;");
ProxyLcsClusterScanDef::meth_getRowScan = pEnv->GetMethodID(jClass,"getRowScan","()Lnet/sf/farrago/fem/fennel/FemLcsRowScanStreamDef;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemLcsRowScanStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyLcsRowScanStreamDef>));
ProxyLcsRowScanStreamDef::meth_getOutputProj = pEnv->GetMethodID(jClass,"getOutputProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");
ProxyLcsRowScanStreamDef::meth_isFullScan = pEnv->GetMethodID(jClass,"isFullScan","()Z");
ProxyLcsRowScanStreamDef::meth_isHasExtraFilter = pEnv->GetMethodID(jClass,"isHasExtraFilter","()Z");
ProxyLcsRowScanStreamDef::meth_getClusterScan = pEnv->GetMethodID(jClass,"getClusterScan","()Ljava/util/List;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemLhxJoinStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyLhxJoinStreamDef>));
ProxyLhxJoinStreamDef::meth_getLeftKeyProj = pEnv->GetMethodID(jClass,"getLeftKeyProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");
ProxyLhxJoinStreamDef::meth_getRightKeyProj = pEnv->GetMethodID(jClass,"getRightKeyProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");
ProxyLhxJoinStreamDef::meth_getNumBuildRows = pEnv->GetMethodID(jClass,"getNumBuildRows","()I");
ProxyLhxJoinStreamDef::meth_getCndBuildKeys = pEnv->GetMethodID(jClass,"getCndBuildKeys","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemMergeStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyMergeStreamDef>));
ProxyMergeStreamDef::meth_isSequential = pEnv->GetMethodID(jClass,"isSequential","()Z");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemMockTupleStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyMockTupleStreamDef>));
ProxyMockTupleStreamDef::meth_getRowCount = pEnv->GetMethodID(jClass,"getRowCount","()J");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemSortingStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxySortingStreamDef>));
ProxySortingStreamDef::meth_getDistinctness = pEnv->GetMethodID(jClass,"getDistinctness","()Lnet/sf/farrago/fem/fennel/Distinctness;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemSplitterStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxySplitterStreamDef>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemStreamGraphHandle");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyStreamGraphHandle>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemStreamHandle");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyStreamHandle>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemSvptHandle");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxySvptHandle>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTableDeleterDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTableDeleterDef>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTableInserterDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTableInserterDef>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTableUpdaterDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTableUpdaterDef>));
ProxyTableUpdaterDef::meth_getUpdateProj = pEnv->GetMethodID(jClass,"getUpdateProj","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTableWriterDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTableWriterDef>));
ProxyTableWriterDef::meth_getIndexWriter = pEnv->GetMethodID(jClass,"getIndexWriter","()Ljava/util/List;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTupleAccessor");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTupleAccessor>));
ProxyTupleAccessor::meth_getMinByteLength = pEnv->GetMethodID(jClass,"getMinByteLength","()I");
ProxyTupleAccessor::meth_getBitFieldOffset = pEnv->GetMethodID(jClass,"getBitFieldOffset","()I");
ProxyTupleAccessor::meth_getAttrAccessor = pEnv->GetMethodID(jClass,"getAttrAccessor","()Ljava/util/List;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTupleAttrAccessor");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTupleAttrAccessor>));
ProxyTupleAttrAccessor::meth_getNullBitIndex = pEnv->GetMethodID(jClass,"getNullBitIndex","()I");
ProxyTupleAttrAccessor::meth_getFixedOffset = pEnv->GetMethodID(jClass,"getFixedOffset","()I");
ProxyTupleAttrAccessor::meth_getEndIndirectOffset = pEnv->GetMethodID(jClass,"getEndIndirectOffset","()I");
ProxyTupleAttrAccessor::meth_getBitValueIndex = pEnv->GetMethodID(jClass,"getBitValueIndex","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTupleAttrDescriptor");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTupleAttrDescriptor>));
ProxyTupleAttrDescriptor::meth_isNullable = pEnv->GetMethodID(jClass,"isNullable","()Z");
ProxyTupleAttrDescriptor::meth_getTypeOrdinal = pEnv->GetMethodID(jClass,"getTypeOrdinal","()I");
ProxyTupleAttrDescriptor::meth_getByteLength = pEnv->GetMethodID(jClass,"getByteLength","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTupleAttrProjection");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTupleAttrProjection>));
ProxyTupleAttrProjection::meth_getAttributeIndex = pEnv->GetMethodID(jClass,"getAttributeIndex","()I");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTupleDescriptor");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTupleDescriptor>));
ProxyTupleDescriptor::meth_getAttrDescriptor = pEnv->GetMethodID(jClass,"getAttrDescriptor","()Ljava/util/List;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTupleProjection");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTupleProjection>));
ProxyTupleProjection::meth_getAttrProjection = pEnv->GetMethodID(jClass,"getAttrProjection","()Ljava/util/List;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTupleStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTupleStreamDef>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTupleStreamGraphCmd");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTupleStreamGraphCmd>));
ProxyTupleStreamGraphCmd::meth_getStreamGraphHandle = pEnv->GetMethodID(jClass,"getStreamGraphHandle","()Lnet/sf/farrago/fem/fennel/FemStreamGraphHandle;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTxnCmd");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTxnCmd>));
ProxyTxnCmd::meth_getTxnHandle = pEnv->GetMethodID(jClass,"getTxnHandle","()Lnet/sf/farrago/fem/fennel/FemTxnHandle;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemTxnHandle");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyTxnHandle>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemUncollectTupleStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyUncollectTupleStreamDef>));

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemValuesStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyValuesStreamDef>));
ProxyValuesStreamDef::meth_getTupleBytesBase64 = pEnv->GetMethodID(jClass,"getTupleBytesBase64","()Ljava/lang/String;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemWindowDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyWindowDef>));
ProxyWindowDef::meth_getOffset = pEnv->GetMethodID(jClass,"getOffset","()I");
ProxyWindowDef::meth_getOrderKeyList = pEnv->GetMethodID(jClass,"getOrderKeyList","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");
ProxyWindowDef::meth_isPhysical = pEnv->GetMethodID(jClass,"isPhysical","()Z");
ProxyWindowDef::meth_getRange = pEnv->GetMethodID(jClass,"getRange","()Ljava/lang/String;");
ProxyWindowDef::meth_getPartition = pEnv->GetMethodID(jClass,"getPartition","()Ljava/util/List;");
ProxyWindowDef::meth_getWindowStream = pEnv->GetMethodID(jClass,"getWindowStream","()Lnet/sf/farrago/fem/fennel/FemWindowStreamDef;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemWindowPartitionDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyWindowPartitionDef>));
ProxyWindowPartitionDef::meth_getWindow = pEnv->GetMethodID(jClass,"getWindow","()Lnet/sf/farrago/fem/fennel/FemWindowDef;");
ProxyWindowPartitionDef::meth_getPartitionKeyList = pEnv->GetMethodID(jClass,"getPartitionKeyList","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");
ProxyWindowPartitionDef::meth_getInitializeProgram = pEnv->GetMethodID(jClass,"getInitializeProgram","()Ljava/lang/String;");
ProxyWindowPartitionDef::meth_getAddProgram = pEnv->GetMethodID(jClass,"getAddProgram","()Ljava/lang/String;");
ProxyWindowPartitionDef::meth_getDropProgram = pEnv->GetMethodID(jClass,"getDropProgram","()Ljava/lang/String;");
ProxyWindowPartitionDef::meth_getBucketDesc = pEnv->GetMethodID(jClass,"getBucketDesc","()Lnet/sf/farrago/fem/fennel/FemTupleDescriptor;");

jClass = pEnv->FindClass("net/sf/farrago/fem/fennel/FemWindowStreamDef");
visitTbl.addMethod(jClass,JniProxyVisitTable<FemVisitor>::SharedVisitorMethod(new JniProxyVisitTable<FemVisitor>::VisitorMethodImpl<ProxyWindowStreamDef>));
ProxyWindowStreamDef::meth_isFilter = pEnv->GetMethodID(jClass,"isFilter","()Z");
ProxyWindowStreamDef::meth_getOutputProgram = pEnv->GetMethodID(jClass,"getOutputProgram","()Ljava/lang/String;");
ProxyWindowStreamDef::meth_getInputOrderKeyList = pEnv->GetMethodID(jClass,"getInputOrderKeyList","()Lnet/sf/farrago/fem/fennel/FemTupleProjection;");
ProxyWindowStreamDef::meth_getWindow = pEnv->GetMethodID(jClass,"getWindow","()Ljava/util/List;");

}

AggFunction ProxyAggInvocation::getFunction()
{
std::string symbol = constructString(JniUtil::toString(pEnv,pEnv->CallObjectMethod(jObject,meth_getFunction)));
return static_cast<AggFunction>(JniUtil::lookUpEnum(AggFunction_names,symbol));
}

int32_t ProxyAggInvocation::getInputAttributeIndex()
{
return pEnv->CallIntMethod(jObject,meth_getInputAttributeIndex);
}

SharedProxyAggStreamDef ProxyAggInvocation::getAggStreamDef()
{
SharedProxyAggStreamDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getAggStreamDef);
if (!p->jObject) p.reset();
return p;
}

int32_t ProxyAggStreamDef::getGroupingPrefixSize()
{
return pEnv->CallIntMethod(jObject,meth_getGroupingPrefixSize);
}

SharedProxyAggInvocation ProxyAggStreamDef::getAggInvocation()
{
SharedProxyAggInvocation p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getAggInvocation);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

bool ProxyBufferingTupleStreamDef::isInMemory()
{
return pEnv->CallBooleanMethod(jObject,meth_isInMemory);
}

bool ProxyBufferingTupleStreamDef::isMultipass()
{
return pEnv->CallBooleanMethod(jObject,meth_isMultipass);
}

std::string ProxyCalcTupleStreamDef::getProgram()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getProgram));
}

bool ProxyCalcTupleStreamDef::isFilter()
{
return pEnv->CallBooleanMethod(jObject,meth_isFilter);
}

bool ProxyCartesianProductStreamDef::isLeftOuter()
{
return pEnv->CallBooleanMethod(jObject,meth_isLeftOuter);
}

bool ProxyCmdBeginTxn::isReadOnly()
{
return pEnv->CallBooleanMethod(jObject,meth_isReadOnly);
}

SharedProxyTxnHandle ProxyCmdBeginTxn::getResultHandle()
{
SharedProxyTxnHandle p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getResultHandle);
if (!p->jObject) p.reset();
return p;
}

bool ProxyCmdCheckpoint::isFuzzy()
{
return pEnv->CallBooleanMethod(jObject,meth_isFuzzy);
}

bool ProxyCmdCheckpoint::isAsync()
{
return pEnv->CallBooleanMethod(jObject,meth_isAsync);
}

SharedProxyStreamGraphHandle ProxyCmdCreateExecutionStreamGraph::getResultHandle()
{
SharedProxyStreamGraphHandle p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getResultHandle);
if (!p->jObject) p.reset();
return p;
}

SharedProxyStreamHandle ProxyCmdCreateStreamHandle::getResultHandle()
{
SharedProxyStreamHandle p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getResultHandle);
if (!p->jObject) p.reset();
return p;
}

std::string ProxyCmdCreateStreamHandle::getStreamName()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getStreamName));
}

bool ProxyCmdCreateStreamHandle::isInput()
{
return pEnv->CallBooleanMethod(jObject,meth_isInput);
}

SharedProxyDbHandle ProxyCmdOpenDatabase::getResultHandle()
{
SharedProxyDbHandle p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getResultHandle);
if (!p->jObject) p.reset();
return p;
}

bool ProxyCmdOpenDatabase::isCreateDatabase()
{
return pEnv->CallBooleanMethod(jObject,meth_isCreateDatabase);
}

SharedProxyDatabaseParam ProxyCmdOpenDatabase::getParams()
{
SharedProxyDatabaseParam p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getParams);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

SharedProxyExecutionStreamDef ProxyCmdPrepareExecutionStreamGraph::getStreamDefs()
{
SharedProxyExecutionStreamDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getStreamDefs);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

SharedProxySvptHandle ProxyCmdSavepoint::getResultHandle()
{
SharedProxySvptHandle p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getResultHandle);
if (!p->jObject) p.reset();
return p;
}

int32_t ProxyCorrelation::getId()
{
return pEnv->CallIntMethod(jObject,meth_getId);
}

int32_t ProxyCorrelation::getOffset()
{
return pEnv->CallIntMethod(jObject,meth_getOffset);
}

SharedProxyCorrelation ProxyCorrelationJoinStreamDef::getCorrelations()
{
SharedProxyCorrelation p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getCorrelations);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

SharedProxyDbHandle ProxyDatabaseCmd::getDbHandle()
{
SharedProxyDbHandle p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getDbHandle);
if (!p->jObject) p.reset();
return p;
}

std::string ProxyDatabaseParam::getName()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getName));
}

std::string ProxyDatabaseParam::getValue()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getValue));
}

SharedProxySvptHandle ProxyEndTxnCmd::getSvptHandle()
{
SharedProxySvptHandle p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getSvptHandle);
if (!p->jObject) p.reset();
return p;
}

SharedProxyExecutionStreamDef ProxyExecStreamDataFlow::getConsumer()
{
SharedProxyExecutionStreamDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getConsumer);
if (!p->jObject) p.reset();
return p;
}

SharedProxyExecutionStreamDef ProxyExecStreamDataFlow::getProducer()
{
SharedProxyExecutionStreamDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getProducer);
if (!p->jObject) p.reset();
return p;
}

std::string ProxyExecutionStreamDef::getName()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getName));
}

SharedProxyTupleDescriptor ProxyExecutionStreamDef::getOutputDesc()
{
SharedProxyTupleDescriptor p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getOutputDesc);
if (!p->jObject) p.reset();
return p;
}

SharedProxyExecStreamDataFlow ProxyExecutionStreamDef::getInputFlow()
{
SharedProxyExecStreamDataFlow p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getInputFlow);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

SharedProxyExecStreamDataFlow ProxyExecutionStreamDef::getOutputFlow()
{
SharedProxyExecStreamDataFlow p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getOutputFlow);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

std::string ProxyFlatFileTupleStreamDef::getDataFilePath()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getDataFilePath));
}

std::string ProxyFlatFileTupleStreamDef::getErrorFilePath()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getErrorFilePath));
}

bool ProxyFlatFileTupleStreamDef::isHasHeader()
{
return pEnv->CallBooleanMethod(jObject,meth_isHasHeader);
}

int32_t ProxyFlatFileTupleStreamDef::getNumRowsScan()
{
return pEnv->CallIntMethod(jObject,meth_getNumRowsScan);
}

std::string ProxyFlatFileTupleStreamDef::getFieldDelimiter()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getFieldDelimiter));
}

std::string ProxyFlatFileTupleStreamDef::getRowDelimiter()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getRowDelimiter));
}

std::string ProxyFlatFileTupleStreamDef::getQuoteCharacter()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getQuoteCharacter));
}

std::string ProxyFlatFileTupleStreamDef::getEscapeCharacter()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getEscapeCharacter));
}

std::string ProxyFlatFileTupleStreamDef::getCalcProgram()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getCalcProgram));
}

int32_t ProxyFlatFileTupleStreamDef::getCodePage()
{
return pEnv->CallIntMethod(jObject,meth_getCodePage);
}

bool ProxyFlatFileTupleStreamDef::isTranslationRecovery()
{
return pEnv->CallBooleanMethod(jObject,meth_isTranslationRecovery);
}

std::string ProxyFlatFileTupleStreamDef::getSubstituteCharacter()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getSubstituteCharacter));
}

std::string ProxyGenericStreamDef::getType()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getType));
}

std::string ProxyGenericStreamDef::getContent()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getContent));
}

int64_t ProxyHandle::getLongHandle()
{
return pEnv->CallLongMethod(jObject,meth_getLongHandle);
}

int64_t ProxyIndexAccessCmd::getRootPageId()
{
return pEnv->CallLongMethod(jObject,meth_getRootPageId);
}

int64_t ProxyIndexAccessorDef::getRootPageId()
{
return pEnv->CallLongMethod(jObject,meth_getRootPageId);
}

int64_t ProxyIndexAccessorDef::getSegmentId()
{
return pEnv->CallLongMethod(jObject,meth_getSegmentId);
}

int64_t ProxyIndexAccessorDef::getIndexId()
{
return pEnv->CallLongMethod(jObject,meth_getIndexId);
}

SharedProxyTupleDescriptor ProxyIndexAccessorDef::getTupleDesc()
{
SharedProxyTupleDescriptor p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getTupleDesc);
if (!p->jObject) p.reset();
return p;
}

int64_t ProxyIndexCmd::getSegmentId()
{
return pEnv->CallLongMethod(jObject,meth_getSegmentId);
}

int64_t ProxyIndexCmd::getIndexId()
{
return pEnv->CallLongMethod(jObject,meth_getIndexId);
}

SharedProxyTupleDescriptor ProxyIndexCmd::getTupleDesc()
{
SharedProxyTupleDescriptor p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getTupleDesc);
if (!p->jObject) p.reset();
return p;
}

SharedProxyTupleProjection ProxyIndexCmd::getKeyProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getKeyProj);
if (!p->jObject) p.reset();
return p;
}

SharedProxyTupleProjection ProxyIndexCmd::getLeafPageIdProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getLeafPageIdProj);
if (!p->jObject) p.reset();
return p;
}

Distinctness ProxyIndexLoaderDef::getDistinctness()
{
std::string symbol = constructString(JniUtil::toString(pEnv,pEnv->CallObjectMethod(jObject,meth_getDistinctness)));
return static_cast<Distinctness>(JniUtil::lookUpEnum(Distinctness_names,symbol));
}

SharedProxyTupleProjection ProxyIndexScanDef::getOutputProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getOutputProj);
if (!p->jObject) p.reset();
return p;
}

bool ProxyIndexSearchDef::isOuterJoin()
{
return pEnv->CallBooleanMethod(jObject,meth_isOuterJoin);
}

bool ProxyIndexSearchDef::isUniqueKey()
{
return pEnv->CallBooleanMethod(jObject,meth_isUniqueKey);
}

SharedProxyTupleProjection ProxyIndexSearchDef::getInputKeyProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getInputKeyProj);
if (!p->jObject) p.reset();
return p;
}

SharedProxyTupleProjection ProxyIndexSearchDef::getInputJoinProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getInputJoinProj);
if (!p->jObject) p.reset();
return p;
}

SharedProxyTupleProjection ProxyIndexSearchDef::getInputDirectiveProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getInputDirectiveProj);
if (!p->jObject) p.reset();
return p;
}

SharedProxyTupleProjection ProxyIndexWriterDef::getInputProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getInputProj);
if (!p->jObject) p.reset();
return p;
}

Distinctness ProxyIndexWriterDef::getDistinctness()
{
std::string symbol = constructString(JniUtil::toString(pEnv,pEnv->CallObjectMethod(jObject,meth_getDistinctness)));
return static_cast<Distinctness>(JniUtil::lookUpEnum(Distinctness_names,symbol));
}

bool ProxyIndexWriterDef::isUpdateInPlace()
{
return pEnv->CallBooleanMethod(jObject,meth_isUpdateInPlace);
}

SharedProxyTableWriterDef ProxyIndexWriterDef::getTableWriter()
{
SharedProxyTableWriterDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getTableWriter);
if (!p->jObject) p.reset();
return p;
}

int32_t ProxyJavaSinkStreamDef::getStreamId()
{
return pEnv->CallIntMethod(jObject,meth_getStreamId);
}

std::string ProxyJavaTransformStreamDef::getJavaClassName()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getJavaClassName));
}

std::string ProxyJavaTransformStreamDef::getReserved()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getReserved));
}

int32_t ProxyJavaTransformStreamDef::getStreamId()
{
return pEnv->CallIntMethod(jObject,meth_getStreamId);
}

SharedProxyTupleProjection ProxyKeyAccessorDef::getKeyProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getKeyProj);
if (!p->jObject) p.reset();
return p;
}

int32_t ProxyLbmChopperStreamDef::getRidLimitParamId()
{
return pEnv->CallIntMethod(jObject,meth_getRidLimitParamId);
}

int32_t ProxyLbmGeneratorStreamDef::getRowCountParamId()
{
return pEnv->CallIntMethod(jObject,meth_getRowCountParamId);
}

bool ProxyLbmGeneratorStreamDef::isCreateIndex()
{
return pEnv->CallBooleanMethod(jObject,meth_isCreateIndex);
}

int32_t ProxyLbmIndexScanStreamDef::getRowLimitParamId()
{
return pEnv->CallIntMethod(jObject,meth_getRowLimitParamId);
}

int32_t ProxyLbmIndexScanStreamDef::getStartRidParamId()
{
return pEnv->CallIntMethod(jObject,meth_getStartRidParamId);
}

int32_t ProxyLbmIntersectStreamDef::getRowLimitParamId()
{
return pEnv->CallIntMethod(jObject,meth_getRowLimitParamId);
}

int32_t ProxyLbmIntersectStreamDef::getStartRidParamId()
{
return pEnv->CallIntMethod(jObject,meth_getStartRidParamId);
}

int32_t ProxyLbmSplicerStreamDef::getRowCountParamId()
{
return pEnv->CallIntMethod(jObject,meth_getRowCountParamId);
}

int32_t ProxyLbmUnionStreamDef::getRidLimitParamId()
{
return pEnv->CallIntMethod(jObject,meth_getRidLimitParamId);
}

int32_t ProxyLbmUnionStreamDef::getConsumerSridParamId()
{
return pEnv->CallIntMethod(jObject,meth_getConsumerSridParamId);
}

int32_t ProxyLbmUnionStreamDef::getSegmentLimitParamId()
{
return pEnv->CallIntMethod(jObject,meth_getSegmentLimitParamId);
}

bool ProxyLcsClusterAppendStreamDef::isOverwrite()
{
return pEnv->CallBooleanMethod(jObject,meth_isOverwrite);
}

SharedProxyTupleProjection ProxyLcsClusterAppendStreamDef::getClusterColProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getClusterColProj);
if (!p->jObject) p.reset();
return p;
}

SharedProxyTupleDescriptor ProxyLcsClusterScanDef::getClusterTupleDesc()
{
SharedProxyTupleDescriptor p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getClusterTupleDesc);
if (!p->jObject) p.reset();
return p;
}

SharedProxyLcsRowScanStreamDef ProxyLcsClusterScanDef::getRowScan()
{
SharedProxyLcsRowScanStreamDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getRowScan);
if (!p->jObject) p.reset();
return p;
}

SharedProxyTupleProjection ProxyLcsRowScanStreamDef::getOutputProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getOutputProj);
if (!p->jObject) p.reset();
return p;
}

bool ProxyLcsRowScanStreamDef::isFullScan()
{
return pEnv->CallBooleanMethod(jObject,meth_isFullScan);
}

bool ProxyLcsRowScanStreamDef::isHasExtraFilter()
{
return pEnv->CallBooleanMethod(jObject,meth_isHasExtraFilter);
}

SharedProxyLcsClusterScanDef ProxyLcsRowScanStreamDef::getClusterScan()
{
SharedProxyLcsClusterScanDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getClusterScan);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

SharedProxyTupleProjection ProxyLhxJoinStreamDef::getLeftKeyProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getLeftKeyProj);
if (!p->jObject) p.reset();
return p;
}

SharedProxyTupleProjection ProxyLhxJoinStreamDef::getRightKeyProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getRightKeyProj);
if (!p->jObject) p.reset();
return p;
}

int32_t ProxyLhxJoinStreamDef::getNumBuildRows()
{
return pEnv->CallIntMethod(jObject,meth_getNumBuildRows);
}

int32_t ProxyLhxJoinStreamDef::getCndBuildKeys()
{
return pEnv->CallIntMethod(jObject,meth_getCndBuildKeys);
}

bool ProxyMergeStreamDef::isSequential()
{
return pEnv->CallBooleanMethod(jObject,meth_isSequential);
}

int64_t ProxyMockTupleStreamDef::getRowCount()
{
return pEnv->CallLongMethod(jObject,meth_getRowCount);
}

Distinctness ProxySortingStreamDef::getDistinctness()
{
std::string symbol = constructString(JniUtil::toString(pEnv,pEnv->CallObjectMethod(jObject,meth_getDistinctness)));
return static_cast<Distinctness>(JniUtil::lookUpEnum(Distinctness_names,symbol));
}

SharedProxyTupleProjection ProxyTableUpdaterDef::getUpdateProj()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getUpdateProj);
if (!p->jObject) p.reset();
return p;
}

SharedProxyIndexWriterDef ProxyTableWriterDef::getIndexWriter()
{
SharedProxyIndexWriterDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getIndexWriter);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

int32_t ProxyTupleAccessor::getMinByteLength()
{
return pEnv->CallIntMethod(jObject,meth_getMinByteLength);
}

int32_t ProxyTupleAccessor::getBitFieldOffset()
{
return pEnv->CallIntMethod(jObject,meth_getBitFieldOffset);
}

SharedProxyTupleAttrAccessor ProxyTupleAccessor::getAttrAccessor()
{
SharedProxyTupleAttrAccessor p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getAttrAccessor);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

int32_t ProxyTupleAttrAccessor::getNullBitIndex()
{
return pEnv->CallIntMethod(jObject,meth_getNullBitIndex);
}

int32_t ProxyTupleAttrAccessor::getFixedOffset()
{
return pEnv->CallIntMethod(jObject,meth_getFixedOffset);
}

int32_t ProxyTupleAttrAccessor::getEndIndirectOffset()
{
return pEnv->CallIntMethod(jObject,meth_getEndIndirectOffset);
}

int32_t ProxyTupleAttrAccessor::getBitValueIndex()
{
return pEnv->CallIntMethod(jObject,meth_getBitValueIndex);
}

bool ProxyTupleAttrDescriptor::isNullable()
{
return pEnv->CallBooleanMethod(jObject,meth_isNullable);
}

int32_t ProxyTupleAttrDescriptor::getTypeOrdinal()
{
return pEnv->CallIntMethod(jObject,meth_getTypeOrdinal);
}

int32_t ProxyTupleAttrDescriptor::getByteLength()
{
return pEnv->CallIntMethod(jObject,meth_getByteLength);
}

int32_t ProxyTupleAttrProjection::getAttributeIndex()
{
return pEnv->CallIntMethod(jObject,meth_getAttributeIndex);
}

SharedProxyTupleAttrDescriptor ProxyTupleDescriptor::getAttrDescriptor()
{
SharedProxyTupleAttrDescriptor p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getAttrDescriptor);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

SharedProxyTupleAttrProjection ProxyTupleProjection::getAttrProjection()
{
SharedProxyTupleAttrProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getAttrProjection);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

SharedProxyStreamGraphHandle ProxyTupleStreamGraphCmd::getStreamGraphHandle()
{
SharedProxyStreamGraphHandle p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getStreamGraphHandle);
if (!p->jObject) p.reset();
return p;
}

SharedProxyTxnHandle ProxyTxnCmd::getTxnHandle()
{
SharedProxyTxnHandle p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getTxnHandle);
if (!p->jObject) p.reset();
return p;
}

std::string ProxyValuesStreamDef::getTupleBytesBase64()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getTupleBytesBase64));
}

int32_t ProxyWindowDef::getOffset()
{
return pEnv->CallIntMethod(jObject,meth_getOffset);
}

SharedProxyTupleProjection ProxyWindowDef::getOrderKeyList()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getOrderKeyList);
if (!p->jObject) p.reset();
return p;
}

bool ProxyWindowDef::isPhysical()
{
return pEnv->CallBooleanMethod(jObject,meth_isPhysical);
}

std::string ProxyWindowDef::getRange()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getRange));
}

SharedProxyWindowPartitionDef ProxyWindowDef::getPartition()
{
SharedProxyWindowPartitionDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getPartition);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

SharedProxyWindowStreamDef ProxyWindowDef::getWindowStream()
{
SharedProxyWindowStreamDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getWindowStream);
if (!p->jObject) p.reset();
return p;
}

SharedProxyWindowDef ProxyWindowPartitionDef::getWindow()
{
SharedProxyWindowDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getWindow);
if (!p->jObject) p.reset();
return p;
}

SharedProxyTupleProjection ProxyWindowPartitionDef::getPartitionKeyList()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getPartitionKeyList);
if (!p->jObject) p.reset();
return p;
}

std::string ProxyWindowPartitionDef::getInitializeProgram()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getInitializeProgram));
}

std::string ProxyWindowPartitionDef::getAddProgram()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getAddProgram));
}

std::string ProxyWindowPartitionDef::getDropProgram()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getDropProgram));
}

SharedProxyTupleDescriptor ProxyWindowPartitionDef::getBucketDesc()
{
SharedProxyTupleDescriptor p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getBucketDesc);
if (!p->jObject) p.reset();
return p;
}

bool ProxyWindowStreamDef::isFilter()
{
return pEnv->CallBooleanMethod(jObject,meth_isFilter);
}

std::string ProxyWindowStreamDef::getOutputProgram()
{
return constructString(pEnv->CallObjectMethod(jObject,meth_getOutputProgram));
}

SharedProxyTupleProjection ProxyWindowStreamDef::getInputOrderKeyList()
{
SharedProxyTupleProjection p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getInputOrderKeyList);
if (!p->jObject) p.reset();
return p;
}

SharedProxyWindowDef ProxyWindowStreamDef::getWindow()
{
SharedProxyWindowDef p;
p->pEnv = pEnv;
p->jObject = pEnv->CallObjectMethod(jObject,meth_getWindow);
p.jIter = JniUtil::getIter(p->pEnv,p->jObject);
++p;
return p;
}

