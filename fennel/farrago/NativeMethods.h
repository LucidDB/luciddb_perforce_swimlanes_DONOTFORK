/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_sf_farrago_fennel_FennelStorage */

#ifndef _Included_net_sf_farrago_fennel_FennelStorage
#define _Included_net_sf_farrago_fennel_FennelStorage
#ifdef __cplusplus
extern "C" {
#endif
#undef net_sf_farrago_fennel_FennelStorage_CLOSE_RESULT
#define net_sf_farrago_fennel_FennelStorage_CLOSE_RESULT 0L
#undef net_sf_farrago_fennel_FennelStorage_CLOSE_ABORT
#define net_sf_farrago_fennel_FennelStorage_CLOSE_ABORT 1L
#undef net_sf_farrago_fennel_FennelStorage_CLOSE_DEALLOCATE
#define net_sf_farrago_fennel_FennelStorage_CLOSE_DEALLOCATE 2L
/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    newObjectHandle
 * Signature: (Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_farrago_fennel_FennelStorage_newObjectHandle
  (JNIEnv *, jclass, jobject);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    deleteObjectHandle
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_net_sf_farrago_fennel_FennelStorage_deleteObjectHandle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    setObjectHandle
 * Signature: (JLjava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_net_sf_farrago_fennel_FennelStorage_setObjectHandle
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    getHandleCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_sf_farrago_fennel_FennelStorage_getHandleCount
  (JNIEnv *, jclass);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    getAccessorXmiForTupleDescriptor
 * Signature: (Lnet/sf/farrago/fem/fennel/FemTupleDescriptor;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_net_sf_farrago_fennel_FennelStorage_getAccessorXmiForTupleDescriptor
  (JNIEnv *, jclass, jobject);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    executeJavaCmd
 * Signature: (Lnet/sf/farrago/fem/fennel/FemCmd;J)J
 */
JNIEXPORT jlong JNICALL Java_net_sf_farrago_fennel_FennelStorage_executeJavaCmd
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    tupleStreamGraphGetInputStreams
 * Signature: (JLjava/lang/String;Ljava/util/List;)V
 */
JNIEXPORT void JNICALL Java_net_sf_farrago_fennel_FennelStorage_tupleStreamGraphGetInputStreams
  (JNIEnv *, jclass, jlong, jstring, jobject);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    tupleStreamGraphOpen
 * Signature: (JJLnet/sf/farrago/fennel/FennelJavaStreamMap;Lnet/sf/farrago/fennel/FennelJavaErrorTarget;)V
 */
JNIEXPORT void JNICALL Java_net_sf_farrago_fennel_FennelStorage_tupleStreamGraphOpen
  (JNIEnv *, jclass, jlong, jlong, jobject, jobject);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    tupleStreamFetch
 * Signature: (J[B)I
 */
JNIEXPORT jint JNICALL Java_net_sf_farrago_fennel_FennelStorage_tupleStreamFetch
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    tupleStreamTransformFetch
 * Signature: (JI[B)I
 */
JNIEXPORT jint JNICALL Java_net_sf_farrago_fennel_FennelStorage_tupleStreamTransformFetch
  (JNIEnv *, jclass, jlong, jint, jbyteArray);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    tupleStreamRestart
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_net_sf_farrago_fennel_FennelStorage_tupleStreamRestart
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    tupleStreamSetRunnable
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_net_sf_farrago_fennel_FennelStorage_tupleStreamSetRunnable
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    tupleStreamGraphClose
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_sf_farrago_fennel_FennelStorage_tupleStreamGraphClose
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    newExecutionHandle
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_net_sf_farrago_fennel_FennelStorage_newExecutionHandle
  (JNIEnv *, jclass);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    deleteExecutionHandle
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_net_sf_farrago_fennel_FennelStorage_deleteExecutionHandle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_sf_farrago_fennel_FennelStorage
 * Method:    cancelExecution
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_net_sf_farrago_fennel_FennelStorage_cancelExecution
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
