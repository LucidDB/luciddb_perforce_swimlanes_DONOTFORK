<?xml version="1.0" ?>
<!-- $Id: //open/lu/dev/fennel/common/FennelResource.xml#2 $ -->

<resourceBundle
  static="false"
  locale="en_US"
  cppNamespace="fennel"
  cppCommonInclude="CommonPreamble.h">
  <!-- additional attributes for resourceBundle:
       cppExceptionClassName: Name of an exception class to use if
                              none is specified for a given exception
                              element.
       cppExceptionClassLocation: Header file for previous.
       cppChainExceptions: set to "true" if exceptions support
                           chaining.  Requires all exception types to
                           have two constructors: one that takes
                           std::string, and another that takes
                           std::string and a const T * const where T
                           is the C++ exception class. -->


  <!-- Example resource message with an exception.  Commented out 
       because Fennel does not use the exception generation mechanism.
       Attributes specified here override the above
       cppExceptionClassName and cppExceptionClassLocation
       attributes. 

  <exception
    id="2"
    name="exampleError"
    cppClassName="ExampleExcn" cppClassLocation="fennel/common/SysCallExcn.h">
    <text>Whoops: {0}</text>
  </exception>

  -->

  <!-- NOTE: message id range 440000-450000 is reserved to avoid
  overlap with Farrago -->

  <message id="440010" name="sysCallFailed">
    <text>System call failed:  {0}</text>
  </message>

  <message id="440020" name="duplicateKeyDetected">
    <text>Duplicate key detected:  {0}</text>
  </message>

  <message id="440030" name="internalError">
    <text>Internal error:  {0}</text>
  </message>

  <message id="440040" name="executionAborted">
    <text>Execution aborted</text>
  </message>

  <message id="440050" name="rowTooLong">
    <text>Row size ({0,number,#} bytes) exceeds maximum ({1,number,#} bytes); row data:  {2}</text>
  </message>

  <message id="440060" name="rowTypeTooLong">
    <text>Maximum row size ({0,number,#} bytes) exceeds limit ({1,number,#} bytes)</text>
  </message>

  <!-- message id range 441000-441999 reserved for external data wrapper -->

  <message id="441000" name="readDataFailed">
    <text>Could not access data file {0}: {1}</text>
  </message>

  <message id="441000" name="dataTransferFailed">
    <text>Failed to access file {0} (size {1,number,#} bytes)</text>
  </message>

  <message id="441010" name="writeLogFailed">
    <text>Could not write to log file {0}: {1}</text>
  </message>

  <message id="441020" name="noRowsReturned">
    <text>No rows were read from file {0}; last error was: {1}</text>
  </message>

  <message id="441030" name="errorsEncountered">
    <text>Errors were encountered while processing file {0}; please see log file {1} for more information</text>
  </message>

  <message id="441040" name="noRowDelimiter">
    <text>Data file {0} has no row delimiter</text>
  </message>

  <message id="441050" name="incompleteColumn">
    <text>column has no delimiter</text>
  </message>

  <message id="441060" name="noColumnDelimiter">
    <text>row has no column delimiter</text>
  </message>

  <message id="441070" name="tooFewColumns">
    <text>row has too few columns</text>
  </message>

  <message id="441080" name="tooManyColumns">
    <text>row has too many columns</text>
  </message>

  <message id="441090" name="rowTextTooLong">
    <text>row text was too large</text>
  </message>

</resourceBundle>

