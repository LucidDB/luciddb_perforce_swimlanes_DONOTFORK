<?xml version="1.0" encoding="utf-8"?>
<!-- $Id$ -->
<!-- Delegating build script used by Cruise Control to build fennel. -->
<project name="build-fennel" default="build">
	<property environment="env"/>

	<!-- perforce properties -->
	<property file="${open_propfile}"/>
	<property name="p4.client" value="${env.USER}.${env.HOSTNAME}"/>


	<!-- regular vs. integration build locations -->
	<property name="default.build.home" location="."/>
	<property name="integration.build.home" location="./build"/>


	<!-- by default we build "with farrago" and "with tests" -->
	<property name="fennel.init.arg" value="--with-farrago"/>
        <property name="fennel.init.tests.arg" value="--with-tests"/>

	<!-- perforce synchronization target -->
	<target name="sync" description="Synchronize the Fennel project" unless="no-sync">
		<p4sync view="${open_root}/fennel/..." failonerror="true"/>
		<p4sync view="${open_root}/util/..." failonerror="true"/>
	</target>

	<!-- basic build targets -->
	<target name="test"
	        depends="build"
	        description="Build and test the Fennel project and its dependencies in situ -- not compatible with integration builds">
		<antcall target="do-test"/>
	</target>

	<target name="cleanbuild"
	        depends="thirdparty"
	        description="Configure and build the Fennel project and its dependencies in situ -- not compatible with integration builds">
		<antcall target="do-cleanbuild"/>
	</target>

	<target name="build"
	        depends="thirdparty"
	        description="Build the Fennel project and its dependencies in situ -- not compatible with integration builds">
		<antcall target="do-build"/>
	</target>

	<target name="thirdparty">
		<antcall target="do-thirdparty"/>
	</target>


	<!-- continuous intregration targets -->
	<target name="integration-build-and-test"
	        depends="integration-test"
	        description="Configure, build and test the Fennel project and its dependencies in a clean tree"/>

	<target name="integration-test" depends="integration-build">
		<antcall target="do-test">
			<param name="build.home" location="${integration.build.home}"/>
		</antcall>
	</target>

	<target name="integration-build"
	        depends="integration-copy,integration-thirdparty">
		<antcall target="do-cleanbuild">
			<param name="build.home" location="${integration.build.home}"/>
		</antcall>
	</target>

	<target name="integration-copy" depends="sync">
		<delete dir="${integration.build.home}/fennel"/>
		<mkdir dir="${integration.build.home}/fennel"/>

		<!-- ant's copy task doesn't preserve permissions -->
		<echo message="Copying ./fennel to ${integration.build.home}/"/>
		<exec dir="${default.build.home}" executable="cp" failonerror="true">
			<arg value="-pr"/>
			<arg value="./fennel/"/>
			<arg value="${integration.build.home}/"/>
		</exec>

		<echo message="Copying ./util to ${integration.build.home}/"/>
		<exec dir="${default.build.home}" executable="cp" failonerror="true">
			<arg value="-pr"/>
			<arg value="./util/"/>
			<arg value="${integration.build.home}/"/>
		</exec>
	</target>

	<target name="integration-thirdparty">
		<antcall target="do-thirdparty">
			<param name="build.target" value="integration-build"/>
		</antcall>
	</target>


	<!-- helper targets -->

  <!-- TODO jvs 21-Sept-2004: remove once Fennel unit tests work on Windows -->
	<target name="os.check">
	    <condition property="os.windows">
                <os family="windows"/>
	    </condition>
	    <mkdir dir="${build.home}/fennel/test/.testlog" />
	</target>

	<target name="do-test" depends="os.check" unless="os.windows">
		<property name="build.home" location="${default.build.home}"/>
		<exec dir="${build.home}/fennel" executable="make" failonerror="true">
			<arg value="check"/>
			<env key="FENNEL_HOME" file="${build.home}/fennel"/>
			<env key="LD_LIBRARY_PATH" path="${build.home}/thirdparty/icu/lib:${build.home}/fennel/.libs:${build.home}/fennel/test/.libs:${build.home}/fennel/farrago/.libs:${build.home}/thirdparty/boost/lib:${build.home}/thirdparty/stlport/lib:${env.LD_LIBRARY_PATH}"/>
		</exec>
	</target>

	<target name="do-cleanbuild">
		<property name="build.home" location="${default.build.home}"/>
		<exec dir="${build.home}/fennel" executable="bash" failonerror="true">
			<arg value="${build.home}/fennel/initBuild.sh"/>
			<arg value="${fennel.init.arg}"/>
			<arg value="${fennel.init.tests.arg}"/>
		</exec>
	</target>

	<target name="do-build">
		<property name="build.home" location="${default.build.home}"/>
		<exec dir="${build.home}/fennel" executable="make" failonerror="true"/>
	</target>

	<target name="do-thirdparty">
		<property name="build.target" value="build"/>
		<ant antfile="build-thirdparty.xml"
		     target="${build.target}"
		     inheritAll="false">
		    <propertyset>
		        <propertyref prefix="open_"/>
		    </propertyset>
		</ant>
	</target>
</project>
