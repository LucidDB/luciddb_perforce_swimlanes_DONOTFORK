<!-- This file is an XML fragment with the -->
<!-- CruiseControl config for Aspen -->
<!-- This file must be preprocessed by config-aspen-generate to generate config-aspen.xml DELETETOKEN -->


	<project name="ASPENTARGET&configSuffix;">
		<labelincrementer defaultLabel="ASPENTARGET.1"/>

		<!-- Bootstrappers are run with every build before mod checks -->
		<bootstrappers>
			<!-- <currentbuildstatusbootstrapper file="logs/ASPENTARGET/currentbuildstatus.txt"/> -->
			<p4bootstrapper port="&open_p4port;" client="&open_p4client;" user="&open_p4user;" view="&open_root;/bootstrap/..."/>
		</bootstrappers>

                <listeners>
                  <currentbuildstatuslistener file="logs/ASPENTARGET/currentbuildstatus.txt"/>
                  <currentbuildstatuslistener file="&open_default.build.home;/../web/logs/ASPENTARGET&configSuffix;/currentbuildstatus.txt"/> 
                </listeners>


		<!-- Defines where cruise looks for changes, to decide whether to run the build -->
		<modificationset quietperiod="300">
			<p4 port="&aspen_p4port;" client="&aspen_p4client;" user="&aspen_p4user;" view="//depot/aspen/..."/>
			<p4 port="&open_p4port;" client="&open_p4client;" user="&open_p4user;" view="&open_root;/farrago/..."/>
			<p4 port="&open_p4port;" client="&open_p4client;" user="&open_p4user;" view="&open_root;/fennel/..."/>
			<p4 port="&open_p4port;" client="&open_p4client;" user="&open_p4user;" view="&open_root;/thirdparty/..."/>
			<timebuild time="0400"/> <!-- force build every four hours -->
		</modificationset>


		<!-- Configures the actual build loop, how often and which build file/target -->
		<schedule interval="&build_interval_aspen;">
			<ant buildfile="&open_default.build.home;/build-aspen.xml" uselogger="true" usedebug="false" antscript="&ant;" target="entry-target-ASPENTARGET">
			    <property name="open_propfile" value="&open_propfile;"/>
			    <property name="open_root" value="&open_root;"/>
			</ant>
		</schedule>

		<!-- directory to write build logs to -->
		<log dir="logs/ASPENTARGET">
			<merge dir="&open_integration.build.home;/aspen/testlog"/>
		</log>

		<!-- Publishers are run *after* a build completes -->
		<publishers>
			<!-- currentbuildstatuspublisher file="logs/ASPENTARGET/currentbuildstatus.txt"/ -->

			<artifactspublisher dir="&open_integration.build.home;/fennel/trace" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="fennel_trace"/>
			<artifactspublisher dir="&open_integration.build.home;/farrago/trace" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="farrago_trace"/>
			<artifactspublisher dir="&open_integration.build.home;/farrago/unitsql" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="farrago_unitsql"/>
			<artifactspublisher dir="&open_integration.build.home;/farrago/initsql" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="farrago_initsql"/>
			<artifactspublisher dir="&open_integration.build.home;/farrago/regressionsql" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="farrago_regressionsql"/>
			<artifactspublisher dir="&open_integration.build.home;/farrago/testlog" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="farrago_testlog"/>
			<artifactspublisher dir="&open_integration.build.home;/aspen/cpp/aspen/trace" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="aspen_cpp_trace"/>
			<artifactspublisher dir="&open_integration.build.home;/aspen/testlog" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="testlog"/>
			<artifactspublisher dir="&open_integration.build.home;/aspen/initsql" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="initsql"/>
			<artifactspublisher dir="&open_integration.build.home;/aspen/unitsql" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="unitsql"/>
			<artifactspublisher dir="&open_integration.build.home;/aspen/trace" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="trace"/>
			<artifactspublisher dir="&open_integration.build.home;/aspen/testcases" dest="artifacts/ASPENTARGET&configSuffix;" subdirectory="testcases"/>
                        <artifactspublisher file="&open_integration.build.home;/aspen/classes/FarragoRelease.properties" dest="artifacts/ASPENTARGET&configSuffix;"/>

			<!-- sync up artifacts on jsp machine: CC's scp would copy everything -->
			<execute command="&rsync_cmd; artifacts/ASPENTARGET&configSuffix; &rsync_dest;"/>

			<scp sourcedir="logs/ASPENTARGET"
			     targetuser="&scp_user;"
			     targethost="&scp_host;"
			     targetseparator="&scp_filesep;"
			     targetdir="web/logs/ASPENTARGET&configSuffix;"
                             options="&scp_options;"/>
			
			<scp sourcedir="logs/ASPENTARGET"
			     file="currentbuildstatus.txt"
			     targetuser="&scp_user;"
			     targethost="&scp_host;"
			     targetseparator="&scp_filesep;"
			     targetdir="web/logs/ASPENTARGET&configSuffix;"
                             options="&scp_options;"/>
			
			<email buildresultsurl="&buildresultsbase;/ASPENTARGET&configSuffix;"
			       mailhost="&mailhost;"
			       reportsuccess="&reportsuccess;"
			       returnname="&returnname;"
			       returnaddress="&returnaddress;"
			       skipusers="&skipusers;"
			       spamwhilebroken="&spamwhilebroken;"
			       subjectprefix="&subjectprefix;">
				<always address="&failureaddress;"/>
			</email>
		</publishers>
	</project>


